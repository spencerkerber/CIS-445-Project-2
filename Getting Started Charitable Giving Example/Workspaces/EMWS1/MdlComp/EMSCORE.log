MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" 
);
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:01:46" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 11, 2015
Time:                15:01:46
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GK0A5L "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ 
Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMSCORE.out" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GK0A5L new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.53 seconds
      cpu time            0.50 seconds
      
63840      /* Generate assessment metadata, which will be used to generate assessment data step
63840    !  */
63841      /* code, such as retrieving names of temporary variables and summary variables,
63841    !  */
63842      /* labels, etc.  It is used in almost all the assessment computations such as lift,
63842    !  */
63843      /* roc, index, scoreDist and could be thought as a global variable in assessment
63843    !  */
63844      /* computation.
63844    !  */
63845      data work.ASSESS_3VL4L2Y_assessMeta_b_3HKx;
MPRINT(EM_DIAGRAM):    data work.ASSESS_3VL4L2Y_assessMeta_b_3HKx;
63846      length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
63846    ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
63846    ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
63846    ! RESULT_MAX $32 RESULT_MAX_LABEL
63847         $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
63847    !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
63848      VARIABLE = "TARGET_B";
MPRINT(EM_DIAGRAM):   VARIABLE = "TARGET_B";
63849      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
63850      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63851      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63852      LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
63853      PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
63854      MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
63855      LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
63856      GEN_VAR_IN_TEMP_DATA = "TARGET_B";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "TARGET_B";
63857      RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
63858      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63859      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63860      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63861      MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
63862      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63863      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63864      MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
63865      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
63866      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
63867      TEMPORARY_VARIABLE = "TARGET_B_nttcfHoBhFhCwGO";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "TARGET_B_nttcfHoBhFhCwGO";
63868      output;
MPRINT(EM_DIAGRAM):   output;
63869      VARIABLE = "F_TARGET_B_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_TARGET_B_1";
63870      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63871      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63872      PARENT = "F_TARGET_B";
MPRINT(EM_DIAGRAM):   PARENT = "F_TARGET_B";
63873      LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
63874      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
63875      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
63876      LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
63877      GEN_VAR_IN_TEMP_DATA = "F_TARGET_B_1_HLFEhWpyFPqMX_U";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_TARGET_B_1_HLFEhWpyFPqMX_U";
63878      RESULT_MEAN = "F_TARGET_B_mean_1mxvBTr2Lhh4OIX";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_TARGET_B_mean_1mxvBTr2Lhh4OIX";
63879      /* adjust for tied cases */
63880      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63881      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63882      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63883      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63884      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63885      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
63886      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
63886    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
63887      TEMPORARY_VARIABLE = "F_TARGET_B_1_cap50VpTyhHGSRT";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_TARGET_B_1_cap50VpTyhHGSRT";
63888      output;
MPRINT(EM_DIAGRAM):   output;
63889      VARIABLE = "F_TARGET_B_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_TARGET_B_0";
63890      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63891      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63892      PARENT = "F_TARGET_B";
MPRINT(EM_DIAGRAM):   PARENT = "F_TARGET_B";
63893      LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
63894      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
63895      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
63896      LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
63897      GEN_VAR_IN_TEMP_DATA = "F_TARGET_B_0_ES8WwTorOalgrQ9";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_TARGET_B_0_ES8WwTorOalgrQ9";
63898      RESULT_MEAN = "F_TARGET_B_mean_EPxdArESE3Q5jEA";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_TARGET_B_mean_EPxdArESE3Q5jEA";
63899      /* adjust for tied cases */
63900      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63901      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63902      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63903      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63904      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63905      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
63906      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
63906    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
63907      TEMPORARY_VARIABLE = "F_TARGET_B_0_q4RZiGC4R2w4MVE";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_TARGET_B_0_q4RZiGC4R2w4MVE";
63908      output;
MPRINT(EM_DIAGRAM):   output;
63909      VARIABLE = "D_TARGET_B";
MPRINT(EM_DIAGRAM):   VARIABLE = "D_TARGET_B";
63910      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63911      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63912      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
63913      LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
63914      PROPERTY = "MODEL_DECISION";
MPRINT(EM_DIAGRAM):   PROPERTY = "MODEL_DECISION";
63915      MEASUREMENT = '';
MPRINT(EM_DIAGRAM):   MEASUREMENT = '';
63916      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
63917      GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_0Pc67ZZJm0cvAoP";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_0Pc67ZZJm0cvAoP";
63918      RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
63919      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63920      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63921      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63922      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63923      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63924      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
63925      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
63926      TEMPORARY_VARIABLE = "D_TARGET_B_UJpyVODB1mqZc3r";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "D_TARGET_B_UJpyVODB1mqZc3r";
63927      output;
MPRINT(EM_DIAGRAM):   output;
63928      VARIABLE = "D_TARGET_B_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "D_TARGET_B_1";
63929      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63930      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63931      PARENT = "D_TARGET_B";
MPRINT(EM_DIAGRAM):   PARENT = "D_TARGET_B";
63932      LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
63933      PROPERTY = "MODEL_DECISION_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "MODEL_DECISION_LEVEL";
63934      MEASUREMENT = 'INTERVAL';
MPRINT(EM_DIAGRAM):   MEASUREMENT = 'INTERVAL';
63935      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
63936      GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_1_sulAfGC2_4tRe79";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_1_sulAfGC2_4tRe79";
63937      RESULT_MEAN = "D_TARGET_B_mean_MBSI_0rgtG9ThSg";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "D_TARGET_B_mean_MBSI_0rgtG9ThSg";
63938      /* adjust for tied cases */
63939      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63940      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63941      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63942      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63943      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63944      RESULT_COUNT = "D_TARGET_B_1";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "D_TARGET_B_1";
63945      RESULT_COUNT_LABEL = "Baseline Number of Events";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Baseline Number of Events";
63946      TEMPORARY_VARIABLE = "D_TARGET_B_1_4NL3hRvxLl6AZcM";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "D_TARGET_B_1_4NL3hRvxLl6AZcM";
63947      output;
MPRINT(EM_DIAGRAM):   output;
63948      VARIABLE = "D_TARGET_B_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "D_TARGET_B_0";
63949      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63950      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63951      PARENT = "D_TARGET_B";
MPRINT(EM_DIAGRAM):   PARENT = "D_TARGET_B";
63952      LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
63953      PROPERTY = "MODEL_DECISION_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "MODEL_DECISION_LEVEL";
63954      MEASUREMENT = 'INTERVAL';
MPRINT(EM_DIAGRAM):   MEASUREMENT = 'INTERVAL';
63955      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
63956      GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_0_z1cS9MA2BTUfKVm";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "D_TARGET_B_0_z1cS9MA2BTUfKVm";
63957      RESULT_MEAN = "D_TARGET_B_mean_zpFcDpIsyGo5CsM";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "D_TARGET_B_mean_zpFcDpIsyGo5CsM";
63958      /* adjust for tied cases */
63959      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
63960      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
63961      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
63962      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
63963      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
63964      RESULT_COUNT = "D_TARGET_B_0";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "D_TARGET_B_0";
63965      RESULT_COUNT_LABEL = "Baseline Number of Events";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Baseline Number of Events";
63966      TEMPORARY_VARIABLE = "D_TARGET_B_0_8nbhcPZCqD6jasW";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "D_TARGET_B_0_8nbhcPZCqD6jasW";
63967      output;
MPRINT(EM_DIAGRAM):   output;
63968      VARIABLE = "P_TARGET_B1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_TARGET_B1";
63969      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63970      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63971      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
63972      LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
63973      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
63974      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
63975      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
63976      GEN_VAR_IN_TEMP_DATA = "P_TARGET_B1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_TARGET_B1";
63977      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
63978      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
63978    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
63979      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
63980      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
63981      MIN_ADJUSTED = "P_TARGET_minAdjusted_c07dhQoJD";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_TARGET_minAdjusted_c07dhQoJD";
63982      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
63983      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
63984      MAX_ADJUSTED = "P_TARGET_maxAdjusted_3LhMQEwG2";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_TARGET_maxAdjusted_3LhMQEwG2";
63985      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
63986      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
63987      TEMPORARY_VARIABLE = "P_TARGET_B1_pwxBHc9KAbJTT5S";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_TARGET_B1_pwxBHc9KAbJTT5S";
63988      output;
MPRINT(EM_DIAGRAM):   output;
63989      VARIABLE = "P_TARGET_B0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_TARGET_B0";
63990      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
63991      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
63992      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
63993      LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
63994      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
63995      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
63996      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
63997      GEN_VAR_IN_TEMP_DATA = "P_TARGET_B0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_TARGET_B0";
63998      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
63999      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
63999    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
64000      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
64001      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
64002      MIN_ADJUSTED = "P_TARGET_minAdjusted_dDGvEq5Uo";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_TARGET_minAdjusted_dDGvEq5Uo";
64003      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
64004      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
64005      MAX_ADJUSTED = "P_TARGET_maxAdjusted_SLDoUU4fw";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_TARGET_maxAdjusted_SLDoUU4fw";
64006      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
64007      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
64008      TEMPORARY_VARIABLE = "P_TARGET_B0_BXhX2_23S1naXwy";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_TARGET_B0_BXhX2_23S1naXwy";
64009      output;
MPRINT(EM_DIAGRAM):   output;
64010      VARIABLE = "CP_TARGET_B";
MPRINT(EM_DIAGRAM):   VARIABLE = "CP_TARGET_B";
64011      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
64012      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
64013      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
64014      LEVEL = "";
MPRINT(EM_DIAGRAM):   LEVEL = "";
64015      PROPERTY = "COMPUTED_PROFIT";
MPRINT(EM_DIAGRAM):   PROPERTY = "COMPUTED_PROFIT";
64016      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
64017      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
64018      GEN_VAR_IN_TEMP_DATA = "CP_TARGET_B";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "CP_TARGET_B";
64019      RESULT_MEAN = "_meanCP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanCP_";
64020      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_profMean_vlabel,
64020    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Computed Profit";
64021      RESULT_MIN = "_minCP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minCP_";
64022      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_profMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Computed Profit";
64023      MIN_ADJUSTED = "CP_TARGE_minAdjusted_l4Q_vas87";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "CP_TARGE_minAdjusted_l4Q_vas87";
64024      RESULT_MAX = "_maxCP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxCP_";
64025      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_profMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Computed Profit";
64026      MAX_ADJUSTED = "CP_TARGE_maxAdjusted_cfqhoOOaQ";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "CP_TARGE_maxAdjusted_cfqhoOOaQ";
64027      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
64028      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
64029      TEMPORARY_VARIABLE = "CP_TARGET_B_NAZA5KnAc8FF_wY";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "CP_TARGET_B_NAZA5KnAc8FF_wY";
64030      output;
MPRINT(EM_DIAGRAM):   output;
64031      VARIABLE = "EP_TARGET_B";
MPRINT(EM_DIAGRAM):   VARIABLE = "EP_TARGET_B";
64032      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
64033      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
64034      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
64035      LEVEL = "";
MPRINT(EM_DIAGRAM):   LEVEL = "";
64036      PROPERTY = "EXPECTED_PROFIT";
MPRINT(EM_DIAGRAM):   PROPERTY = "EXPECTED_PROFIT";
64037      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
64038      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
64039      GEN_VAR_IN_TEMP_DATA = "EP_TARGET_B";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "EP_TARGET_B";
64040      RESULT_MEAN = "_meanEP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanEP_";
64041      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_expProfMean_vlabel,
64041    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Expected Profit";
64042      RESULT_MIN = "_minEP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minEP_";
64043      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_expProfMin_vlabel,
64043    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Expected Profit";
64044      MIN_ADJUSTED = "EP_TARGE_minAdjusted_wRE2EGUod";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "EP_TARGE_minAdjusted_wRE2EGUod";
64045      RESULT_MAX = "_maxEP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxEP_";
64046      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_expProfMax_vlabel,
64046    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Expected Profit";
64047      MAX_ADJUSTED = "EP_TARGE_maxAdjusted_qW90to9rS";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "EP_TARGE_maxAdjusted_qW90to9rS";
64048      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
64049      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
64050      TEMPORARY_VARIABLE = "EP_TARGET_B_qSMmrEPYL8rz6Hu";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "EP_TARGET_B_qSMmrEPYL8rz6Hu";
64051      output;
MPRINT(EM_DIAGRAM):   output;
64052      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_3VL4L2Y_ASSESSMETA_B_3HKX has 10 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

64053      /* Generate temporary dataset and obtain summary statistics such as total number of
64053    !   */
64054      /* obserations, frequency of target.  However, summary statistics for class
64054    ! reporting */
64055      /* variabels are not computed here since if there exist class reporting variables,
64055    !   */
64056      /* then PROC DMDB will be called. And there is no need to compute interval reporting
64056    !   */
64057      /* summary statisitcs, if any.
64057    !   */
64058      data work.ASSESS_3VL4L2Y_normSD_HY6hca(drop=
64059      _numberOfObservation_
64060      _levelFrequency_1
64061      _levelFrequency_2
64062      _computedProfitMean_
64063      )
64064      work.ASSESS_3VL4L2Y_meansAndTi_OZyvTi (keep=
64065      _numberOfObservation_
64066      _levelFrequency_1
64067      _levelFrequency_2
64068      _computedProfitMean_
64069      );
MPRINT(EM_DIAGRAM):    data work.ASSESS_3VL4L2Y_normSD_HY6hca(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 _computedProfitMean_ ) 
work.ASSESS_3VL4L2Y_meansAndTi_OZyvTi (keep= _numberOfObservation_ _levelFrequency_1 
_levelFrequency_2 _computedProfitMean_ );
64070      set EMWS1.Reg_TRAIN(
64071      where=(
64072      (TARGET_B ^= .)
64073      )
64074      ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_TRAIN( where=( (TARGET_B ^= .) ) ) end=_lastObservation_;
64075      keep frequency_HY4GVQ;
MPRINT(EM_DIAGRAM):   keep frequency_HY4GVQ;
64076      frequency_HY4GVQ = 1;
MPRINT(EM_DIAGRAM):   frequency_HY4GVQ = 1;
64077      keep I_TARGET_B F_TARGET_B;
MPRINT(EM_DIAGRAM):   keep I_TARGET_B F_TARGET_B;
64078      keep F_TARGET_B_1_HLFEhWpyFPqMX_U;
MPRINT(EM_DIAGRAM):   keep F_TARGET_B_1_HLFEhWpyFPqMX_U;
64079      if (F_TARGET_B = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_TARGET_B = '1') then do;
64080      F_TARGET_B_1_HLFEhWpyFPqMX_U = 1;
MPRINT(EM_DIAGRAM):   F_TARGET_B_1_HLFEhWpyFPqMX_U = 1;
64081      end;
MPRINT(EM_DIAGRAM):   end;
64082      else do;
MPRINT(EM_DIAGRAM):   else do;
64083      F_TARGET_B_1_HLFEhWpyFPqMX_U = 0;
MPRINT(EM_DIAGRAM):   F_TARGET_B_1_HLFEhWpyFPqMX_U = 0;
64084      end;
MPRINT(EM_DIAGRAM):   end;
64085      keep F_TARGET_B_0_ES8WwTorOalgrQ9;
MPRINT(EM_DIAGRAM):   keep F_TARGET_B_0_ES8WwTorOalgrQ9;
64086      if (F_TARGET_B = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_TARGET_B = '0') then do;
64087      F_TARGET_B_0_ES8WwTorOalgrQ9 = 1;
MPRINT(EM_DIAGRAM):   F_TARGET_B_0_ES8WwTorOalgrQ9 = 1;
64088      end;
MPRINT(EM_DIAGRAM):   end;
64089      else do;
MPRINT(EM_DIAGRAM):   else do;
64090      F_TARGET_B_0_ES8WwTorOalgrQ9 = 0;
MPRINT(EM_DIAGRAM):   F_TARGET_B_0_ES8WwTorOalgrQ9 = 0;
64091      end;
MPRINT(EM_DIAGRAM):   end;
64092      keep D_TARGET_B_1_sulAfGC2_4tRe79;
MPRINT(EM_DIAGRAM):   keep D_TARGET_B_1_sulAfGC2_4tRe79;
64093      if (D_TARGET_B = '1') then do;
MPRINT(EM_DIAGRAM):   if (D_TARGET_B = '1') then do;
64094      D_TARGET_B_1_sulAfGC2_4tRe79 = 1;
MPRINT(EM_DIAGRAM):   D_TARGET_B_1_sulAfGC2_4tRe79 = 1;
64095      end;
MPRINT(EM_DIAGRAM):   end;
64096      else do;
MPRINT(EM_DIAGRAM):   else do;
64097      D_TARGET_B_1_sulAfGC2_4tRe79 = 0;
MPRINT(EM_DIAGRAM):   D_TARGET_B_1_sulAfGC2_4tRe79 = 0;
64098      end;
MPRINT(EM_DIAGRAM):   end;
64099      keep D_TARGET_B_0_z1cS9MA2BTUfKVm;
MPRINT(EM_DIAGRAM):   keep D_TARGET_B_0_z1cS9MA2BTUfKVm;
64100      if (D_TARGET_B = '0') then do;
MPRINT(EM_DIAGRAM):   if (D_TARGET_B = '0') then do;
64101      D_TARGET_B_0_z1cS9MA2BTUfKVm = 1;
MPRINT(EM_DIAGRAM):   D_TARGET_B_0_z1cS9MA2BTUfKVm = 1;
64102      end;
MPRINT(EM_DIAGRAM):   end;
64103      else do;
MPRINT(EM_DIAGRAM):   else do;
64104      D_TARGET_B_0_z1cS9MA2BTUfKVm = 0;
MPRINT(EM_DIAGRAM):   D_TARGET_B_0_z1cS9MA2BTUfKVm = 0;
64105      end;
MPRINT(EM_DIAGRAM):   end;
64106      keep P_TARGET_B1;
MPRINT(EM_DIAGRAM):   keep P_TARGET_B1;
64107      keep P_TARGET_B0;
MPRINT(EM_DIAGRAM):   keep P_TARGET_B0;
64108      keep CP_TARGET_B;
MPRINT(EM_DIAGRAM):   keep CP_TARGET_B;
64109      rename CP_TARGET_B = CP_TARGET_B;
MPRINT(EM_DIAGRAM):   rename CP_TARGET_B = CP_TARGET_B;
64110      keep EP_TARGET_B;
MPRINT(EM_DIAGRAM):   keep EP_TARGET_B;
64111      rename EP_TARGET_B = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   rename EP_TARGET_B = EP_TARGET_B;
64112      output work.ASSESS_3VL4L2Y_normSD_HY6hca;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3VL4L2Y_normSD_HY6hca;
64113      keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
64114      retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
64115      _numberOfObservation_ + frequency_HY4GVQ;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_HY4GVQ;
64116      keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
64117      retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
64118      if (F_TARGET_B = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_TARGET_B = '1') then do;
64119      _levelFrequency_1 + frequency_HY4GVQ;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_HY4GVQ;
64120      end;
MPRINT(EM_DIAGRAM):   end;
64121      keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
64122      retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
64123      if (F_TARGET_B = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_TARGET_B = '0') then do;
64124      _levelFrequency_2 + frequency_HY4GVQ;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_HY4GVQ;
64125      end;
MPRINT(EM_DIAGRAM):   end;
64126      retain _computedProfitMean_ 0;
MPRINT(EM_DIAGRAM):   retain _computedProfitMean_ 0;
64127      keep _computedProfitMean_;
MPRINT(EM_DIAGRAM):   keep _computedProfitMean_;
64128      _computedProfitMean_ = frequency_HY4GVQ/_numberOfObservation_ *CP_TARGET_B +
64128    ! (_numberOfObservation_ -
64128    ! frequency_HY4GVQ)/_numberOfObservation_*_computedProfitMean_;
MPRINT(EM_DIAGRAM):   _computedProfitMean_ = frequency_HY4GVQ/_numberOfObservation_ 
*CP_TARGET_B + (_numberOfObservation_ - 
frequency_HY4GVQ)/_numberOfObservation_*_computedProfitMean_;
64129      if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
64130      output work.ASSESS_3VL4L2Y_meansAndTi_OZyvTi;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3VL4L2Y_meansAndTi_OZyvTi;
64131      end;
MPRINT(EM_DIAGRAM):   end;
64132      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.37 seconds
      
NOTE: There were 10654 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REG_TRAIN.
      WHERE TARGET_B not = .;
NOTE: The data set WORK.ASSESS_3VL4L2Y_NORMSD_HY6HCA has 10654 observations and 11 variables.
NOTE: The data set WORK.ASSESS_3VL4L2Y_MEANSANDTI_OZYVTI has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

64133      /* Adjust frequency in scored dataset since decision prior exists */
64134      data work.ASSESS_3VL4L2Y_normSD_HY6hca
64135      (drop=
64136      _computedProfitMean_
64137      )
64138      work.ASSESS_3VL4L2Y_meansAndTi_mtrM3l (keep=
64139      _computedProfitMean_
64140      )
64141      ;
MPRINT(EM_DIAGRAM):    data work.ASSESS_3VL4L2Y_normSD_HY6hca (drop= _computedProfitMean_ ) 
work.ASSESS_3VL4L2Y_meansAndTi_mtrM3l (keep= _computedProfitMean_ ) ;
64142      set work.ASSESS_3VL4L2Y_normSD_HY6hca
64143      end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set work.ASSESS_3VL4L2Y_normSD_HY6hca end=_lastObservation_;
64144      ;
MPRINT(EM_DIAGRAM):   ;
64145      if F_TARGET_B = '1' then do;
MPRINT(EM_DIAGRAM):   if F_TARGET_B = '1' then do;
64146      frequency_HY4GVQ = frequency_HY4GVQ * 0.05 * 10654 / 2664;
MPRINT(EM_DIAGRAM):   frequency_HY4GVQ = frequency_HY4GVQ * 0.05 * 10654 / 2664;
64147      end;
MPRINT(EM_DIAGRAM):   end;
64148      if F_TARGET_B = '0' then do;
MPRINT(EM_DIAGRAM):   if F_TARGET_B = '0' then do;
64149      frequency_HY4GVQ = frequency_HY4GVQ * 0.95 * 10654 / 7990;
MPRINT(EM_DIAGRAM):   frequency_HY4GVQ = frequency_HY4GVQ * 0.95 * 10654 / 7990;
64150      end;
MPRINT(EM_DIAGRAM):   end;
64151      retain _cumulativeFrequency_ 0;
MPRINT(EM_DIAGRAM):   retain _cumulativeFrequency_ 0;
64152      _cumulativeFrequency_ + frequency_HY4GVQ;
MPRINT(EM_DIAGRAM):   _cumulativeFrequency_ + frequency_HY4GVQ;
64153      drop _cumulativeFrequency_;
MPRINT(EM_DIAGRAM):   drop _cumulativeFrequency_;
64154      retain _computedProfitMean_ 0;
MPRINT(EM_DIAGRAM):   retain _computedProfitMean_ 0;
64155      _computedProfitMean_ = frequency_HY4GVQ/_cumulativeFrequency_ *CP_TARGET_B +
64155    ! (_cumulativeFrequency_ -
64155    ! frequency_HY4GVQ)/_cumulativeFrequency_*_computedProfitMean_;
MPRINT(EM_DIAGRAM):   _computedProfitMean_ = frequency_HY4GVQ/_cumulativeFrequency_ 
*CP_TARGET_B + (_cumulativeFrequency_ - 
frequency_HY4GVQ)/_cumulativeFrequency_*_computedProfitMean_;
64156      output work.ASSESS_3VL4L2Y_normSD_HY6hca;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3VL4L2Y_normSD_HY6hca;
64157      if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
64158      output work.ASSESS_3VL4L2Y_meansAndTi_mtrM3l;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3VL4L2Y_meansAndTi_mtrM3l;
64159      end;
MPRINT(EM_DIAGRAM):   end;
64160      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10654 observations read from the data set WORK.ASSESS_3VL4L2Y_NORMSD_HY6HCA.
NOTE: The data set WORK.ASSESS_3VL4L2Y_NORMSD_HY6HCA has 10654 observations and 11 variables.
NOTE: The data set WORK.ASSESS_3VL4L2Y_MEANSANDTI_MTRM3L has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

64161      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
64162      set EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK;
64163      where MODEL = "Reg" and TARGET = "TARGET_B" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Reg" and TARGET = "TARGET_B" and dataRole="TRAIN";
64164      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.MDLCOMP_EMRANK.
      WHERE (MODEL='Reg') and (TARGET='TARGET_B') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

64165      data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
64166      do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
64167      DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
64168      output;
MPRINT(EM_DIAGRAM):   output;
64169      end;
MPRINT(EM_DIAGRAM):   end;
64170      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

64171      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
64172      merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
64173      by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
64174      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

64175      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
64176      set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
64177      retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
64178      retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
64179      keep event;
MPRINT(EM_DIAGRAM):   keep event;
64180      keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
64181      if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
64182      bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
64183      _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
64184      if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
64185      /* tied */
64186      _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
64187      ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
64188      end;
MPRINT(EM_DIAGRAM):   end;
64189      else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
64190      /* next tied */
64191      _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
64192      ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
64193      end;
MPRINT(EM_DIAGRAM):   end;
64194      output;
MPRINT(EM_DIAGRAM):   output;
64195      *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
64196      * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
64197      *end;
MPRINT(EM_DIAGRAM):   *end;
64198      if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
64199      _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
64200      end;
MPRINT(EM_DIAGRAM):   end;
64201      else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
64202      if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
64203      _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
64204      end;
MPRINT(EM_DIAGRAM):   end;
64205      end;
MPRINT(EM_DIAGRAM):   end;
64206      bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
64207      /* correct the previous change */
64208      end;
MPRINT(EM_DIAGRAM):   end;
64209      if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
64210      _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
64211      output;
MPRINT(EM_DIAGRAM):   output;
64212      end;
MPRINT(EM_DIAGRAM):   end;
64213      _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
64214      _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
64215      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

64216      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
64217      set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
64218      by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
64219      retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
64220      if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
64221      _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
64222      end;
MPRINT(EM_DIAGRAM):   end;
64223      if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
64224      _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
64225      output;
MPRINT(EM_DIAGRAM):   output;
64226      end;
MPRINT(EM_DIAGRAM):   end;
64227      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of 
      this session.
64228      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting
64228    ! Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ 
Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring REG_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64229      *------------------------------------------------------------*;
64230      * MdlComp: Scoring REG_TRAIN data;
64231      *------------------------------------------------------------*;
64232      data EMWS1.MdlComp_TRAIN
64233      / view=EMWS1.MdlComp_TRAIN
64234      ;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_TRAIN / view=EMWS1.MdlComp_TRAIN ;
64235      set EMWS1.Reg_TRAIN
64236      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_TRAIN ;
64237      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ 
      Projects\Getting Started Charitable Giving 
      Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
64238     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
64239     +if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
64240     +b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
64241     +end;
MPRINT(EM_DIAGRAM):   end;
64242     +else
64243     +if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
64244     +b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
64245     +end;
MPRINT(EM_DIAGRAM):   end;
64246     +else
64247     +if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
64248     +b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
64249     +end;
MPRINT(EM_DIAGRAM):   end;
64250     +else
64251     +if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
64252     +b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
64253     +end;
MPRINT(EM_DIAGRAM):   end;
64254     +else
64255     +if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
64256     +b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
64257     +end;
MPRINT(EM_DIAGRAM):   end;
64258     +else
64259     +if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
64260     +b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
64261     +end;
MPRINT(EM_DIAGRAM):   end;
64262     +else
64263     +if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
64264     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64265     +b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
64266     +end;
MPRINT(EM_DIAGRAM):   end;
64267     +else
64268     +if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
64269     +b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
64270     +end;
MPRINT(EM_DIAGRAM):   end;
64271     +else
64272     +if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
64273     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64274     +b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
64275     +end;
MPRINT(EM_DIAGRAM):   end;
64276     +else
64277     +if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
64278     +b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
64279     +end;
MPRINT(EM_DIAGRAM):   end;
64280     +else
64281     +if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
64282     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64283     +b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
64284     +end;
MPRINT(EM_DIAGRAM):   end;
64285     +else
64286     +if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
64287     +b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
64288     +end;
MPRINT(EM_DIAGRAM):   end;
64289     +else
64290     +do;
MPRINT(EM_DIAGRAM):   else do;
64291     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64292     +b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
64293     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
64294      run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.29 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.32 seconds
      

MPRINT(EM_DIAGRAM):   quit;
64295      quit;
64296      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
64297      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting
64297    ! Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ 
Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring REG_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64298      *------------------------------------------------------------*;
64299      * MdlComp: Scoring REG_VALIDATE data;
64300      *------------------------------------------------------------*;
64301      data EMWS1.MdlComp_VALIDATE
64302      / view=EMWS1.MdlComp_VALIDATE
64303      ;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_VALIDATE / view=EMWS1.MdlComp_VALIDATE ;
64304      set EMWS1.Reg_VALIDATE
64305      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_VALIDATE ;
64306      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ 
      Projects\Getting Started Charitable Giving 
      Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
64307     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
64308     +if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
64309     +b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
64310     +end;
MPRINT(EM_DIAGRAM):   end;
64311     +else
64312     +if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
64313     +b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
64314     +end;
MPRINT(EM_DIAGRAM):   end;
64315     +else
64316     +if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
64317     +b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
64318     +end;
MPRINT(EM_DIAGRAM):   end;
64319     +else
64320     +if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
64321     +b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
64322     +end;
MPRINT(EM_DIAGRAM):   end;
64323     +else
64324     +if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
64325     +b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
64326     +end;
MPRINT(EM_DIAGRAM):   end;
64327     +else
64328     +if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
64329     +b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
64330     +end;
MPRINT(EM_DIAGRAM):   end;
64331     +else
64332     +if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
64333     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64334     +b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
64335     +end;
MPRINT(EM_DIAGRAM):   end;
64336     +else
64337     +if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
64338     +b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
64339     +end;
MPRINT(EM_DIAGRAM):   end;
64340     +else
64341     +if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
64342     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64343     +b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
64344     +end;
MPRINT(EM_DIAGRAM):   end;
64345     +else
64346     +if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
64347     +b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
64348     +end;
MPRINT(EM_DIAGRAM):   end;
64349     +else
64350     +if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
64351     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64352     +b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
64353     +end;
MPRINT(EM_DIAGRAM):   end;
64354     +else
64355     +if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
64356     +b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
64357     +end;
MPRINT(EM_DIAGRAM):   end;
64358     +else
64359     +do;
MPRINT(EM_DIAGRAM):   else do;
64360     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
64361     +b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
64362     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
64363      run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
64364      quit;
64365      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
64366      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
64367      * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
64368      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.MdlComp_TRAIN out=WORK.M0NE1WL0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NE1WL0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NE1WL0(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NE1WL0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NE1WL0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M37SKYBO NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PLQ6CD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   set WORK.M37SKYBO;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
      
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
