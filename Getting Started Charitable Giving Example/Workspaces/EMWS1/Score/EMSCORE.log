MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:07:15" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 11, 2015
Time:                15:07:15
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3DZVIQB "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3DZVIQB new;
MPRINT(EM_DIAGRAM):   run;
32784      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32785      *------------------------------------------------------------*;
32786      * Score: Scoring DATA data;
32787      *------------------------------------------------------------*;
32788      data EMWS1.Score_TRAIN
32789      / view=EMWS1.Score_TRAIN
32790      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_TRAIN / view=EMWS1.Score_TRAIN ;
32791      set EMWS1.MdlComp_TRAIN
32792      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_TRAIN ;
32793      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
32794     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32795     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
32796     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32797     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
32798     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
32799     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
32800     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
32801     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
32802     +EM_PROBABILITY =
32803     +max(
32804     +P_TARGET_B1
32805     +,
32806     +P_TARGET_B0
32807     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
32808     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
32808    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32809     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
32810     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
32811     +LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
32812     +EM_CLASSTARGET = F_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_TARGET_B;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
32813      run;

NOTE: DATA STEP view saved on file EMWS1.SCORE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.35 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
      

MPRINT(EM_DIAGRAM):   quit;
32814      quit;
32815      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
32816      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32817      *------------------------------------------------------------*;
32818      * Score: Scoring VALIDATE data;
32819      *------------------------------------------------------------*;
32820      data EMWS1.Score_VALIDATE
32821      / view=EMWS1.Score_VALIDATE
32822      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_VALIDATE / view=EMWS1.Score_VALIDATE ;
32823      set EMWS1.MdlComp_VALIDATE
32824      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_VALIDATE ;
32825      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
32826     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32827     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
32828     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32829     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
32830     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
32831     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
32832     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
32833     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
32834     +EM_PROBABILITY =
32835     +max(
32836     +P_TARGET_B1
32837     +,
32838     +P_TARGET_B0
32839     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
32840     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
32840    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32841     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
32842     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
32843     +LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
32844     +EM_CLASSTARGET = F_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_TARGET_B;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
32845      run;

NOTE: DATA STEP view saved on file EMWS1.SCORE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.34 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.36 seconds
      

MPRINT(EM_DIAGRAM):   quit;
32846      quit;
32847      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
32848      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
32849      * Score: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score: Creating Publish Score Variables Table;
32850      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32851      proc sort data=EMWS1.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
32852      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32854      proc sort data=EMWS1.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
32855      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32856      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS1.IDS_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 50 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32857      data EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMINPUTVARS;
32858      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
32859      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32860      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
32861      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
32862         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
32863         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
32864      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
32865      if upcase(NAME) = "BP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "BP_TARGET_B" then HIDE = "N";
32866      if upcase(NAME) = "CARD_PROM_12" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CARD_PROM_12" then HIDE = "N";
32867      if upcase(NAME) = "CLUSTER_CODE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CLUSTER_CODE" then HIDE = "N";
32868      if upcase(NAME) = "CONTROL_NUMBER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CONTROL_NUMBER" then HIDE = "N";
32869      if upcase(NAME) = "CP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CP_TARGET_B" then HIDE = "N";
32870      if upcase(NAME) = "DONOR_GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DONOR_GENDER" then HIDE = "N";
32871      if upcase(NAME) = "D_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "D_TARGET_B" then HIDE = "N";
32872      if upcase(NAME) = "EP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "EP_TARGET_B" then HIDE = "N";
32873      if upcase(NAME) = "FILE_CARD_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FILE_CARD_GIFT" then HIDE = "N";
32874      if upcase(NAME) = "FREQUENCY_STATUS_97NK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FREQUENCY_STATUS_97NK" then HIDE = "N";
32875      if upcase(NAME) = "F_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "F_TARGET_B" then HIDE = "N";
32876      if upcase(NAME) = "HOME_OWNER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HOME_OWNER" then HIDE = "N";
32877      if upcase(NAME) = "IMP_DONOR_AGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_DONOR_AGE" then HIDE = "N";
32878      if upcase(NAME) = "IMP_INCOME_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_INCOME_GROUP" then HIDE = "N";
32879      if upcase(NAME) = "IMP_MONTHS_SINCE_LAST_PROM_RESP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_MONTHS_SINCE_LAST_PROM_RESP" then HIDE = "N";
32880      if upcase(NAME) = "IMP_REP_SES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_REP_SES" then HIDE = "N";
32881      if upcase(NAME) = "IMP_REP_URBANICITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_REP_URBANICITY" then HIDE = "N";
32882      if upcase(NAME) = "IMP_WEALTH_RATING" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_WEALTH_RATING" then HIDE = "N";
32883      if upcase(NAME) = "IN_HOUSE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IN_HOUSE" then HIDE = "N";
32884      if upcase(NAME) = "I_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "I_TARGET_B" then HIDE = "N";
32885      if upcase(NAME) = "LG10_FILE_AVG_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_FILE_AVG_GIFT" then HIDE = "N";
32886      if upcase(NAME) = "LG10_LAST_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LAST_GIFT_AMT" then HIDE = "N";
32887      if upcase(NAME) = "LG10_LIFETIME_AVG_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LIFETIME_AVG_GIFT_AMT" then HIDE = "N";
32888      if upcase(NAME) = "LG10_LIFETIME_GIFT_AMOUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LIFETIME_GIFT_AMOUNT" then HIDE = "N";
32889      if upcase(NAME) = "LIFETIME_GIFT_RANGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_GIFT_RANGE" then HIDE = "N";
32890      if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then HIDE = "N";
32891      if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then HIDE = "N";
32892      if upcase(NAME) = "LIFETIME_PROM" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_PROM" then HIDE = "N";
32893      if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then HIDE = "N";
32894      if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then HIDE = "N";
32895      if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then HIDE = "N";
32896      if upcase(NAME) = "MOR_HIT_RATE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MOR_HIT_RATE" then HIDE = "N";
32897      if upcase(NAME) = "NUMBER_PROM_12" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMBER_PROM_12" then HIDE = "N";
32898      if upcase(NAME) = "OPT_LIFETIME_CARD_PROM" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_LIFETIME_CARD_PROM" then HIDE = "N";
32899      if upcase(NAME) = "OPT_LIFETIME_GIFT_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_LIFETIME_GIFT_COUNT" then HIDE = "N";
32900      if upcase(NAME) = "OPT_MEDIAN_HOME_VALUE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_MEDIAN_HOME_VALUE" then HIDE = "N";
32901      if upcase(NAME) = "OPT_MEDIAN_HOUSEHOLD_INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_MEDIAN_HOUSEHOLD_INCOME" then HIDE = "N";
32902      if upcase(NAME) = "OPT_PER_CAPITA_INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_PER_CAPITA_INCOME" then HIDE = "N";
32903      if upcase(NAME) = "OPT_RECENT_RESPONSE_PROP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_RECENT_RESPONSE_PROP" then HIDE = "N";
32904      if upcase(NAME) = "OPT_RECENT_STAR_STATUS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_RECENT_STAR_STATUS" then HIDE = "N";
32905      if upcase(NAME) = "OVERLAY_SOURCE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OVERLAY_SOURCE" then HIDE = "N";
32906      if upcase(NAME) = "PCT_ATTRIBUTE1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE1" then HIDE = "N";
32907      if upcase(NAME) = "PCT_ATTRIBUTE2" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE2" then HIDE = "N";
32908      if upcase(NAME) = "PCT_ATTRIBUTE3" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE3" then HIDE = "N";
32909      if upcase(NAME) = "PCT_ATTRIBUTE4" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE4" then HIDE = "N";
32910      if upcase(NAME) = "PCT_OWNER_OCCUPIED" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_OWNER_OCCUPIED" then HIDE = "N";
32911      if upcase(NAME) = "PEP_STAR" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PEP_STAR" then HIDE = "N";
32912      if upcase(NAME) = "PUBLISHED_PHONE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PUBLISHED_PHONE" then HIDE = "N";
32913      if upcase(NAME) = "P_TARGET_B0" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_TARGET_B0" then HIDE = "N";
32914      if upcase(NAME) = "P_TARGET_B1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_TARGET_B1" then HIDE = "N";
32915      if upcase(NAME) = "RECENCY_STATUS_96NK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENCY_STATUS_96NK" then HIDE = "N";
32916      if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then HIDE = "N";
32917      if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then HIDE = "N";
32918      if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then HIDE = "N";
32919      if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then HIDE = "N";
32920      if upcase(NAME) = "RECENT_RESPONSE_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_RESPONSE_COUNT" then HIDE = "N";
32921      if upcase(NAME) = "REP_DONOR_GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "REP_DONOR_GENDER" then HIDE = "N";
32922      if upcase(NAME) = "R_TARGET_B0" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_TARGET_B0" then HIDE = "N";
32923      if upcase(NAME) = "R_TARGET_B1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_TARGET_B1" then HIDE = "N";
32924      if upcase(NAME) = "SES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SES" then HIDE = "N";
32925      if upcase(NAME) = "TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "TARGET_B" then HIDE = "N";
32926      if upcase(NAME) = "URBANICITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "URBANICITY" then HIDE = "N";
32927      if upcase(NAME) = "U_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "U_TARGET_B" then HIDE = "N";
32928      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
32929      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
32930      if upcase(NAME) = "B_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_TARGET_B" then HIDE = "N";
32931      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: There were 66 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 81 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

32932      proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
32933      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32934      where CREATOR='' or (NAME="TARGET_B" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="TARGET_B" and CREATOR='');
32935      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='TARGET_B') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 50 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32936      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
32937      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
32938      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
32939      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas.
32940     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32941     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
32942     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32943     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
32944     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
32945     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
32946     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
32947     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
32948     +EM_PROBABILITY =
32949     +max(
32950     +P_TARGET_B1
32951     +,
32952     +P_TARGET_B0
32953     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
32954     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
32954    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32955     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
32956     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
NOTE: Numeric value converted to character.
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
32957      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

32958      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
32959      quit;
32960      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
32961      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
32962      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
32963      retain ID 1 Node "Score";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score";
32964      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
32965      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32966      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
32967      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32968      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32969      proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
32970      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 66 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32972      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
32973      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
32974      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
32975      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 66 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

32976      proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
32977      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

32978      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
32979      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32980      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32981      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
32982      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
32983      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32984      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 66 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32985      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
32986      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 5 rows and 5 columns.

32987      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

32988      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
32989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS1.SCORE_FCMP has 5 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

32990      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
32991      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
32992      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
32993      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
32994     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
32995     +if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
32996     +b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
32997     +end;
MPRINT(EM_DIAGRAM):   end;
32998     +else
32999     +if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
33000     +b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
33001     +end;
MPRINT(EM_DIAGRAM):   end;
33002     +else
33003     +if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
33004     +b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
33005     +end;
MPRINT(EM_DIAGRAM):   end;
33006     +else
33007     +if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
33008     +b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
33009     +end;
MPRINT(EM_DIAGRAM):   end;
33010     +else
33011     +if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
33012     +b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
33013     +end;
MPRINT(EM_DIAGRAM):   end;
33014     +else
33015     +if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
33016     +b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
33017     +end;
MPRINT(EM_DIAGRAM):   end;
33018     +else
33019     +if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
33020     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33021     +b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
33022     +end;
MPRINT(EM_DIAGRAM):   end;
33023     +else
33024     +if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
33025     +b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
33026     +end;
MPRINT(EM_DIAGRAM):   end;
33027     +else
33028     +if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
33029     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33030     +b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
33031     +end;
MPRINT(EM_DIAGRAM):   end;
33032     +else
33033     +if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
33034     +b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
33035     +end;
MPRINT(EM_DIAGRAM):   end;
33036     +else
33037     +if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
33038     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33039     +b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
33040     +end;
MPRINT(EM_DIAGRAM):   end;
33041     +else
33042     +if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
33043     +b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
33044     +end;
MPRINT(EM_DIAGRAM):   end;
33045     +else
33046     +do;
MPRINT(EM_DIAGRAM):   else do;
33047     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33048     +b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
33049     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33050      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

33051      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33052      quit;
33053      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33054      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33055      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33056      retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
33057      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33059      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33060      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33061      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33062      proc sort data=EMWS1.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33063      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33064      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set EMWS1.REG_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33065      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33066      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33067      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33068      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33069      proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
33070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 84 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

33071      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33072      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33073      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 84 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 84 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33074      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33075      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33076      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33077      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 84 observations read from the data set WORK._META.
NOTE: There were 65 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 84 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33078      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33079      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.

33080      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33081      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33082      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 7 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33083      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas";
33084      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33085      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33086      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas.
33087     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33088     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
33089     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33090     +
33091     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
33092     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
33093     +
33094     +length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
33095     +label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
33096     +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
33097     +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
33098     +label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
33099     +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
33100     +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
33101     +
33102     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
33103     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
33104     +
33105     +*** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
33106     +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
33107     +if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
33108     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
33109     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
33110     +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
33111     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33112     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33113     +end;
MPRINT(EM_DIAGRAM):   end;
33114     +else do;
MPRINT(EM_DIAGRAM):   else do;
33115     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
33116     +   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
33117     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
33118     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
33119     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
33120     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
33121     +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
33122     +   end;
MPRINT(EM_DIAGRAM):   end;
33123     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
33124     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
33125     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
33126     +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
33127     +   end;
MPRINT(EM_DIAGRAM):   end;
33128     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
33129     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
33130     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
33131     +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
33132     +   end;
MPRINT(EM_DIAGRAM):   end;
33133     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
33134     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
33135     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
33136     +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
33137     +   end;
MPRINT(EM_DIAGRAM):   end;
33138     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33139     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
33140     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
33141     +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
33142     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33143     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33144     +   end;
MPRINT(EM_DIAGRAM):   end;
33145     +end;
MPRINT(EM_DIAGRAM):   end;
33146     +
33147     +*** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
33148     +drop _12_0 ;
MPRINT(EM_DIAGRAM):   drop _12_0 ;
33149     +if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
33150     +   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_0 = .;
33151     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33152     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33153     +end;
MPRINT(EM_DIAGRAM):   end;
33154     +else do;
MPRINT(EM_DIAGRAM):   else do;
33155     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
33156     +   %DMNORMCP( OPT_MEDIAN_HOME_VALUE , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
33157     +   if _dm32 = '02:676.5-HIGH, MISSING'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
33158     +      _12_0 = -1;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
33159     +   end;
MPRINT(EM_DIAGRAM):   end;
33160     +   else if _dm32 = '01:LOW-676.5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
33161     +      _12_0 = 1;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
33162     +   end;
MPRINT(EM_DIAGRAM):   end;
33163     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33164     +      _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_0 = .;
33165     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33166     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33167     +   end;
MPRINT(EM_DIAGRAM):   end;
33168     +end;
MPRINT(EM_DIAGRAM):   end;
33169     +
33170     +*** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
33171     +drop _18_0 ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
33172     +if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
33173     +   _18_0 = .;
MPRINT(EM_DIAGRAM):   _18_0 = .;
33174     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33175     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33176     +end;
MPRINT(EM_DIAGRAM):   end;
33177     +else do;
MPRINT(EM_DIAGRAM):   else do;
33178     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
33179     +   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
33180     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
33181     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
33182     +      _18_0 = -1;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
33183     +   end;
MPRINT(EM_DIAGRAM):   end;
33184     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
33185     +      _18_0 = 1;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
33186     +   end;
MPRINT(EM_DIAGRAM):   end;
33187     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33188     +      _18_0 = .;
MPRINT(EM_DIAGRAM):   _18_0 = .;
33189     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33190     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33191     +   end;
MPRINT(EM_DIAGRAM):   end;
33192     +end;
MPRINT(EM_DIAGRAM):   end;
33193     +
33194     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
33195     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
33196     +   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
33197     +   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
33198     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
33199     +end;
MPRINT(EM_DIAGRAM):   end;
33200     +
33201     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
33202     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
33203     +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
33204     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
33205     +
33206     +***  Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
33207     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33208     +_LP0 = _LP0 + (    -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
33209     +_LP0 = _LP0 + (   -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
33210     +_LP0 = _LP0 + (    0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
33211     +
33212     +***  Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
33213     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33214     +_LP0 = _LP0 + (   -0.14135126079011) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _12_0;
33215     +
33216     +***  Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
33217     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33218     +_LP0 = _LP0 + (   -0.17905481873096) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _18_0;
33219     +
33220     +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
33221     +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
33222     +_TEMP =    -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
33223     +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
33224     +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
33225     +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
33226     +end;
MPRINT(EM_DIAGRAM):   end;
33227     +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
33228     +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
33229     +
33230     +REGDR1:
33231     +
33232     +
33233     +
33234     +*** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
33235     +_P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
33236     +_P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
33237     +drop _sum; _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
33238     +if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
33239     +   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
33240     +   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
33241     +end;
MPRINT(EM_DIAGRAM):   end;
33242     +
33243     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
33244     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
33245     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
33246     +
33247     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
33248     +
33249     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
33250     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
33251     +
33252     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
33253     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
33254     +
33255     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
33256     +EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
33257     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
33258     +_sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
33259     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
33260     +   EP_TARGET_B = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
33261     +   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
33262     +end;
MPRINT(EM_DIAGRAM):   end;
33263     +
33264     +
33265     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
33266     +
33267     +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
33268     +label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
33269     +label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
33270     +P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
33271     +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
33272     +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
33273     +P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
33274     +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
33275     +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
33276     +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
33277     +end;
MPRINT(EM_DIAGRAM):   end;
33278     +I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
33279     +U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
33280     +
33281     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33282     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
33283     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33284      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

33285      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33286      quit;
33287      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33288      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33289      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33290      retain ID 3 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Reg";
33291      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33292      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 372 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 372 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33293      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33294      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33295      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 372 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 372 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33296      proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33297      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33298      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33299      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33300      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33301      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33302      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33303      proc contents data=EMWS1.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg_train out=_meta(keep=NAME) noprint;
33304      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

33305      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33306      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33307      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33308      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33309      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33310      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33311      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33312      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33313      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 74 rows and 5 columns.

33314      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33315      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33316      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 74 observations read from the data set WORK._TEMPX.
NOTE: 74 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 81 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33317      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas";
33318      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33319      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33320      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas.
33321     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33322     +* Computed Code;
MPRINT(EM_DIAGRAM):   * Computed Code;
33323     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33324     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33325     +* TRANSFORM: FILE_AVG_GIFT , log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: FILE_AVG_GIFT , log10(FILE_AVG_GIFT + 1);
33326     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33327     +label LG10_FILE_AVG_GIFT = 'Transformed FILE_AVG_GIFT';
MPRINT(EM_DIAGRAM):   label LG10_FILE_AVG_GIFT = 'Transformed FILE_AVG_GIFT';
33328     +if FILE_AVG_GIFT eq . then LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT eq . then LG10_FILE_AVG_GIFT = .;
33329     +else do;
MPRINT(EM_DIAGRAM):   else do;
33330     +if FILE_AVG_GIFT + 1 > 0 then LG10_FILE_AVG_GIFT = log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT + 1 > 0 then LG10_FILE_AVG_GIFT = log10(FILE_AVG_GIFT + 1);
33331     +else LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   else LG10_FILE_AVG_GIFT = .;
33332     +end;
MPRINT(EM_DIAGRAM):   end;
33333     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33334     +* TRANSFORM: LAST_GIFT_AMT , log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LAST_GIFT_AMT , log10(LAST_GIFT_AMT + 1);
33335     +*------------------------------------------------------------*;
The SAS System

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33336     +label LG10_LAST_GIFT_AMT = 'Transformed LAST_GIFT_AMT';
MPRINT(EM_DIAGRAM):   label LG10_LAST_GIFT_AMT = 'Transformed LAST_GIFT_AMT';
33337     +if LAST_GIFT_AMT eq . then LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT eq . then LG10_LAST_GIFT_AMT = .;
33338     +else do;
MPRINT(EM_DIAGRAM):   else do;
33339     +if LAST_GIFT_AMT + 1 > 0 then LG10_LAST_GIFT_AMT = log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT + 1 > 0 then LG10_LAST_GIFT_AMT = log10(LAST_GIFT_AMT + 1);
33340     +else LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else LG10_LAST_GIFT_AMT = .;
33341     +end;
MPRINT(EM_DIAGRAM):   end;
33342     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33343     +* TRANSFORM: LIFETIME_AVG_GIFT_AMT , log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_AVG_GIFT_AMT , log10(LIFETIME_AVG_GIFT_AMT + 1);
33344     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33345     +label LG10_LIFETIME_AVG_GIFT_AMT = 'Transformed LIFETIME_AVG_GIFT_AMT';
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_AVG_GIFT_AMT = 'Transformed LIFETIME_AVG_GIFT_AMT';
33346     +if LIFETIME_AVG_GIFT_AMT eq . then LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT eq . then LG10_LIFETIME_AVG_GIFT_AMT = .;
33347     +else do;
MPRINT(EM_DIAGRAM):   else do;
33348     +if LIFETIME_AVG_GIFT_AMT + 1 > 0 then LG10_LIFETIME_AVG_GIFT_AMT = log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT + 1 > 0 then LG10_LIFETIME_AVG_GIFT_AMT = log10(LIFETIME_AVG_GIFT_AMT + 1);
33349     +else LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_AVG_GIFT_AMT = .;
33350     +end;
MPRINT(EM_DIAGRAM):   end;
33351     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33352     +* TRANSFORM: LIFETIME_GIFT_AMOUNT , log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_AMOUNT , log10(LIFETIME_GIFT_AMOUNT + 1);
33353     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33354     +label LG10_LIFETIME_GIFT_AMOUNT = 'Transformed LIFETIME_GIFT_AMOUNT';
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_GIFT_AMOUNT = 'Transformed LIFETIME_GIFT_AMOUNT';
33355     +if LIFETIME_GIFT_AMOUNT eq . then LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT eq . then LG10_LIFETIME_GIFT_AMOUNT = .;
33356     +else do;
MPRINT(EM_DIAGRAM):   else do;
33357     +if LIFETIME_GIFT_AMOUNT + 1 > 0 then LG10_LIFETIME_GIFT_AMOUNT = log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT + 1 > 0 then LG10_LIFETIME_GIFT_AMOUNT = log10(LIFETIME_GIFT_AMOUNT + 1);
33358     +else LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_GIFT_AMOUNT = .;
33359     +end;
MPRINT(EM_DIAGRAM):   end;
33360     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33361     +* TRANSFORM: LIFETIME_CARD_PROM , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_CARD_PROM , Optimal Binning(4);
33362     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33363     +label OPT_LIFETIME_CARD_PROM = 'Transformed LIFETIME_CARD_PROM';
MPRINT(EM_DIAGRAM):   label OPT_LIFETIME_CARD_PROM = 'Transformed LIFETIME_CARD_PROM';
33364     +length OPT_LIFETIME_CARD_PROM $36;
MPRINT(EM_DIAGRAM):   length OPT_LIFETIME_CARD_PROM $36;
33365     +if (LIFETIME_CARD_PROM eq .) then OPT_LIFETIME_CARD_PROM="03:12.5-39.5, MISSING";
MPRINT(EM_DIAGRAM):   if (LIFETIME_CARD_PROM eq .) then OPT_LIFETIME_CARD_PROM="03:12.5-39.5, MISSING";
33366     +else
33367     +if (LIFETIME_CARD_PROM < 7.5) then
33368     +OPT_LIFETIME_CARD_PROM = "01:low-7.5";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_CARD_PROM < 7.5) then OPT_LIFETIME_CARD_PROM = "01:low-7.5";
33369     +else
33370     +if (LIFETIME_CARD_PROM >= 7.5 and LIFETIME_CARD_PROM < 12.5) then
33371     +OPT_LIFETIME_CARD_PROM = "02:7.5-12.5";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_CARD_PROM >= 7.5 and LIFETIME_CARD_PROM < 12.5) then OPT_LIFETIME_CARD_PROM = "02:7.5-12.5";
33372     +else
33373     +if (LIFETIME_CARD_PROM >= 12.5 and LIFETIME_CARD_PROM < 39.5) then
33374     +OPT_LIFETIME_CARD_PROM = "03:12.5-39.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_CARD_PROM >= 12.5 and LIFETIME_CARD_PROM < 39.5) then OPT_LIFETIME_CARD_PROM = "03:12.5-39.5, MISSING";
33375     +else
33376     +if (LIFETIME_CARD_PROM >= 39.5) then
33377     +OPT_LIFETIME_CARD_PROM = "04:39.5-high";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_CARD_PROM >= 39.5) then OPT_LIFETIME_CARD_PROM = "04:39.5-high";
33378     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33379     +* TRANSFORM: LIFETIME_GIFT_COUNT , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_COUNT , Optimal Binning(4);
33380     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33381     +label OPT_LIFETIME_GIFT_COUNT = 'Transformed LIFETIME_GIFT_COUNT';
MPRINT(EM_DIAGRAM):   label OPT_LIFETIME_GIFT_COUNT = 'Transformed LIFETIME_GIFT_COUNT';
33382     +length OPT_LIFETIME_GIFT_COUNT $36;
MPRINT(EM_DIAGRAM):   length OPT_LIFETIME_GIFT_COUNT $36;
33383     +if (LIFETIME_GIFT_COUNT eq .) then OPT_LIFETIME_GIFT_COUNT="02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   if (LIFETIME_GIFT_COUNT eq .) then OPT_LIFETIME_GIFT_COUNT="02:4.5-13.5, MISSING";
33384     +else
33385     +if (LIFETIME_GIFT_COUNT < 4.5) then
33386     +OPT_LIFETIME_GIFT_COUNT = "01:low-4.5";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT < 4.5) then OPT_LIFETIME_GIFT_COUNT = "01:low-4.5";
33387     +else
33388     +if (LIFETIME_GIFT_COUNT >= 4.5 and LIFETIME_GIFT_COUNT < 13.5) then
33389     +OPT_LIFETIME_GIFT_COUNT = "02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 4.5 and LIFETIME_GIFT_COUNT < 13.5) then OPT_LIFETIME_GIFT_COUNT = "02:4.5-13.5, MISSING";
33390     +else
33391     +if (LIFETIME_GIFT_COUNT >= 13.5) then
33392     +OPT_LIFETIME_GIFT_COUNT = "03:13.5-high";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 13.5) then OPT_LIFETIME_GIFT_COUNT = "03:13.5-high";
33393     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33394     +* TRANSFORM: MEDIAN_HOME_VALUE , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOME_VALUE , Optimal Binning(4);
33395     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33396     +label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
33397     +length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
33398     +if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
33399     +else
33400     +if (MEDIAN_HOME_VALUE < 676.5) then
33401     +OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
33402     +else
33403     +if (MEDIAN_HOME_VALUE >= 676.5) then
33404     +OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
33405     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33406     +* TRANSFORM: MEDIAN_HOUSEHOLD_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOUSEHOLD_INCOME , Optimal Binning(4);
33407     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33408     +label OPT_MEDIAN_HOUSEHOLD_INCOME = 'Transformed MEDIAN_HOUSEHOLD_INCOME';
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOUSEHOLD_INCOME = 'Transformed MEDIAN_HOUSEHOLD_INCOME';
33409     +length OPT_MEDIAN_HOUSEHOLD_INCOME $36;
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOUSEHOLD_INCOME $36;
33410     +if (MEDIAN_HOUSEHOLD_INCOME eq .) then OPT_MEDIAN_HOUSEHOLD_INCOME="01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOUSEHOLD_INCOME eq .) then OPT_MEDIAN_HOUSEHOLD_INCOME="01:low-624.5, MISSING";
33411     +else
33412     +if (MEDIAN_HOUSEHOLD_INCOME < 624.5) then
33413     +OPT_MEDIAN_HOUSEHOLD_INCOME = "01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME < 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "01:low-624.5, MISSING";
33414     +else
33415     +if (MEDIAN_HOUSEHOLD_INCOME >= 624.5) then
33416     +OPT_MEDIAN_HOUSEHOLD_INCOME = "02:624.5-high";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME >= 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "02:624.5-high";
33417     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33418     +* TRANSFORM: PER_CAPITA_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: PER_CAPITA_INCOME , Optimal Binning(4);
33419     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33420     +label OPT_PER_CAPITA_INCOME = 'Transformed PER_CAPITA_INCOME';
MPRINT(EM_DIAGRAM):   label OPT_PER_CAPITA_INCOME = 'Transformed PER_CAPITA_INCOME';
33421     +length OPT_PER_CAPITA_INCOME $36;
MPRINT(EM_DIAGRAM):   length OPT_PER_CAPITA_INCOME $36;
33422     +if (PER_CAPITA_INCOME eq .) then OPT_PER_CAPITA_INCOME="01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   if (PER_CAPITA_INCOME eq .) then OPT_PER_CAPITA_INCOME="01:low-14976, MISSING";
33423     +else
33424     +if (PER_CAPITA_INCOME < 14976) then
33425     +OPT_PER_CAPITA_INCOME = "01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME < 14976) then OPT_PER_CAPITA_INCOME = "01:low-14976, MISSING";
33426     +else
33427     +if (PER_CAPITA_INCOME >= 14976) then
33428     +OPT_PER_CAPITA_INCOME = "02:14976-high";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME >= 14976) then OPT_PER_CAPITA_INCOME = "02:14976-high";
33429     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33430     +* TRANSFORM: RECENT_RESPONSE_PROP , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_RESPONSE_PROP , Optimal Binning(4);
33431     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33432     +label OPT_RECENT_RESPONSE_PROP = 'Transformed RECENT_RESPONSE_PROP';
MPRINT(EM_DIAGRAM):   label OPT_RECENT_RESPONSE_PROP = 'Transformed RECENT_RESPONSE_PROP';
33433     +length OPT_RECENT_RESPONSE_PROP $36;
MPRINT(EM_DIAGRAM):   length OPT_RECENT_RESPONSE_PROP $36;
33434     +if (RECENT_RESPONSE_PROP eq .) then OPT_RECENT_RESPONSE_PROP="01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   if (RECENT_RESPONSE_PROP eq .) then OPT_RECENT_RESPONSE_PROP="01:low-0.2125, MISSING";
33435     +else
33436     +if (RECENT_RESPONSE_PROP < 0.2125) then
33437     +OPT_RECENT_RESPONSE_PROP = "01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP < 0.2125) then OPT_RECENT_RESPONSE_PROP = "01:low-0.2125, MISSING";
33438     +else
33439     +if (RECENT_RESPONSE_PROP >= 0.2125) then
33440     +OPT_RECENT_RESPONSE_PROP = "02:0.2125-high";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP >= 0.2125) then OPT_RECENT_RESPONSE_PROP = "02:0.2125-high";
33441     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33442     +* TRANSFORM: RECENT_STAR_STATUS , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_STAR_STATUS , Optimal Binning(4);
33443     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33444     +label OPT_RECENT_STAR_STATUS = 'Transformed RECENT_STAR_STATUS';
MPRINT(EM_DIAGRAM):   label OPT_RECENT_STAR_STATUS = 'Transformed RECENT_STAR_STATUS';
33445     +length OPT_RECENT_STAR_STATUS $36;
MPRINT(EM_DIAGRAM):   length OPT_RECENT_STAR_STATUS $36;
33446     +if (RECENT_STAR_STATUS eq .) then OPT_RECENT_STAR_STATUS="01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   if (RECENT_STAR_STATUS eq .) then OPT_RECENT_STAR_STATUS="01:low-0.5, MISSING";
33447     +else
33448     +if (RECENT_STAR_STATUS < 0.5) then
33449     +OPT_RECENT_STAR_STATUS = "01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS < 0.5) then OPT_RECENT_STAR_STATUS = "01:low-0.5, MISSING";
33450     +else
33451     +if (RECENT_STAR_STATUS >= 0.5 and RECENT_STAR_STATUS < 1.5) then
33452     +OPT_RECENT_STAR_STATUS = "02:0.5-1.5";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 0.5 and RECENT_STAR_STATUS < 1.5) then OPT_RECENT_STAR_STATUS = "02:0.5-1.5";
33453     +else
33454     +if (RECENT_STAR_STATUS >= 1.5) then
33455     +OPT_RECENT_STAR_STATUS = "03:1.5-high";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 1.5) then OPT_RECENT_STAR_STATUS = "03:1.5-high";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33456      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

33457      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33458      quit;
33459      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33460      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33461      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33462      retain ID 4 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 4 Node "Trans";
33463      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33464      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 11 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33465      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33466      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33467      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 11 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33468      proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33469      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33470      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set EMWS1.IMPT_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33471      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33472      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33473      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33474      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33475      proc contents data=EMWS1.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_train out=_meta(keep=NAME) noprint;
33476      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

33477      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33478      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33479      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 72 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33480      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33481      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33482      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33483      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 72 observations read from the data set WORK._META.
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 72 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33484      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33485      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 11 rows and 5 columns.

33486      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

33487      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33488      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 11 observations read from the data set WORK._TEMPX.
NOTE: 11 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 92 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33489      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas";
33490      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33491      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33492      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas.
33493     +*;
MPRINT(EM_DIAGRAM):   *;
33494     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
33495     +*;
MPRINT(EM_DIAGRAM):   *;
33496     +label IMP_DONOR_AGE = 'Imputed DONOR_AGE';
MPRINT(EM_DIAGRAM):   label IMP_DONOR_AGE = 'Imputed DONOR_AGE';
33497     +IMP_DONOR_AGE = DONOR_AGE;
MPRINT(EM_DIAGRAM):   IMP_DONOR_AGE = DONOR_AGE;
33498     +if missing(DONOR_AGE) then IMP_DONOR_AGE = 60;
MPRINT(EM_DIAGRAM):   if missing(DONOR_AGE) then IMP_DONOR_AGE = 60;
33499     +label IMP_MONTHS_SINCE_LAST_PROM_RESP = 'Imputed MONTHS_SINCE_LAST_PROM_RESP';
MPRINT(EM_DIAGRAM):   label IMP_MONTHS_SINCE_LAST_PROM_RESP = 'Imputed MONTHS_SINCE_LAST_PROM_RESP';
33500     +IMP_MONTHS_SINCE_LAST_PROM_RESP = MONTHS_SINCE_LAST_PROM_RESP;
MPRINT(EM_DIAGRAM):   IMP_MONTHS_SINCE_LAST_PROM_RESP = MONTHS_SINCE_LAST_PROM_RESP;
33501     +if missing(MONTHS_SINCE_LAST_PROM_RESP) then IMP_MONTHS_SINCE_LAST_PROM_RESP = 18;
MPRINT(EM_DIAGRAM):   if missing(MONTHS_SINCE_LAST_PROM_RESP) then IMP_MONTHS_SINCE_LAST_PROM_RESP = 18;
33502     +*;
MPRINT(EM_DIAGRAM):   *;
33503     +* TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
33504     +*;
MPRINT(EM_DIAGRAM):   *;
33505     +*;
MPRINT(EM_DIAGRAM):   *;
33506     +* IMPUTE VARIABLE: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: INCOME_GROUP;
33507     +*;
MPRINT(EM_DIAGRAM):   *;
33508     +label IMP_INCOME_GROUP = 'Imputed INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label IMP_INCOME_GROUP = 'Imputed INCOME_GROUP';
33509     +IMP_INCOME_GROUP = INCOME_GROUP;
MPRINT(EM_DIAGRAM):   IMP_INCOME_GROUP = INCOME_GROUP;
33510     +if missing(IMP_INCOME_GROUP) then do;
MPRINT(EM_DIAGRAM):   if missing(IMP_INCOME_GROUP) then do;
33511     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
33512     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
33513     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
33514     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
33515     +LENGTH I_INCOME_GROUP $ 12;
MPRINT(EM_DIAGRAM):   LENGTH I_INCOME_GROUP $ 12;
33516     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
33517     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
33518     +LABEL P_INCOME_GROUP2 = 'Predicted: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP2 = 'Predicted: INCOME_GROUP=2';
33519     +LABEL P_INCOME_GROUP6 = 'Predicted: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP6 = 'Predicted: INCOME_GROUP=6';
33520     +LABEL P_INCOME_GROUP5 = 'Predicted: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP5 = 'Predicted: INCOME_GROUP=5';
33521     +LABEL P_INCOME_GROUP4 = 'Predicted: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP4 = 'Predicted: INCOME_GROUP=4';
33522     +LABEL P_INCOME_GROUP3 = 'Predicted: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP3 = 'Predicted: INCOME_GROUP=3';
33523     +LABEL P_INCOME_GROUP1 = 'Predicted: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP1 = 'Predicted: INCOME_GROUP=1';
33524     +LABEL P_INCOME_GROUP7 = 'Predicted: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   LABEL P_INCOME_GROUP7 = 'Predicted: INCOME_GROUP=7';
33525     +LABEL Q_INCOME_GROUP2 = 'Unadjusted P: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP2 = 'Unadjusted P: INCOME_GROUP=2';
33526     +LABEL Q_INCOME_GROUP6 = 'Unadjusted P: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP6 = 'Unadjusted P: INCOME_GROUP=6';
33527     +LABEL Q_INCOME_GROUP5 = 'Unadjusted P: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP5 = 'Unadjusted P: INCOME_GROUP=5';
33528     +LABEL Q_INCOME_GROUP4 = 'Unadjusted P: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP4 = 'Unadjusted P: INCOME_GROUP=4';
33529     +LABEL Q_INCOME_GROUP3 = 'Unadjusted P: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP3 = 'Unadjusted P: INCOME_GROUP=3';
33530     +LABEL Q_INCOME_GROUP1 = 'Unadjusted P: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP1 = 'Unadjusted P: INCOME_GROUP=1';
33531     +LABEL Q_INCOME_GROUP7 = 'Unadjusted P: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   LABEL Q_INCOME_GROUP7 = 'Unadjusted P: INCOME_GROUP=7';
33532     +LABEL I_INCOME_GROUP = 'Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   LABEL I_INCOME_GROUP = 'Into: INCOME_GROUP';
33533     +LABEL U_INCOME_GROUP = 'Unnormalized Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   LABEL U_INCOME_GROUP = 'Unnormalized Into: INCOME_GROUP';
33534     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
33535     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
33536     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
33537     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
33538     +_ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
33539     +/* Initialize to avoid warning. */
33540     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
33541     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
33542     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
33543     +/* Initialize to avoid warning. */
33544     +LENGTH _ARBFMT_3 $ 3;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_3 $ 3;
33545     +DROP _ARBFMT_3;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_3;
33546     +_ARBFMT_3 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = ' ';
33547     +/* Initialize to avoid warning. */
33548     +LENGTH _ARBFMT_1 $ 1;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_1 $ 1;
33549     +DROP _ARBFMT_1;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_1;
33550     +_ARBFMT_1 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = ' ';
33551     +/* Initialize to avoid warning. */
33552     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_4 $ 4;
33553     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
33554     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
33555     +/* Initialize to avoid warning. */
33556     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
33557     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
33558     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33559     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33560     +MEDIAN_HOUSEHOLD_INCOME < 432.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 432.5 THEN DO;
33561     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33562     +END;
MPRINT(EM_DIAGRAM):   END;
33563     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33564     +432.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 432.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
33565     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33566     +END;
MPRINT(EM_DIAGRAM):   END;
33567     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
33568     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33569     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33570     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
33571     +'23' ,'25' ,'01' ,'09' ,'41' ,'15' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,
33572     +'46' ,'40' ,'26' ,'28' ,'21' ,'51' ,'34' ,'42' ,'44' ,'29' ,'05' ,'17' ,
33573     +'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'47' ,'53' ,'22' ,'06' ,'32' ,'03' ,
33574     +'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '23' ,'25' ,'01' ,'09' ,'41' ,'15' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' , '46' ,'40' ,'26' ,'28' ,'21' ,'51' ,'34' ,'42' ,'44' ,'29' ,'05' ,'17' , '43' ,'39' ,'11' 
,'31' ,'33' ,'38' ,'47' ,'53' ,'22' ,'06' ,'32' ,'03' , '52' ,'37' ,'10' ) THEN DO;
33575     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33576     +END;
MPRINT(EM_DIAGRAM):   END;
33577     +ELSE IF _ARBFMT_2 IN ('02' ,'24' ,'12' ,'35' ,'13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('02' ,'24' ,'12' ,'35' ,'13' ,'14' ) THEN DO;
33578     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33579     +END;
MPRINT(EM_DIAGRAM):   END;
33580     +END;
MPRINT(EM_DIAGRAM):   END;
33581     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
33582     +IF PER_CAPITA_INCOME < 19185.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 19185.5 THEN DO;
33583     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33584     +END;
MPRINT(EM_DIAGRAM):   END;
33585     +ELSE IF 19185.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 19185.5 <= PER_CAPITA_INCOME THEN DO;
33586     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33587     +END;
MPRINT(EM_DIAGRAM):   END;
33588     +END;
MPRINT(EM_DIAGRAM):   END;
33589     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33590     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33591     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33592     +_ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
33593     +%DMNORMIP( _ARBFMT_3);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33594     +IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
33595     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33596     +END;
MPRINT(EM_DIAGRAM):   END;
33597     +ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
33598     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33599     +END;
MPRINT(EM_DIAGRAM):   END;
33600     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
33601     +IF 2.7 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= FILE_AVG_GIFT THEN DO;
33602     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33603     +END;
MPRINT(EM_DIAGRAM):   END;
33604     +ELSE IF FILE_AVG_GIFT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF FILE_AVG_GIFT < 2.7 THEN DO;
33605     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33606     +END;
MPRINT(EM_DIAGRAM):   END;
33607     +END;
MPRINT(EM_DIAGRAM):   END;
33608     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
33609     +IF 2.7 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= LIFETIME_AVG_GIFT_AMT THEN DO;
33610     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33611     +END;
MPRINT(EM_DIAGRAM):   END;
33612     +ELSE IF LIFETIME_AVG_GIFT_AMT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_AVG_GIFT_AMT < 2.7 THEN DO;
33613     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33614     +END;
MPRINT(EM_DIAGRAM):   END;
33615     +END;
MPRINT(EM_DIAGRAM):   END;
33616     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33617     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33618     +P_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10574018126888;
33619     +P_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13897280966767;
33620     +P_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29003021148036;
33621     +P_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.16012084592145;
33622     +P_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07552870090634;
33623     +P_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.13293051359516;
33624     +P_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09667673716012;
33625     +Q_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10574018126888;
33626     +Q_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13897280966767;
33627     +Q_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29003021148036;
33628     +Q_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.16012084592145;
33629     +Q_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07552870090634;
33630     +Q_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.13293051359516;
33631     +Q_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09667673716012;
33632     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
33633     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
33634     +END;
MPRINT(EM_DIAGRAM):   END;
33635     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33636     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33637     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33638     +MEDIAN_HOUSEHOLD_INCOME < 531.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 531.5 THEN DO;
33639     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33640     +END;
MPRINT(EM_DIAGRAM):   END;
33641     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33642     +531.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 531.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
33643     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33644     +END;
MPRINT(EM_DIAGRAM):   END;
33645     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
33646     +IF PER_CAPITA_INCOME < 20802 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 20802 THEN DO;
33647     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33648     +END;
MPRINT(EM_DIAGRAM):   END;
33649     +ELSE IF 20802 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 20802 <= PER_CAPITA_INCOME THEN DO;
33650     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33651     +END;
MPRINT(EM_DIAGRAM):   END;
33652     +END;
MPRINT(EM_DIAGRAM):   END;
33653     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
33654     +IF MEDIAN_HOME_VALUE < 1183 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1183 THEN DO;
33655     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33656     +END;
MPRINT(EM_DIAGRAM):   END;
33657     +ELSE IF 1183 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1183 <= MEDIAN_HOME_VALUE THEN DO;
33658     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33659     +END;
MPRINT(EM_DIAGRAM):   END;
33660     +END;
MPRINT(EM_DIAGRAM):   END;
33661     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33662     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33663     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33664     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
33665     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33666     +IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ) THEN DO;
33667     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33668     +END;
MPRINT(EM_DIAGRAM):   END;
33669     +ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
33670     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33671     +END;
MPRINT(EM_DIAGRAM):   END;
33672     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
33673     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33674     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33675     +IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'24' ,'12' ,'35' ,'13' ,'14' ,
33676     +'34' ,'11' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'24' ,'12' ,'35' ,'13' ,'14' , '34' ,'11' ,'03' ) THEN DO;
33677     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33678     +END;
MPRINT(EM_DIAGRAM):   END;
33679     +ELSE IF _ARBFMT_2 IN ('18' ,'27' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('18' ,'27' ,'40' ) THEN DO;
33680     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33681     +END;
MPRINT(EM_DIAGRAM):   END;
33682     +END;
MPRINT(EM_DIAGRAM):   END;
33683     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
33684     +IF 8.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   IF 8.5 <= PCT_ATTRIBUTE2 THEN DO;
33685     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33686     +END;
MPRINT(EM_DIAGRAM):   END;
33687     +ELSE IF PCT_ATTRIBUTE2 < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE2 < 8.5 THEN DO;
33688     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33689     +END;
MPRINT(EM_DIAGRAM):   END;
33690     +END;
MPRINT(EM_DIAGRAM):   END;
33691     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33692     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33693     +P_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1;
33694     +P_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.21666666666666;
33695     +P_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.28333333333333;
33696     +P_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.11666666666666;
33697     +P_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08333333333333;
33698     +P_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01666666666666;
33699     +P_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18333333333333;
33700     +Q_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1;
33701     +Q_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.21666666666666;
33702     +Q_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.28333333333333;
33703     +Q_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.11666666666666;
33704     +Q_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08333333333333;
33705     +Q_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01666666666666;
33706     +Q_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18333333333333;
33707     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
33708     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
33709     +END;
MPRINT(EM_DIAGRAM):   END;
33710     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33711     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33712     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
33713     +MEDIAN_HOME_VALUE < 2637.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 2637.5 THEN DO;
33714     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33715     +END;
MPRINT(EM_DIAGRAM):   END;
33716     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
33717     +2637.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 2637.5 <= MEDIAN_HOME_VALUE THEN DO;
33718     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33719     +END;
MPRINT(EM_DIAGRAM):   END;
33720     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
33721     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33722     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33723     +IF _ARBFMT_2 IN ('24' ,'12' ,'35' ,'14' ,'34' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('24' ,'12' ,'35' ,'14' ,'34' ,'11' ) THEN DO;
33724     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33725     +END;
MPRINT(EM_DIAGRAM):   END;
33726     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'13' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'13' ,'03' ) THEN DO;
33727     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33728     +END;
MPRINT(EM_DIAGRAM):   END;
33729     +END;
MPRINT(EM_DIAGRAM):   END;
33730     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
33731     +IF PER_CAPITA_INCOME < 33325 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 33325 THEN DO;
33732     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33733     +END;
MPRINT(EM_DIAGRAM):   END;
33734     +ELSE IF 33325 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 33325 <= PER_CAPITA_INCOME THEN DO;
33735     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33736     +END;
MPRINT(EM_DIAGRAM):   END;
33737     +END;
MPRINT(EM_DIAGRAM):   END;
33738     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33739     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33740     +P_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0;
33741     +P_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.47037037037037;
33742     +P_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.13333333333333;
33743     +P_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06666666666666;
33744     +P_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.01481481481481;
33745     +P_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01111111111111;
33746     +P_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.3037037037037;
33747     +Q_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0;
33748     +Q_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.47037037037037;
33749     +Q_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.13333333333333;
33750     +Q_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06666666666666;
33751     +Q_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.01481481481481;
33752     +Q_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01111111111111;
33753     +Q_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.3037037037037;
33754     +I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
33755     +U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
33756     +END;
MPRINT(EM_DIAGRAM):   END;
33757     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33758     +P_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.00921658986175;
33759     +P_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.19585253456221;
33760     +P_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.22811059907834;
33761     +P_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.08294930875576;
33762     +P_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.02764976958525;
33763     +P_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.00691244239631;
33764     +P_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44930875576036;
33765     +Q_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.00921658986175;
33766     +Q_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.19585253456221;
33767     +Q_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.22811059907834;
33768     +Q_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.08294930875576;
33769     +Q_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.02764976958525;
33770     +Q_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.00691244239631;
33771     +Q_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44930875576036;
33772     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
33773     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
33774     +END;
MPRINT(EM_DIAGRAM):   END;
33775     +END;
MPRINT(EM_DIAGRAM):   END;
33776     +END;
MPRINT(EM_DIAGRAM):   END;
33777     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33778     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33779     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
33780     +MEDIAN_HOME_VALUE < 1117.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1117.5 THEN DO;
33781     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33782     +END;
MPRINT(EM_DIAGRAM):   END;
33783     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
33784     +1117.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1117.5 <= MEDIAN_HOME_VALUE THEN DO;
33785     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33786     +END;
MPRINT(EM_DIAGRAM):   END;
33787     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
33788     +IF PER_CAPITA_INCOME < 18546 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18546 THEN DO;
33789     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33790     +END;
MPRINT(EM_DIAGRAM):   END;
33791     +ELSE IF 18546 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 18546 <= PER_CAPITA_INCOME THEN DO;
33792     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33793     +END;
MPRINT(EM_DIAGRAM):   END;
33794     +END;
MPRINT(EM_DIAGRAM):   END;
33795     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
33796     +IF 84.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 84.5 <= PCT_OWNER_OCCUPIED THEN DO;
33797     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33798     +END;
MPRINT(EM_DIAGRAM):   END;
33799     +ELSE IF PCT_OWNER_OCCUPIED < 84.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 84.5 THEN DO;
33800     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33801     +END;
MPRINT(EM_DIAGRAM):   END;
33802     +END;
MPRINT(EM_DIAGRAM):   END;
33803     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
33804     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
33805     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33806     +IF NOT MISSING(DONOR_AGE ) AND
33807     +DONOR_AGE < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 73.5 THEN DO;
33808     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33809     +END;
MPRINT(EM_DIAGRAM):   END;
33810     +ELSE IF NOT MISSING(DONOR_AGE ) AND
33811     +73.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 73.5 <= DONOR_AGE THEN DO;
33812     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33813     +END;
MPRINT(EM_DIAGRAM):   END;
33814     +IF _BRANCH_ LT 0 AND NOT MISSING(NUMBER_PROM_12 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(NUMBER_PROM_12 ) THEN DO;
33815     +IF NUMBER_PROM_12 < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NUMBER_PROM_12 < 30.5 THEN DO;
33816     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33817     +END;
MPRINT(EM_DIAGRAM):   END;
33818     +ELSE IF 30.5 <= NUMBER_PROM_12 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= NUMBER_PROM_12 THEN DO;
33819     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33820     +END;
MPRINT(EM_DIAGRAM):   END;
33821     +END;
MPRINT(EM_DIAGRAM):   END;
33822     +IF _BRANCH_ LT 0 AND NOT MISSING(MOR_HIT_RATE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MOR_HIT_RATE ) THEN DO;
33823     +IF MOR_HIT_RATE < 41.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MOR_HIT_RATE < 41.5 THEN DO;
33824     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33825     +END;
MPRINT(EM_DIAGRAM):   END;
33826     +ELSE IF 41.5 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 41.5 <= MOR_HIT_RATE THEN DO;
33827     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33828     +END;
MPRINT(EM_DIAGRAM):   END;
33829     +END;
MPRINT(EM_DIAGRAM):   END;
33830     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33831     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33832     +P_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.21875;
33833     +P_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.125;
33834     +P_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.171875;
33835     +P_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21875;
33836     +P_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.140625;
33837     +P_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.0625;
33838     +P_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.0625;
33839     +Q_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.21875;
33840     +Q_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.125;
33841     +Q_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.171875;
33842     +Q_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21875;
33843     +Q_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.140625;
33844     +Q_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.0625;
33845     +Q_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.0625;
33846     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
33847     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
33848     +END;
MPRINT(EM_DIAGRAM):   END;
33849     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33850     +IF NOT MISSING(PCT_ATTRIBUTE4 ) AND
33851     +61 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE4 ) AND 61 <= PCT_ATTRIBUTE4 THEN DO;
33852     +P_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.5;
33853     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
33854     +P_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.33333333333333;
33855     +P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
33856     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
33857     +P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
33858     +P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
33859     +Q_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.5;
33860     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
33861     +Q_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.33333333333333;
33862     +Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
33863     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
33864     +Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
33865     +Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
33866     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
33867     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
33868     +END;
MPRINT(EM_DIAGRAM):   END;
33869     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33870     +P_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.0258064516129;
33871     +P_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.17419354838709;
33872     +P_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.36129032258064;
33873     +P_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2258064516129;
33874     +P_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.06774193548387;
33875     +P_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01290322580645;
33876     +P_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.13225806451612;
33877     +Q_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.0258064516129;
33878     +Q_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.17419354838709;
33879     +Q_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.36129032258064;
33880     +Q_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2258064516129;
33881     +Q_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.06774193548387;
33882     +Q_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01290322580645;
33883     +Q_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.13225806451612;
33884     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
33885     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
33886     +END;
MPRINT(EM_DIAGRAM):   END;
33887     +END;
MPRINT(EM_DIAGRAM):   END;
33888     +END;
MPRINT(EM_DIAGRAM):   END;
33889     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33890     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33891     +_ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
33892     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
33893     +IF _ARBFMT_12 IN ('4' ,'5' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'5' ,'7' ,'6' ) THEN DO;
33894     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33895     +END;
MPRINT(EM_DIAGRAM):   END;
33896     +ELSE IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
33897     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33898     +END;
MPRINT(EM_DIAGRAM):   END;
33899     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
33900     +IF PER_CAPITA_INCOME < 22944.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 22944.5 THEN DO;
33901     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33902     +END;
MPRINT(EM_DIAGRAM):   END;
33903     +ELSE IF 22944.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 22944.5 <= PER_CAPITA_INCOME THEN DO;
33904     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33905     +END;
MPRINT(EM_DIAGRAM):   END;
33906     +END;
MPRINT(EM_DIAGRAM):   END;
33907     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
33908     +IF 1404 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1404 <= MEDIAN_HOME_VALUE THEN DO;
33909     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33910     +END;
MPRINT(EM_DIAGRAM):   END;
33911     +ELSE IF MEDIAN_HOME_VALUE < 1404 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1404 THEN DO;
33912     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33913     +END;
MPRINT(EM_DIAGRAM):   END;
33914     +END;
MPRINT(EM_DIAGRAM):   END;
33915     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33916     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33917     +P_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04790419161676;
33918     +P_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.14371257485029;
33919     +P_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.17365269461077;
33920     +P_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.1377245508982;
33921     +P_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05389221556886;
33922     +P_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01796407185628;
33923     +P_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4251497005988;
33924     +Q_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04790419161676;
33925     +Q_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.14371257485029;
33926     +Q_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.17365269461077;
33927     +Q_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.1377245508982;
33928     +Q_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05389221556886;
33929     +Q_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01796407185628;
33930     +Q_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4251497005988;
33931     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
33932     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
33933     +END;
MPRINT(EM_DIAGRAM):   END;
33934     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33935     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33936     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33937     +MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
33938     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33939     +END;
MPRINT(EM_DIAGRAM):   END;
33940     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
33941     +504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
33942     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33943     +END;
MPRINT(EM_DIAGRAM):   END;
33944     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
33945     +IF 4.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   IF 4.5 <= LIFETIME_CARD_PROM THEN DO;
33946     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33947     +END;
MPRINT(EM_DIAGRAM):   END;
33948     +ELSE IF LIFETIME_CARD_PROM < 4.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_CARD_PROM < 4.5 THEN DO;
33949     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33950     +END;
MPRINT(EM_DIAGRAM):   END;
33951     +END;
MPRINT(EM_DIAGRAM):   END;
33952     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_RANGE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_RANGE ) THEN DO;
33953     +IF LIFETIME_GIFT_RANGE < 41 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_RANGE < 41 THEN DO;
33954     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33955     +END;
MPRINT(EM_DIAGRAM):   END;
33956     +ELSE IF 41 <= LIFETIME_GIFT_RANGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 41 <= LIFETIME_GIFT_RANGE THEN DO;
33957     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33958     +END;
MPRINT(EM_DIAGRAM):   END;
33959     +END;
MPRINT(EM_DIAGRAM):   END;
33960     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
33961     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
33962     +P_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.03846153846153;
33963     +P_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.26923076923076;
33964     +P_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.07692307692307;
33965     +P_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07692307692307;
33966     +P_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09615384615384;
33967     +P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
33968     +P_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44230769230769;
33969     +Q_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.03846153846153;
33970     +Q_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.26923076923076;
33971     +Q_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.07692307692307;
33972     +Q_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07692307692307;
33973     +Q_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09615384615384;
33974     +Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
33975     +Q_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44230769230769;
33976     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
33977     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
33978     +END;
MPRINT(EM_DIAGRAM):   END;
33979     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
33980     +P_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04395604395604;
33981     +P_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.34065934065934;
33982     +P_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21978021978021;
33983     +P_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19780219780219;
33984     +P_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08791208791208;
33985     +P_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01648351648351;
33986     +P_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09340659340659;
33987     +Q_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04395604395604;
33988     +Q_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.34065934065934;
33989     +Q_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21978021978021;
33990     +Q_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19780219780219;
33991     +Q_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08791208791208;
33992     +Q_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01648351648351;
33993     +Q_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09340659340659;
33994     +I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
33995     +U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
33996     +END;
MPRINT(EM_DIAGRAM):   END;
33997     +END;
MPRINT(EM_DIAGRAM):   END;
33998     +END;
MPRINT(EM_DIAGRAM):   END;
33999     +END;
MPRINT(EM_DIAGRAM):   END;
34000     +END;
MPRINT(EM_DIAGRAM):   END;
34001     +END;
MPRINT(EM_DIAGRAM):   END;
34002     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34003     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34004     +_ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
34005     +%DMNORMIP( _ARBFMT_3);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34006     +IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
34007     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34008     +END;
MPRINT(EM_DIAGRAM):   END;
34009     +ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
34010     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34011     +END;
MPRINT(EM_DIAGRAM):   END;
34012     +IF _BRANCH_ LT 0 AND NOT MISSING(OVERLAY_SOURCE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(OVERLAY_SOURCE ) THEN DO;
34013     +_ARBFMT_1 = PUT( OVERLAY_SOURCE , $1.);
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = PUT( OVERLAY_SOURCE , $1.);
34014     +%DMNORMIP( _ARBFMT_1);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34015     +IF _ARBFMT_1 IN ('P' ,'B' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_1 IN ('P' ,'B' ) THEN DO;
34016     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34017     +END;
MPRINT(EM_DIAGRAM):   END;
34018     +ELSE IF _ARBFMT_1 IN ('M' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_1 IN ('M' ) THEN DO;
34019     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34020     +END;
MPRINT(EM_DIAGRAM):   END;
34021     +END;
MPRINT(EM_DIAGRAM):   END;
34022     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34023     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34024     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34025     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'20' ,'16' ,'30' ,'07' ,'23' ,
34026     +'25' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'48' ,'24' ,'08' ,'12' ,'35' ,
34027     +'19' ,'27' ,'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,
34028     +'29' ,'05' ,'17' ,'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'22' ,'06' ,'32' ,
34029     +'03' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'20' ,'16' ,'30' ,'07' ,'23' , '25' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'48' ,'24' ,'08' ,'12' ,'35' , '19' ,'27' ,'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' , '29' ,'05' ,'17' 
,'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'22' ,'06' ,'32' , '03' ,'52' ,'37' ,'10' ) THEN DO;
34030     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34031     +END;
MPRINT(EM_DIAGRAM):   END;
34032     +ELSE IF _ARBFMT_2 IN ('45' ,'01' ,'51' ,'47' ,'53' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('45' ,'01' ,'51' ,'47' ,'53' ) THEN DO;
34033     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34034     +END;
MPRINT(EM_DIAGRAM):   END;
34035     +END;
MPRINT(EM_DIAGRAM):   END;
34036     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34037     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34038     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34039     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34040     +MEDIAN_HOUSEHOLD_INCOME < 215.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 215.5 THEN DO;
34041     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34042     +END;
MPRINT(EM_DIAGRAM):   END;
34043     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34044     +215.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 215.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34045     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34046     +END;
MPRINT(EM_DIAGRAM):   END;
34047     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34048     +IF PER_CAPITA_INCOME < 10196.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 10196.5 THEN DO;
34049     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34050     +END;
MPRINT(EM_DIAGRAM):   END;
34051     +ELSE IF 10196.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 10196.5 <= PER_CAPITA_INCOME THEN DO;
34052     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34053     +END;
MPRINT(EM_DIAGRAM):   END;
34054     +END;
MPRINT(EM_DIAGRAM):   END;
34055     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34056     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34057     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34058     +IF _ARBFMT_2 IN ('04' ,'50' ,'30' ,'09' ,'41' ,'48' ,'51' ,'31' ,
34059     +'33' ,'53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'30' ,'09' ,'41' ,'48' ,'51' ,'31' , '33' ,'53' ,'32' ,'52' ,'10' ) THEN DO;
34060     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34061     +END;
MPRINT(EM_DIAGRAM):   END;
34062     +ELSE IF _ARBFMT_2 IN ('.' ,'49' ,'45' ,'20' ,'16' ,'07' ,'23' ,'25' ,
34063     +'01' ,'02' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'35' ,'19' ,'27' ,
34064     +'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,'29' ,
34065     +'05' ,'17' ,'43' ,'39' ,'11' ,'38' ,'47' ,'22' ,'06' ,'03' ,'37' )
34066     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'49' ,'45' ,'20' ,'16' ,'07' ,'23' ,'25' , '01' ,'02' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'35' ,'19' ,'27' , '46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,'29' , '05' ,'17' ,'43' ,'39' ,'11' 
,'38' ,'47' ,'22' ,'06' ,'03' ,'37' ) THEN DO;
34067     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34068     +END;
MPRINT(EM_DIAGRAM):   END;
34069     +END;
MPRINT(EM_DIAGRAM):   END;
34070     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34071     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34072     +P_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29721362229102;
34073     +P_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.01083591331269;
34074     +P_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.05882352941176;
34075     +P_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07430340557275;
34076     +P_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.10990712074303;
34077     +P_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41331269349845;
34078     +P_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03560371517027;
34079     +Q_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29721362229102;
34080     +Q_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.01083591331269;
34081     +Q_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.05882352941176;
34082     +Q_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07430340557275;
34083     +Q_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.10990712074303;
34084     +Q_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41331269349845;
34085     +Q_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03560371517027;
34086     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
34087     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
34088     +END;
MPRINT(EM_DIAGRAM):   END;
34089     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34090     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34091     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34092     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34093     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
34094     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34095     +END;
MPRINT(EM_DIAGRAM):   END;
34096     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
34097     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34098     +END;
MPRINT(EM_DIAGRAM):   END;
34099     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34100     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34101     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34102     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34103     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
34104     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
34105     +'38' ,'47' ,'53' ,'06' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '38' ,'47' ,'53' ,'06' ,'37' 
,'10' ) THEN DO;
34106     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34107     +END;
MPRINT(EM_DIAGRAM):   END;
34108     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34109     +'13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
34110     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34111     +END;
MPRINT(EM_DIAGRAM):   END;
34112     +END;
MPRINT(EM_DIAGRAM):   END;
34113     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34114     +IF PER_CAPITA_INCOME < 17643 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17643 THEN DO;
34115     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34116     +END;
MPRINT(EM_DIAGRAM):   END;
34117     +ELSE IF 17643 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17643 <= PER_CAPITA_INCOME THEN DO;
34118     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34119     +END;
MPRINT(EM_DIAGRAM):   END;
34120     +END;
MPRINT(EM_DIAGRAM):   END;
34121     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34122     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34123     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34124     +IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND
34125     +MONTHS_SINCE_ORIGIN < 71 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND MONTHS_SINCE_ORIGIN < 71 THEN DO;
34126     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34127     +END;
MPRINT(EM_DIAGRAM):   END;
34128     +ELSE IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND
34129     +71 <= MONTHS_SINCE_ORIGIN THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND 71 <= MONTHS_SINCE_ORIGIN THEN DO;
34130     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34131     +END;
MPRINT(EM_DIAGRAM):   END;
34132     +IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
34133     +IF MONTHS_SINCE_FIRST_GIFT < 65 THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 65 THEN DO;
34134     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34135     +END;
MPRINT(EM_DIAGRAM):   END;
34136     +ELSE IF 65 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 65 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
34137     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34138     +END;
MPRINT(EM_DIAGRAM):   END;
34139     +END;
MPRINT(EM_DIAGRAM):   END;
34140     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34141     +IF LIFETIME_PROM < 45.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 45.5 THEN DO;
34142     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34143     +END;
MPRINT(EM_DIAGRAM):   END;
34144     +ELSE IF 45.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 45.5 <= LIFETIME_PROM THEN DO;
34145     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34146     +END;
MPRINT(EM_DIAGRAM):   END;
34147     +END;
MPRINT(EM_DIAGRAM):   END;
34148     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34149     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34150     +P_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.28030303030303;
34151     +P_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04545454545454;
34152     +P_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21212121212121;
34153     +P_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.18181818181818;
34154     +P_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07575757575757;
34155     +P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
34156     +P_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03787878787878;
34157     +Q_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.28030303030303;
34158     +Q_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04545454545454;
34159     +Q_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21212121212121;
34160     +Q_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.18181818181818;
34161     +Q_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07575757575757;
34162     +Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
34163     +Q_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03787878787878;
34164     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34165     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34166     +END;
MPRINT(EM_DIAGRAM):   END;
34167     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34168     +P_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10344827586206;
34169     +P_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13793103448275;
34170     +P_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.26206896551724;
34171     +P_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14482758620689;
34172     +P_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.18620689655172;
34173     +P_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10344827586206;
34174     +P_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06206896551724;
34175     +Q_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10344827586206;
34176     +Q_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13793103448275;
34177     +Q_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.26206896551724;
34178     +Q_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14482758620689;
34179     +Q_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.18620689655172;
34180     +Q_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10344827586206;
34181     +Q_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06206896551724;
34182     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34183     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34184     +END;
MPRINT(EM_DIAGRAM):   END;
34185     +END;
MPRINT(EM_DIAGRAM):   END;
34186     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34187     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34188     +IF NOT MISSING(DONOR_AGE ) AND
34189     +DONOR_AGE < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 70.5 THEN DO;
34190     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34191     +END;
MPRINT(EM_DIAGRAM):   END;
34192     +ELSE IF NOT MISSING(DONOR_AGE ) AND
34193     +70.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 70.5 <= DONOR_AGE THEN DO;
34194     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34195     +END;
MPRINT(EM_DIAGRAM):   END;
34196     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34197     +IF LIFETIME_PROM < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 70.5 THEN DO;
34198     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34199     +END;
MPRINT(EM_DIAGRAM):   END;
34200     +ELSE IF 70.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 70.5 <= LIFETIME_PROM THEN DO;
34201     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34202     +END;
MPRINT(EM_DIAGRAM):   END;
34203     +END;
MPRINT(EM_DIAGRAM):   END;
34204     +IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
34205     +_ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
34206     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34207     +IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
34208     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34209     +END;
MPRINT(EM_DIAGRAM):   END;
34210     +ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
34211     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34212     +END;
MPRINT(EM_DIAGRAM):   END;
34213     +END;
MPRINT(EM_DIAGRAM):   END;
34214     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34215     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34216     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34217     +IF NOT MISSING(RECENT_RESPONSE_PROP ) AND
34218     +RECENT_RESPONSE_PROP < 0.049 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_RESPONSE_PROP ) AND RECENT_RESPONSE_PROP < 0.049 THEN DO;
34219     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34220     +END;
MPRINT(EM_DIAGRAM):   END;
34221     +ELSE IF NOT MISSING(RECENT_RESPONSE_PROP ) AND
34222     +0.049 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_RESPONSE_PROP ) AND 0.049 <= RECENT_RESPONSE_PROP THEN DO;
34223     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34224     +END;
MPRINT(EM_DIAGRAM):   END;
34225     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
34226     +IF RECENT_AVG_GIFT_AMT < 1.6 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 1.6 THEN DO;
34227     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34228     +END;
MPRINT(EM_DIAGRAM):   END;
34229     +ELSE IF 1.6 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1.6 <= RECENT_AVG_GIFT_AMT THEN DO;
34230     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34231     +END;
MPRINT(EM_DIAGRAM):   END;
34232     +END;
MPRINT(EM_DIAGRAM):   END;
34233     +IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
34234     +IF LAST_GIFT_AMT < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 1.5 THEN DO;
34235     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34236     +END;
MPRINT(EM_DIAGRAM):   END;
34237     +ELSE IF 1.5 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1.5 <= LAST_GIFT_AMT THEN DO;
34238     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34239     +END;
MPRINT(EM_DIAGRAM):   END;
34240     +END;
MPRINT(EM_DIAGRAM):   END;
34241     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34242     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34243     +P_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.23076923076923;
34244     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34245     +P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
34246     +P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
34247     +P_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07692307692307;
34248     +P_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.53846153846153;
34249     +P_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.15384615384615;
34250     +Q_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.23076923076923;
34251     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34252     +Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
34253     +Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
34254     +Q_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07692307692307;
34255     +Q_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.53846153846153;
34256     +Q_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.15384615384615;
34257     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
34258     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
34259     +END;
MPRINT(EM_DIAGRAM):   END;
34260     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34261     +P_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.35313531353135;
34262     +P_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.03300330033003;
34263     +P_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.1056105610561;
34264     +P_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07590759075907;
34265     +P_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08580858085808;
34266     +P_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.34323432343234;
34267     +P_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.003300330033;
34268     +Q_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.35313531353135;
34269     +Q_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.03300330033003;
34270     +Q_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.1056105610561;
34271     +Q_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07590759075907;
34272     +Q_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08580858085808;
34273     +Q_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.34323432343234;
34274     +Q_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.003300330033;
34275     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34276     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34277     +END;
MPRINT(EM_DIAGRAM):   END;
34278     +END;
MPRINT(EM_DIAGRAM):   END;
34279     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34280     +P_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29548229548229;
34281     +P_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04029304029304;
34282     +P_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.12942612942612;
34283     +P_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14407814407814;
34284     +P_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.16483516483516;
34285     +P_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19169719169719;
34286     +P_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03418803418803;
34287     +Q_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29548229548229;
34288     +Q_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04029304029304;
34289     +Q_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.12942612942612;
34290     +Q_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14407814407814;
34291     +Q_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.16483516483516;
34292     +Q_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19169719169719;
34293     +Q_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03418803418803;
34294     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34295     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34296     +END;
MPRINT(EM_DIAGRAM):   END;
34297     +END;
MPRINT(EM_DIAGRAM):   END;
34298     +END;
MPRINT(EM_DIAGRAM):   END;
34299     +END;
MPRINT(EM_DIAGRAM):   END;
34300     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34301     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34302     +IF NOT MISSING(DONOR_AGE ) AND
34303     +DONOR_AGE < 66.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 66.5 THEN DO;
34304     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34305     +END;
MPRINT(EM_DIAGRAM):   END;
34306     +ELSE IF NOT MISSING(DONOR_AGE ) AND
34307     +66.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 66.5 <= DONOR_AGE THEN DO;
34308     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34309     +END;
MPRINT(EM_DIAGRAM):   END;
34310     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34311     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34312     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34313     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34314     +'25' ,'01' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,
34315     +'35' ,'19' ,'27' ,'46' ,'40' ,'21' ,'14' ,'51' ,'34' ,'42' ,'44' ,
34316     +'05' ,'17' ,'43' ,'39' ,'11' ,'31' ,'38' ,'47' ,'53' ,'22' ,'06' ,
34317     +'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'01' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' , '35' ,'19' ,'27' ,'46' ,'40' ,'21' ,'14' ,'51' ,'34' ,'42' ,'44' , '05' ,'17' ,'43' ,'39' ,'11' 
,'31' ,'38' ,'47' ,'53' ,'22' ,'06' , '32' ,'03' ,'52' ,'10' ) THEN DO;
34318     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34319     +END;
MPRINT(EM_DIAGRAM):   END;
34320     +ELSE IF _ARBFMT_2 IN ('23' ,'48' ,'13' ,'26' ,'28' ,'29' ,'33' ,'37' )
34321     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'48' ,'13' ,'26' ,'28' ,'29' ,'33' ,'37' ) THEN DO;
34322     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34323     +END;
MPRINT(EM_DIAGRAM):   END;
34324     +END;
MPRINT(EM_DIAGRAM):   END;
34325     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34326     +IF LIFETIME_PROM < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 73.5 THEN DO;
34327     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34328     +END;
MPRINT(EM_DIAGRAM):   END;
34329     +ELSE IF 73.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 73.5 <= LIFETIME_PROM THEN DO;
34330     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34331     +END;
MPRINT(EM_DIAGRAM):   END;
34332     +END;
MPRINT(EM_DIAGRAM):   END;
34333     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34334     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34335     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34336     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34337     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34338     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
34339     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34340     +END;
MPRINT(EM_DIAGRAM):   END;
34341     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
34342     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34343     +END;
MPRINT(EM_DIAGRAM):   END;
34344     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34345     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34346     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34347     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34348     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
34349     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
34350     +'33' ,'38' ,'47' ,'53' ,'06' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06' 
,'32' ,'52' ,'37' ,'10' ) THEN DO;
34351     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34352     +END;
MPRINT(EM_DIAGRAM):   END;
34353     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34354     +'13' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
34355     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34356     +END;
MPRINT(EM_DIAGRAM):   END;
34357     +END;
MPRINT(EM_DIAGRAM):   END;
34358     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34359     +IF PER_CAPITA_INCOME < 17330.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17330.5 THEN DO;
34360     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34361     +END;
MPRINT(EM_DIAGRAM):   END;
34362     +ELSE IF 17330.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17330.5 <= PER_CAPITA_INCOME THEN DO;
34363     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34364     +END;
MPRINT(EM_DIAGRAM):   END;
34365     +END;
MPRINT(EM_DIAGRAM):   END;
34366     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34367     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34368     +P_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.15845070422535;
34369     +P_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.08802816901408;
34370     +P_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21830985915492;
34371     +P_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21478873239436;
34372     +P_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09507042253521;
34373     +P_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10211267605633;
34374     +P_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.12323943661971;
34375     +Q_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.15845070422535;
34376     +Q_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.08802816901408;
34377     +Q_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21830985915492;
34378     +Q_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21478873239436;
34379     +Q_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09507042253521;
34380     +Q_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10211267605633;
34381     +Q_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.12323943661971;
34382     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34383     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34384     +END;
MPRINT(EM_DIAGRAM):   END;
34385     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34386     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34387     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34388     +MEDIAN_HOUSEHOLD_INCOME < 246.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 246.5 THEN DO;
34389     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34390     +END;
MPRINT(EM_DIAGRAM):   END;
34391     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34392     +246.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 246.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34393     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34394     +END;
MPRINT(EM_DIAGRAM):   END;
34395     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34396     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34397     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34398     +IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'25' ,'09' ,'41' ,'36' ,'48' ,
34399     +'51' ,'43' ,'31' ,'33' ,'47' ,'53' ,'32' ,'52' ,'37' ,'10' ) THEN
34400     +DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'25' ,'09' ,'41' ,'36' ,'48' , '51' ,'43' ,'31' ,'33' ,'47' ,'53' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
34401     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34402     +END;
MPRINT(EM_DIAGRAM):   END;
34403     +ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'18' ,
34404     +'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,'21' ,'44' ,'29' ,'05' ,
34405     +'17' ,'39' ,'38' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'18' , '08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,'21' ,'44' ,'29' ,'05' , '17' ,'39' ,'38' ,'06' ) THEN DO;
34406     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34407     +END;
MPRINT(EM_DIAGRAM):   END;
34408     +END;
MPRINT(EM_DIAGRAM):   END;
34409     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34410     +IF PER_CAPITA_INCOME < 11131.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11131.5 THEN DO;
34411     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34412     +END;
MPRINT(EM_DIAGRAM):   END;
34413     +ELSE IF 11131.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11131.5 <= PER_CAPITA_INCOME THEN DO;
34414     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34415     +END;
MPRINT(EM_DIAGRAM):   END;
34416     +END;
MPRINT(EM_DIAGRAM):   END;
34417     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34418     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34419     +IF NOT MISSING(MOR_HIT_RATE ) AND
34420     +35 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND 35 <= MOR_HIT_RATE THEN DO;
34421     +P_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.22222222222222;
34422     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34423     +P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
34424     +P_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.33333333333333;
34425     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
34426     +P_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11111111111111;
34427     +P_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.33333333333333;
34428     +Q_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.22222222222222;
34429     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34430     +Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
34431     +Q_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.33333333333333;
34432     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
34433     +Q_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11111111111111;
34434     +Q_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.33333333333333;
34435     +I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
34436     +U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
34437     +END;
MPRINT(EM_DIAGRAM):   END;
34438     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34439     +P_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.40227703984819;
34440     +P_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.05313092979127;
34441     +P_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10436432637571;
34442     +P_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.12903225806451;
34443     +P_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09487666034155;
34444     +P_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19734345351043;
34445     +P_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01897533206831;
34446     +Q_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.40227703984819;
34447     +Q_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.05313092979127;
34448     +Q_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10436432637571;
34449     +Q_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.12903225806451;
34450     +Q_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09487666034155;
34451     +Q_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19734345351043;
34452     +Q_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01897533206831;
34453     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34454     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34455     +END;
MPRINT(EM_DIAGRAM):   END;
34456     +END;
MPRINT(EM_DIAGRAM):   END;
34457     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34458     +IF NOT MISSING(RECENT_STAR_STATUS ) AND
34459     +14.5 <= RECENT_STAR_STATUS THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_STAR_STATUS ) AND 14.5 <= RECENT_STAR_STATUS THEN DO;
34460     +P_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.2;
34461     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34462     +P_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.2;
34463     +P_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2;
34464     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
34465     +P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
34466     +P_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4;
34467     +Q_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.2;
34468     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34469     +Q_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.2;
34470     +Q_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2;
34471     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
34472     +Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
34473     +Q_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4;
34474     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
34475     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
34476     +END;
MPRINT(EM_DIAGRAM):   END;
34477     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34478     +P_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.25784447476125;
34479     +P_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.06412005457025;
34480     +P_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.19099590723055;
34481     +P_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19645293315143;
34482     +P_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.15552523874488;
34483     +P_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11869031377899;
34484     +P_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01637107776261;
34485     +Q_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.25784447476125;
34486     +Q_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.06412005457025;
34487     +Q_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.19099590723055;
34488     +Q_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19645293315143;
34489     +Q_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.15552523874488;
34490     +Q_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11869031377899;
34491     +Q_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01637107776261;
34492     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34493     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34494     +END;
MPRINT(EM_DIAGRAM):   END;
34495     +END;
MPRINT(EM_DIAGRAM):   END;
34496     +END;
MPRINT(EM_DIAGRAM):   END;
34497     +END;
MPRINT(EM_DIAGRAM):   END;
34498     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34499     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34500     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34501     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34502     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
34503     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34504     +END;
MPRINT(EM_DIAGRAM):   END;
34505     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
34506     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34507     +END;
MPRINT(EM_DIAGRAM):   END;
34508     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34509     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34510     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34511     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34512     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
34513     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
34514     +'33' ,'38' ,'47' ,'53' ,'06' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06' 
,'32' ,'52' ,'37' ,'10' ) THEN DO;
34515     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34516     +END;
MPRINT(EM_DIAGRAM):   END;
34517     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34518     +'13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
34519     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34520     +END;
MPRINT(EM_DIAGRAM):   END;
34521     +END;
MPRINT(EM_DIAGRAM):   END;
34522     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34523     +IF PER_CAPITA_INCOME < 17172.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17172.5 THEN DO;
34524     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34525     +END;
MPRINT(EM_DIAGRAM):   END;
34526     +ELSE IF 17172.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17172.5 <= PER_CAPITA_INCOME THEN DO;
34527     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34528     +END;
MPRINT(EM_DIAGRAM):   END;
34529     +END;
MPRINT(EM_DIAGRAM):   END;
34530     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34531     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34532     +P_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04496788008565;
34533     +P_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.15203426124197;
34534     +P_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.38115631691648;
34535     +P_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.15631691648822;
34536     +P_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05995717344753;
34537     +P_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.02141327623126;
34538     +P_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18415417558886;
34539     +Q_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04496788008565;
34540     +Q_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.15203426124197;
34541     +Q_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.38115631691648;
34542     +Q_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.15631691648822;
34543     +Q_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05995717344753;
34544     +Q_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.02141327623126;
34545     +Q_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18415417558886;
34546     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34547     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34548     +END;
MPRINT(EM_DIAGRAM):   END;
34549     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34550     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34551     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
34552     +PER_CAPITA_INCOME < 10272 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 10272 THEN DO;
34553     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34554     +END;
MPRINT(EM_DIAGRAM):   END;
34555     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
34556     +10272 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 10272 <= PER_CAPITA_INCOME THEN DO;
34557     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34558     +END;
MPRINT(EM_DIAGRAM):   END;
34559     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
34560     +IF MEDIAN_HOUSEHOLD_INCOME < 214.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 214.5 THEN DO;
34561     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34562     +END;
MPRINT(EM_DIAGRAM):   END;
34563     +ELSE IF 214.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 214.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34564     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34565     +END;
MPRINT(EM_DIAGRAM):   END;
34566     +END;
MPRINT(EM_DIAGRAM):   END;
34567     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34568     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34569     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34570     +IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'41' ,'51' ,'43' ,'31' ,'47' ,
34571     +'53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'41' ,'51' ,'43' ,'31' ,'47' , '53' ,'32' ,'52' ,'10' ) THEN DO;
34572     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34573     +END;
MPRINT(EM_DIAGRAM):   END;
34574     +ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'25' ,
34575     +'09' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,
34576     +'21' ,'44' ,'29' ,'05' ,'17' ,'39' ,'33' ,'38' ,'06' ,'37' ) THEN
34577     +DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'25' , '09' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' , '21' ,'44' ,'29' ,'05' ,'17' ,'39' ,'33' ,'38' ,'06' ,'37' ) THEN DO;
34578     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34579     +END;
MPRINT(EM_DIAGRAM):   END;
34580     +END;
MPRINT(EM_DIAGRAM):   END;
34581     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34582     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34583     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34584     +IF NOT MISSING(MOR_HIT_RATE ) AND
34585     +MOR_HIT_RATE < 16 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND MOR_HIT_RATE < 16 THEN DO;
34586     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34587     +END;
MPRINT(EM_DIAGRAM):   END;
34588     +ELSE IF NOT MISSING(MOR_HIT_RATE ) AND
34589     +16 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MOR_HIT_RATE ) AND 16 <= MOR_HIT_RATE THEN DO;
34590     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34591     +END;
MPRINT(EM_DIAGRAM):   END;
34592     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
34593     +IF FILE_AVG_GIFT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 47.5 THEN DO;
34594     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34595     +END;
MPRINT(EM_DIAGRAM):   END;
34596     +ELSE IF 47.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= FILE_AVG_GIFT THEN DO;
34597     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34598     +END;
MPRINT(EM_DIAGRAM):   END;
34599     +END;
MPRINT(EM_DIAGRAM):   END;
34600     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
34601     +IF LIFETIME_AVG_GIFT_AMT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 47.5 THEN DO;
34602     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34603     +END;
MPRINT(EM_DIAGRAM):   END;
34604     +ELSE IF 47.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
34605     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34606     +END;
MPRINT(EM_DIAGRAM):   END;
34607     +END;
MPRINT(EM_DIAGRAM):   END;
34608     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34609     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34610     +P_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.20689655172413;
34611     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34612     +P_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10344827586206;
34613     +P_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06896551724137;
34614     +P_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.20689655172413;
34615     +P_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41379310344827;
34616     +P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
34617     +Q_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.20689655172413;
34618     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34619     +Q_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10344827586206;
34620     +Q_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06896551724137;
34621     +Q_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.20689655172413;
34622     +Q_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41379310344827;
34623     +Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
34624     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
34625     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
34626     +END;
MPRINT(EM_DIAGRAM):   END;
34627     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34628     +P_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1782334384858;
34629     +P_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.0583596214511;
34630     +P_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.20504731861198;
34631     +P_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2192429022082;
34632     +P_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.17981072555205;
34633     +P_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.09779179810725;
34634     +P_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06151419558359;
34635     +Q_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1782334384858;
34636     +Q_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.0583596214511;
34637     +Q_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.20504731861198;
34638     +Q_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2192429022082;
34639     +Q_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.17981072555205;
34640     +Q_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.09779179810725;
34641     +Q_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06151419558359;
34642     +I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
34643     +U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
34644     +END;
MPRINT(EM_DIAGRAM):   END;
34645     +END;
MPRINT(EM_DIAGRAM):   END;
34646     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34647     +P_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.12755102040816;
34648     +P_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.09566326530612;
34649     +P_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29400510204081;
34650     +P_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2563775510204;
34651     +P_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.12181122448979;
34652     +P_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.03188775510204;
34653     +P_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.07270408163265;
34654     +Q_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.12755102040816;
34655     +Q_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.09566326530612;
34656     +Q_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29400510204081;
34657     +Q_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2563775510204;
34658     +Q_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.12181122448979;
34659     +Q_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.03188775510204;
34660     +Q_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.07270408163265;
34661     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34662     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34663     +END;
MPRINT(EM_DIAGRAM):   END;
34664     +END;
MPRINT(EM_DIAGRAM):   END;
34665     +END;
MPRINT(EM_DIAGRAM):   END;
34666     +END;
MPRINT(EM_DIAGRAM):   END;
34667     +END;
MPRINT(EM_DIAGRAM):   END;
34668     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34669     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
34670     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34671     +*;
MPRINT(EM_DIAGRAM):   *;
34672     +* ASSIGN VALUE TO: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: INCOME_GROUP;
34673     +*;
MPRINT(EM_DIAGRAM):   *;
34674     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
34675     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
34676     +_format200 = strip(I_INCOME_GROUP);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_INCOME_GROUP);
34677     +if _format200="7" then IMP_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   if _format200="7" then IMP_INCOME_GROUP = 7;
34678     +else
34679     +if _format200="6" then IMP_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_INCOME_GROUP = 6;
34680     +else
34681     +if _format200="5" then IMP_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_INCOME_GROUP = 5;
34682     +else
34683     +if _format200="4" then IMP_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_INCOME_GROUP = 4;
34684     +else
34685     +if _format200="3" then IMP_INCOME_GROUP = 3;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_INCOME_GROUP = 3;
34686     +else
34687     +if _format200="2" then IMP_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_INCOME_GROUP = 2;
34688     +else
34689     +if _format200="1" then IMP_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_INCOME_GROUP = 1;
34690     +END;
MPRINT(EM_DIAGRAM):   END;
34691     +*;
MPRINT(EM_DIAGRAM):   *;
34692     +* IMPUTE VARIABLE: REP_SES;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_SES;
34693     +*;
MPRINT(EM_DIAGRAM):   *;
34694     +length IMP_REP_SES $4;
MPRINT(EM_DIAGRAM):   length IMP_REP_SES $4;
34695     +label IMP_REP_SES = 'Imputed: Replacement: SES';
MPRINT(EM_DIAGRAM):   label IMP_REP_SES = 'Imputed: Replacement: SES';
34696     +IMP_REP_SES = REP_SES;
MPRINT(EM_DIAGRAM):   IMP_REP_SES = REP_SES;
NOTE: Numeric value converted to character.
34697     +if IMP_REP_SES eq '' then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_SES eq '' then do;
34698     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34699     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
34700     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34701     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
34702     +LENGTH I_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_SES $ 4;
34703     +LENGTH U_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_SES $ 4;
34704     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
34705     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
34706     +LABEL P_REP_SES2 = 'Predicted: REP_SES=2';
MPRINT(EM_DIAGRAM):   LABEL P_REP_SES2 = 'Predicted: REP_SES=2';
34707     +LABEL P_REP_SES3 = 'Predicted: REP_SES=3';
MPRINT(EM_DIAGRAM):   LABEL P_REP_SES3 = 'Predicted: REP_SES=3';
34708     +LABEL P_REP_SES1 = 'Predicted: REP_SES=1';
MPRINT(EM_DIAGRAM):   LABEL P_REP_SES1 = 'Predicted: REP_SES=1';
34709     +LABEL P_REP_SES4 = 'Predicted: REP_SES=4';
MPRINT(EM_DIAGRAM):   LABEL P_REP_SES4 = 'Predicted: REP_SES=4';
34710     +LABEL Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
34711     +LABEL Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
34712     +LABEL Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
34713     +LABEL Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
34714     +LABEL I_REP_SES = 'Into: REP_SES';
MPRINT(EM_DIAGRAM):   LABEL I_REP_SES = 'Into: REP_SES';
34715     +LABEL U_REP_SES = 'Unnormalized Into: REP_SES';
MPRINT(EM_DIAGRAM):   LABEL U_REP_SES = 'Unnormalized Into: REP_SES';
34716     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
34717     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
34718     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
34719     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
34720     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
34721     +/* Initialize to avoid warning. */
34722     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
34723     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
34724     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
34725     +/* Initialize to avoid warning. */
34726     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
34727     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
34728     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34729     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34730     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34731     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' ,
34732     +'34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' ,
34733     +'12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' ,
34734     +'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,
34735     +'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' , '34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' , '12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' , '29' ,'05' 
,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' , '10' ) THEN DO;
34736     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34737     +END;
MPRINT(EM_DIAGRAM):   END;
34738     +ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
34739     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34740     +END;
MPRINT(EM_DIAGRAM):   END;
34741     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
34742     +IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
34743     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34744     +END;
MPRINT(EM_DIAGRAM):   END;
34745     +ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
34746     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34747     +END;
MPRINT(EM_DIAGRAM):   END;
34748     +END;
MPRINT(EM_DIAGRAM):   END;
34749     +IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
34750     +IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
34751     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34752     +END;
MPRINT(EM_DIAGRAM):   END;
34753     +ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
34754     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34755     +END;
MPRINT(EM_DIAGRAM):   END;
34756     +END;
MPRINT(EM_DIAGRAM):   END;
34757     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34758     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34759     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
34760     +P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
34761     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
34762     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
34763     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
34764     +Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
34765     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
34766     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
34767     +I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
34768     +U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
34769     +END;
MPRINT(EM_DIAGRAM):   END;
34770     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34771     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34772     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34773     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34774     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' ,
34775     +'37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' , '37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
34776     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34777     +END;
MPRINT(EM_DIAGRAM):   END;
34778     +ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,
34779     +'35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,
34780     +'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' , '35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' , '33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
34781     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34782     +END;
MPRINT(EM_DIAGRAM):   END;
34783     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34784     +IF PER_CAPITA_INCOME < 15470.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15470.5 THEN DO;
34785     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34786     +END;
MPRINT(EM_DIAGRAM):   END;
34787     +ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
34788     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34789     +END;
MPRINT(EM_DIAGRAM):   END;
34790     +END;
MPRINT(EM_DIAGRAM):   END;
34791     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
34792     +IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
34793     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34794     +END;
MPRINT(EM_DIAGRAM):   END;
34795     +ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
34796     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34797     +END;
MPRINT(EM_DIAGRAM):   END;
34798     +END;
MPRINT(EM_DIAGRAM):   END;
34799     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34800     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34801     +P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
34802     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
34803     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
34804     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
34805     +Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
34806     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
34807     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
34808     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
34809     +I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
34810     +U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
34811     +END;
MPRINT(EM_DIAGRAM):   END;
34812     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34813     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34814     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34815     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34816     +IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34817     +'13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
34818     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34819     +END;
MPRINT(EM_DIAGRAM):   END;
34820     +ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,
34821     +'33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' , '33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
34822     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34823     +END;
MPRINT(EM_DIAGRAM):   END;
34824     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34825     +IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
34826     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34827     +END;
MPRINT(EM_DIAGRAM):   END;
34828     +ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
34829     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34830     +END;
MPRINT(EM_DIAGRAM):   END;
34831     +END;
MPRINT(EM_DIAGRAM):   END;
34832     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
34833     +IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
34834     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34835     +END;
MPRINT(EM_DIAGRAM):   END;
34836     +ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
34837     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34838     +END;
MPRINT(EM_DIAGRAM):   END;
34839     +END;
MPRINT(EM_DIAGRAM):   END;
34840     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34841     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34842     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34843     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34844     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34845     +IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' )
34846     +THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' ) THEN DO;
34847     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34848     +END;
MPRINT(EM_DIAGRAM):   END;
34849     +ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
34850     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34851     +END;
MPRINT(EM_DIAGRAM):   END;
34852     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34853     +IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
34854     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34855     +END;
MPRINT(EM_DIAGRAM):   END;
34856     +ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
34857     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34858     +END;
MPRINT(EM_DIAGRAM):   END;
34859     +END;
MPRINT(EM_DIAGRAM):   END;
34860     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
34861     +IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34862     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34863     +END;
MPRINT(EM_DIAGRAM):   END;
34864     +ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
34865     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34866     +END;
MPRINT(EM_DIAGRAM):   END;
34867     +END;
MPRINT(EM_DIAGRAM):   END;
34868     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34869     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34870     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34871     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
34872     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34873     +IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
34874     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34875     +END;
MPRINT(EM_DIAGRAM):   END;
34876     +ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
34877     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34878     +END;
MPRINT(EM_DIAGRAM):   END;
34879     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34880     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34881     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34882     +IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
34883     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34884     +END;
MPRINT(EM_DIAGRAM):   END;
34885     +ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
34886     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34887     +END;
MPRINT(EM_DIAGRAM):   END;
34888     +END;
MPRINT(EM_DIAGRAM):   END;
34889     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
34890     +IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
34891     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34892     +END;
MPRINT(EM_DIAGRAM):   END;
34893     +ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
34894     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34895     +END;
MPRINT(EM_DIAGRAM):   END;
34896     +END;
MPRINT(EM_DIAGRAM):   END;
34897     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34898     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34899     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
34900     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
34901     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
34902     +P_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 1;
34903     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
34904     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
34905     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
34906     +Q_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 1;
34907     +I_REP_SES = '4';
MPRINT(EM_DIAGRAM):   I_REP_SES = '4';
34908     +U_REP_SES = '4';
MPRINT(EM_DIAGRAM):   U_REP_SES = '4';
34909     +END;
MPRINT(EM_DIAGRAM):   END;
34910     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34911     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
34912     +P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
34913     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
34914     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
34915     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
34916     +Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
34917     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
34918     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
34919     +I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
34920     +U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
34921     +END;
MPRINT(EM_DIAGRAM):   END;
34922     +END;
MPRINT(EM_DIAGRAM):   END;
34923     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34924     +P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
34925     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
34926     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
34927     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
34928     +Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
34929     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
34930     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
34931     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
34932     +I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
34933     +U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
34934     +END;
MPRINT(EM_DIAGRAM):   END;
34935     +END;
MPRINT(EM_DIAGRAM):   END;
34936     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34937     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
34938     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
34939     +P_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 1;
34940     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
34941     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
34942     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
34943     +Q_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 1;
34944     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
34945     +I_REP_SES = '1';
MPRINT(EM_DIAGRAM):   I_REP_SES = '1';
34946     +U_REP_SES = '1';
MPRINT(EM_DIAGRAM):   U_REP_SES = '1';
34947     +END;
MPRINT(EM_DIAGRAM):   END;
34948     +END;
MPRINT(EM_DIAGRAM):   END;
34949     +END;
MPRINT(EM_DIAGRAM):   END;
34950     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34951     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
34952     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34953     +*;
MPRINT(EM_DIAGRAM):   *;
34954     +* ASSIGN VALUE TO: REP_SES;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_SES;
34955     +*;
MPRINT(EM_DIAGRAM):   *;
34956     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
34957     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
34958     +_format200 = strip(I_REP_SES);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_SES);
34959     +if _format200="4" then IMP_REP_SES = "4   ";
MPRINT(EM_DIAGRAM):   if _format200="4" then IMP_REP_SES = "4   ";
34960     +else
34961     +if _format200="3" then IMP_REP_SES = "3   ";
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_REP_SES = "3   ";
34962     +else
34963     +if _format200="2" then IMP_REP_SES = "2   ";
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_REP_SES = "2   ";
34964     +else
34965     +if _format200="1" then IMP_REP_SES = "1   ";
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_REP_SES = "1   ";
34966     +END;
MPRINT(EM_DIAGRAM):   END;
34967     +*;
MPRINT(EM_DIAGRAM):   *;
34968     +* IMPUTE VARIABLE: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_URBANICITY;
34969     +*;
MPRINT(EM_DIAGRAM):   *;
34970     +length IMP_REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   length IMP_REP_URBANICITY $4;
34971     +label IMP_REP_URBANICITY = 'Imputed: Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   label IMP_REP_URBANICITY = 'Imputed: Replacement: URBANICITY';
34972     +IMP_REP_URBANICITY = REP_URBANICITY;
MPRINT(EM_DIAGRAM):   IMP_REP_URBANICITY = REP_URBANICITY;
NOTE: Numeric value converted to character.
34973     +if IMP_REP_URBANICITY eq '' then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_URBANICITY eq '' then do;
34974     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34975     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
34976     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34977     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
34978     +LENGTH I_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_URBANICITY $ 4;
34979     +LENGTH U_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_URBANICITY $ 4;
34980     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
34981     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
34982     +LABEL P_REP_URBANICITYU = 'Predicted: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   LABEL P_REP_URBANICITYU = 'Predicted: REP_URBANICITY=U';
34983     +LABEL P_REP_URBANICITYR = 'Predicted: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   LABEL P_REP_URBANICITYR = 'Predicted: REP_URBANICITY=R';
34984     +LABEL P_REP_URBANICITYS = 'Predicted: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   LABEL P_REP_URBANICITYS = 'Predicted: REP_URBANICITY=S';
34985     +LABEL P_REP_URBANICITYC = 'Predicted: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   LABEL P_REP_URBANICITYC = 'Predicted: REP_URBANICITY=C';
34986     +LABEL P_REP_URBANICITYT = 'Predicted: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   LABEL P_REP_URBANICITYT = 'Predicted: REP_URBANICITY=T';
34987     +LABEL Q_REP_URBANICITYU = 'Unadjusted P: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_URBANICITYU = 'Unadjusted P: REP_URBANICITY=U';
34988     +LABEL Q_REP_URBANICITYR = 'Unadjusted P: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_URBANICITYR = 'Unadjusted P: REP_URBANICITY=R';
34989     +LABEL Q_REP_URBANICITYS = 'Unadjusted P: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_URBANICITYS = 'Unadjusted P: REP_URBANICITY=S';
34990     +LABEL Q_REP_URBANICITYC = 'Unadjusted P: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_URBANICITYC = 'Unadjusted P: REP_URBANICITY=C';
34991     +LABEL Q_REP_URBANICITYT = 'Unadjusted P: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   LABEL Q_REP_URBANICITYT = 'Unadjusted P: REP_URBANICITY=T';
34992     +LABEL I_REP_URBANICITY = 'Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   LABEL I_REP_URBANICITY = 'Into: REP_URBANICITY';
34993     +LABEL U_REP_URBANICITY = 'Unnormalized Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   LABEL U_REP_URBANICITY = 'Unnormalized Into: REP_URBANICITY';
34994     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
34995     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
34996     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
34997     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
34998     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
34999     +/* Initialize to avoid warning. */
35000     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
35001     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
35002     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
35003     +/* Initialize to avoid warning. */
35004     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
35005     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
35006     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35007     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35008     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35009     +IF _ARBFMT_2 IN ('04' ,'20' ,'16' ,'07' ,'34' ,'01' ,'09' ,'02' ,'41' ,
35010     +'37' ,'15' ,'38' ,'18' ,'36' ,'08' ,'12' ,'35' ,'19' ,'27' ,'40' ,'13' ,
35011     +'26' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,
35012     +'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'20' ,'16' ,'07' ,'34' ,'01' ,'09' ,'02' ,'41' , '37' ,'15' ,'38' ,'18' ,'36' ,'08' ,'12' ,'35' ,'19' ,'27' ,'40' ,'13' , '26' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' , '47' ,'22' 
,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
35013     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35014     +END;
MPRINT(EM_DIAGRAM):   END;
35015     +ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'30' ,'23' ,
35016     +'25' ,'48' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'30' ,'23' , '25' ,'48' ,'24' ,'31' ) THEN DO;
35017     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35018     +END;
MPRINT(EM_DIAGRAM):   END;
35019     +IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
35020     +IF LAST_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 215 THEN DO;
35021     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35022     +END;
MPRINT(EM_DIAGRAM):   END;
35023     +ELSE IF 215 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LAST_GIFT_AMT THEN DO;
35024     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35025     +END;
MPRINT(EM_DIAGRAM):   END;
35026     +END;
MPRINT(EM_DIAGRAM):   END;
35027     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
35028     +IF LIFETIME_MAX_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 215 THEN DO;
35029     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35030     +END;
MPRINT(EM_DIAGRAM):   END;
35031     +ELSE IF 215 <= LIFETIME_MAX_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LIFETIME_MAX_GIFT_AMT THEN DO;
35032     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35033     +END;
MPRINT(EM_DIAGRAM):   END;
35034     +END;
MPRINT(EM_DIAGRAM):   END;
35035     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35036     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35037     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35038     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35039     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35040     +IF _ARBFMT_2 IN ('30' ,'23' ,'25' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'23' ,'25' ,'24' ,'31' ) THEN DO;
35041     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35042     +END;
MPRINT(EM_DIAGRAM):   END;
35043     +ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'48' )
35044     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'48' ) THEN DO;
35045     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35046     +END;
MPRINT(EM_DIAGRAM):   END;
35047     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35048     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35049     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35050     +IF _ARBFMT_4 IN ('3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'1' ) THEN DO;
35051     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35052     +END;
MPRINT(EM_DIAGRAM):   END;
35053     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
35054     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35055     +END;
MPRINT(EM_DIAGRAM):   END;
35056     +END;
MPRINT(EM_DIAGRAM):   END;
35057     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35058     +IF 15609 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 15609 <= PER_CAPITA_INCOME THEN DO;
35059     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35060     +END;
MPRINT(EM_DIAGRAM):   END;
35061     +ELSE IF PER_CAPITA_INCOME < 15609 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15609 THEN DO;
35062     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35063     +END;
MPRINT(EM_DIAGRAM):   END;
35064     +END;
MPRINT(EM_DIAGRAM):   END;
35065     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35066     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35067     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35068     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35069     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35070     +P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
35071     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35072     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35073     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35074     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35075     +Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
35076     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35077     +I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
35078     +U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
35079     +END;
MPRINT(EM_DIAGRAM):   END;
35080     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35081     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35082     +P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
35083     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35084     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35085     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35086     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35087     +Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
35088     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35089     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35090     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35091     +I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
35092     +U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
35093     +END;
MPRINT(EM_DIAGRAM):   END;
35094     +END;
MPRINT(EM_DIAGRAM):   END;
35095     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35096     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35097     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35098     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35099     +IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'27' ,'26' ,'28' ,
35100     +'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,
35101     +'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'27' ,'26' ,'28' , '51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' , '03' ,'52' ,'10' ) THEN DO;
35102     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35103     +END;
MPRINT(EM_DIAGRAM):   END;
35104     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'34' ,'41' ,'37' ,'15' ,'38' ,'18' ,
35105     +'36' ,'12' ,'35' ,'19' ,'40' ,'13' ,'21' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'34' ,'41' ,'37' ,'15' ,'38' ,'18' , '36' ,'12' ,'35' ,'19' ,'40' ,'13' ,'21' ,'14' ) THEN DO;
35106     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35107     +END;
MPRINT(EM_DIAGRAM):   END;
35108     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35109     +IF PCT_OWNER_OCCUPIED < 65.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 65.5 THEN DO;
35110     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35111     +END;
MPRINT(EM_DIAGRAM):   END;
35112     +ELSE IF 65.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 65.5 <= PCT_OWNER_OCCUPIED THEN DO;
35113     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35114     +END;
MPRINT(EM_DIAGRAM):   END;
35115     +END;
MPRINT(EM_DIAGRAM):   END;
35116     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35117     +IF MEDIAN_HOUSEHOLD_INCOME < 354.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 354.5 THEN DO;
35118     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35119     +END;
MPRINT(EM_DIAGRAM):   END;
35120     +ELSE IF 354.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 354.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35121     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35122     +END;
MPRINT(EM_DIAGRAM):   END;
35123     +END;
MPRINT(EM_DIAGRAM):   END;
35124     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35125     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35126     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35127     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35128     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35129     +IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'39' ,'06' ,
35130     +'03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'39' ,'06' , '03' ,'10' ) THEN DO;
35131     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35132     +END;
MPRINT(EM_DIAGRAM):   END;
35133     +ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'17' ,'11' ,
35134     +'33' ,'47' ,'22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'17' ,'11' , '33' ,'47' ,'22' ,'32' ,'52' ) THEN DO;
35135     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35136     +END;
MPRINT(EM_DIAGRAM):   END;
35137     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35138     +IF 1440 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1440 <= MEDIAN_HOME_VALUE THEN DO;
35139     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35140     +END;
MPRINT(EM_DIAGRAM):   END;
35141     +ELSE IF MEDIAN_HOME_VALUE < 1440 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1440 THEN DO;
35142     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35143     +END;
MPRINT(EM_DIAGRAM):   END;
35144     +END;
MPRINT(EM_DIAGRAM):   END;
35145     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35146     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35147     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35148     +IF _ARBFMT_4 IN ('1' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ,'4' ) THEN DO;
35149     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35150     +END;
MPRINT(EM_DIAGRAM):   END;
35151     +ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
35152     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35153     +END;
MPRINT(EM_DIAGRAM):   END;
35154     +END;
MPRINT(EM_DIAGRAM):   END;
35155     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35156     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35157     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35158     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35159     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35160     +IF _ARBFMT_2 IN ('39' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('39' ) THEN DO;
35161     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35162     +END;
MPRINT(EM_DIAGRAM):   END;
35163     +ELSE IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'06' ,
35164     +'03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'06' , '03' ,'10' ) THEN DO;
35165     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35166     +END;
MPRINT(EM_DIAGRAM):   END;
35167     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE1 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE1 ) THEN DO;
35168     +IF 6.5 <= PCT_ATTRIBUTE1 THEN DO;
MPRINT(EM_DIAGRAM):   IF 6.5 <= PCT_ATTRIBUTE1 THEN DO;
35169     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35170     +END;
MPRINT(EM_DIAGRAM):   END;
35171     +ELSE IF PCT_ATTRIBUTE1 < 6.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE1 < 6.5 THEN DO;
35172     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35173     +END;
MPRINT(EM_DIAGRAM):   END;
35174     +END;
MPRINT(EM_DIAGRAM):   END;
35175     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35176     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35177     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35178     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35179     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35180     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35181     +P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
35182     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35183     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35184     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35185     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35186     +Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
35187     +I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
35188     +U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
35189     +END;
MPRINT(EM_DIAGRAM):   END;
35190     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35191     +P_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 1;
35192     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35193     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35194     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35195     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35196     +Q_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 1;
35197     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35198     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35199     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35200     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35201     +I_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'U';
35202     +U_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'U';
35203     +END;
MPRINT(EM_DIAGRAM):   END;
35204     +END;
MPRINT(EM_DIAGRAM):   END;
35205     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35206     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35207     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35208     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35209     +IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'33' ,'47' ,
35210     +'22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'33' ,'47' , '22' ,'32' ,'52' ) THEN DO;
35211     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35212     +END;
MPRINT(EM_DIAGRAM):   END;
35213     +ELSE IF _ARBFMT_2 IN ('17' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('17' ,'11' ) THEN DO;
35214     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35215     +END;
MPRINT(EM_DIAGRAM):   END;
35216     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35217     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35218     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35219     +IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
35220     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35221     +END;
MPRINT(EM_DIAGRAM):   END;
35222     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
35223     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35224     +END;
MPRINT(EM_DIAGRAM):   END;
35225     +END;
MPRINT(EM_DIAGRAM):   END;
35226     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35227     +IF MEDIAN_HOME_VALUE < 1970.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1970.5 THEN DO;
35228     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35229     +END;
MPRINT(EM_DIAGRAM):   END;
35230     +ELSE IF 1970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1970.5 <= MEDIAN_HOME_VALUE THEN DO;
35231     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35232     +END;
MPRINT(EM_DIAGRAM):   END;
35233     +END;
MPRINT(EM_DIAGRAM):   END;
35234     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35235     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35236     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35237     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35238     +P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
35239     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35240     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35241     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35242     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35243     +Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
35244     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35245     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35246     +I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
35247     +U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
35248     +END;
MPRINT(EM_DIAGRAM):   END;
35249     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35250     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35251     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35252     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35253     +IF _ARBFMT_2 IN ('51' ,'44' ,'47' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('51' ,'44' ,'47' ,'52' ) THEN DO;
35254     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35255     +END;
MPRINT(EM_DIAGRAM):   END;
35256     +ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'29' ,'33' ,'22' ,'32' )
35257     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'29' ,'33' ,'22' ,'32' ) THEN DO;
35258     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35259     +END;
MPRINT(EM_DIAGRAM):   END;
35260     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35261     +IF PER_CAPITA_INCOME < 11036.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11036.5 THEN DO;
35262     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35263     +END;
MPRINT(EM_DIAGRAM):   END;
35264     +ELSE IF 11036.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11036.5 <= PER_CAPITA_INCOME THEN DO;
35265     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35266     +END;
MPRINT(EM_DIAGRAM):   END;
35267     +END;
MPRINT(EM_DIAGRAM):   END;
35268     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35269     +IF MEDIAN_HOME_VALUE < 455 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 455 THEN DO;
35270     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35271     +END;
MPRINT(EM_DIAGRAM):   END;
35272     +ELSE IF 455 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 455 <= MEDIAN_HOME_VALUE THEN DO;
35273     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35274     +END;
MPRINT(EM_DIAGRAM):   END;
35275     +END;
MPRINT(EM_DIAGRAM):   END;
35276     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35277     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35278     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35279     +P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
35280     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35281     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35282     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35283     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35284     +Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
35285     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35286     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35287     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35288     +I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
35289     +U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
35290     +END;
MPRINT(EM_DIAGRAM):   END;
35291     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35292     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35293     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35294     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35295     +P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
35296     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35297     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35298     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35299     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35300     +Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
35301     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35302     +I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
35303     +U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
35304     +END;
MPRINT(EM_DIAGRAM):   END;
35305     +END;
MPRINT(EM_DIAGRAM):   END;
35306     +END;
MPRINT(EM_DIAGRAM):   END;
35307     +END;
MPRINT(EM_DIAGRAM):   END;
35308     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35309     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35310     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35311     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35312     +IF _ARBFMT_2 IN ('34' ,'41' ,'37' ,'38' ,'36' ,'35' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('34' ,'41' ,'37' ,'38' ,'36' ,'35' ,'40' ) THEN DO;
35313     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35314     +END;
MPRINT(EM_DIAGRAM):   END;
35315     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'15' ,'18' ,'12' ,'19' ,'13' ,'21' ,
35316     +'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'15' ,'18' ,'12' ,'19' ,'13' ,'21' , '14' ) THEN DO;
35317     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35318     +END;
MPRINT(EM_DIAGRAM):   END;
35319     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35320     +IF MEDIAN_HOUSEHOLD_INCOME < 302.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 302.5 THEN DO;
35321     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35322     +END;
MPRINT(EM_DIAGRAM):   END;
35323     +ELSE IF 302.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 302.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35324     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35325     +END;
MPRINT(EM_DIAGRAM):   END;
35326     +END;
MPRINT(EM_DIAGRAM):   END;
35327     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35328     +IF MEDIAN_HOME_VALUE < 797.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 797.5 THEN DO;
35329     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35330     +END;
MPRINT(EM_DIAGRAM):   END;
35331     +ELSE IF 797.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 797.5 <= MEDIAN_HOME_VALUE THEN DO;
35332     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35333     +END;
MPRINT(EM_DIAGRAM):   END;
35334     +END;
MPRINT(EM_DIAGRAM):   END;
35335     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35336     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35337     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35338     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35339     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35340     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35341     +P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
35342     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35343     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35344     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35345     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35346     +Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
35347     +I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
35348     +U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
35349     +END;
MPRINT(EM_DIAGRAM):   END;
35350     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35351     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35352     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35353     +P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
35354     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35355     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35356     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35357     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35358     +Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
35359     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35360     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35361     +I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
35362     +U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
35363     +END;
MPRINT(EM_DIAGRAM):   END;
35364     +END;
MPRINT(EM_DIAGRAM):   END;
35365     +END;
MPRINT(EM_DIAGRAM):   END;
35366     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35367     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
35368     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35369     +*;
MPRINT(EM_DIAGRAM):   *;
35370     +* ASSIGN VALUE TO: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_URBANICITY;
35371     +*;
MPRINT(EM_DIAGRAM):   *;
35372     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
35373     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
35374     +_format200 = strip(I_REP_URBANICITY);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_URBANICITY);
35375     +if _format200="U" then IMP_REP_URBANICITY = "U   ";
MPRINT(EM_DIAGRAM):   if _format200="U" then IMP_REP_URBANICITY = "U   ";
35376     +else
35377     +if _format200="T" then IMP_REP_URBANICITY = "T   ";
MPRINT(EM_DIAGRAM):   else if _format200="T" then IMP_REP_URBANICITY = "T   ";
35378     +else
35379     +if _format200="S" then IMP_REP_URBANICITY = "S   ";
MPRINT(EM_DIAGRAM):   else if _format200="S" then IMP_REP_URBANICITY = "S   ";
35380     +else
35381     +if _format200="R" then IMP_REP_URBANICITY = "R   ";
MPRINT(EM_DIAGRAM):   else if _format200="R" then IMP_REP_URBANICITY = "R   ";
35382     +else
35383     +if _format200="C" then IMP_REP_URBANICITY = "C   ";
MPRINT(EM_DIAGRAM):   else if _format200="C" then IMP_REP_URBANICITY = "C   ";
35384     +END;
MPRINT(EM_DIAGRAM):   END;
35385     +*;
MPRINT(EM_DIAGRAM):   *;
35386     +* IMPUTE VARIABLE: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: WEALTH_RATING;
35387     +*;
MPRINT(EM_DIAGRAM):   *;
35388     +label IMP_WEALTH_RATING = 'Imputed WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label IMP_WEALTH_RATING = 'Imputed WEALTH_RATING';
35389     +IMP_WEALTH_RATING = WEALTH_RATING;
MPRINT(EM_DIAGRAM):   IMP_WEALTH_RATING = WEALTH_RATING;
35390     +if missing(IMP_WEALTH_RATING) then do;
MPRINT(EM_DIAGRAM):   if missing(IMP_WEALTH_RATING) then do;
35391     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35392     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
35393     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35394     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
35395     +LENGTH I_WEALTH_RATING $ 12;
MPRINT(EM_DIAGRAM):   LENGTH I_WEALTH_RATING $ 12;
35396     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
35397     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
35398     +LABEL P_WEALTH_RATING4 = 'Predicted: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING4 = 'Predicted: WEALTH_RATING=4';
35399     +LABEL P_WEALTH_RATING5 = 'Predicted: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING5 = 'Predicted: WEALTH_RATING=5';
35400     +LABEL P_WEALTH_RATING7 = 'Predicted: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING7 = 'Predicted: WEALTH_RATING=7';
35401     +LABEL P_WEALTH_RATING2 = 'Predicted: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING2 = 'Predicted: WEALTH_RATING=2';
35402     +LABEL P_WEALTH_RATING1 = 'Predicted: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING1 = 'Predicted: WEALTH_RATING=1';
35403     +LABEL P_WEALTH_RATING3 = 'Predicted: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING3 = 'Predicted: WEALTH_RATING=3';
35404     +LABEL P_WEALTH_RATING6 = 'Predicted: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING6 = 'Predicted: WEALTH_RATING=6';
35405     +LABEL P_WEALTH_RATING9 = 'Predicted: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING9 = 'Predicted: WEALTH_RATING=9';
35406     +LABEL P_WEALTH_RATING8 = 'Predicted: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING8 = 'Predicted: WEALTH_RATING=8';
35407     +LABEL P_WEALTH_RATING0 = 'Predicted: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   LABEL P_WEALTH_RATING0 = 'Predicted: WEALTH_RATING=0';
35408     +LABEL Q_WEALTH_RATING4 = 'Unadjusted P: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING4 = 'Unadjusted P: WEALTH_RATING=4';
35409     +LABEL Q_WEALTH_RATING5 = 'Unadjusted P: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING5 = 'Unadjusted P: WEALTH_RATING=5';
35410     +LABEL Q_WEALTH_RATING7 = 'Unadjusted P: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING7 = 'Unadjusted P: WEALTH_RATING=7';
35411     +LABEL Q_WEALTH_RATING2 = 'Unadjusted P: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING2 = 'Unadjusted P: WEALTH_RATING=2';
35412     +LABEL Q_WEALTH_RATING1 = 'Unadjusted P: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING1 = 'Unadjusted P: WEALTH_RATING=1';
35413     +LABEL Q_WEALTH_RATING3 = 'Unadjusted P: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING3 = 'Unadjusted P: WEALTH_RATING=3';
35414     +LABEL Q_WEALTH_RATING6 = 'Unadjusted P: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING6 = 'Unadjusted P: WEALTH_RATING=6';
35415     +LABEL Q_WEALTH_RATING9 = 'Unadjusted P: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING9 = 'Unadjusted P: WEALTH_RATING=9';
35416     +LABEL Q_WEALTH_RATING8 = 'Unadjusted P: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING8 = 'Unadjusted P: WEALTH_RATING=8';
35417     +LABEL Q_WEALTH_RATING0 = 'Unadjusted P: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   LABEL Q_WEALTH_RATING0 = 'Unadjusted P: WEALTH_RATING=0';
35418     +LABEL I_WEALTH_RATING = 'Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   LABEL I_WEALTH_RATING = 'Into: WEALTH_RATING';
35419     +LABEL U_WEALTH_RATING = 'Unnormalized Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   LABEL U_WEALTH_RATING = 'Unnormalized Into: WEALTH_RATING';
35420     +LABEL _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings';
35421     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
35422     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
35423     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
35424     +_ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
35425     +/* Initialize to avoid warning. */
35426     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
35427     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
35428     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
35429     +/* Initialize to avoid warning. */
35430     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_4 $ 4;
35431     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
35432     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
35433     +/* Initialize to avoid warning. */
35434     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
35435     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
35436     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35437     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35438     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35439     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
35440     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35441     +END;
MPRINT(EM_DIAGRAM):   END;
35442     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
35443     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35444     +END;
MPRINT(EM_DIAGRAM):   END;
35445     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35446     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35447     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35448     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'07' ,
35449     +'41' ,'37' ,'18' ,'36' ,'48' ,'08' ,'31' ,'19' ,'27' ,'46' ,'26' ,'28' ,
35450     +'21' ,'51' ,'44' ,'05' ,'17' ,'39' ,'25' ,'33' ,'38' ,'09' ,'29' ,'53' ,
35451     +'40' ,'32' ,'47' ,'10' ,'52' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'07' , '41' ,'37' ,'18' ,'36' ,'48' ,'08' ,'31' ,'19' ,'27' ,'46' ,'26' ,'28' , '21' ,'51' ,'44' ,'05' ,'17' ,'39' ,'25' ,'33' ,'38' ,'09' ,'29' ,'53' , '40' ,'32' 
,'47' ,'10' ,'52' ,'06' ) THEN DO;
35452     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35453     +END;
MPRINT(EM_DIAGRAM):   END;
35454     +ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'13' ,'42' ,
35455     +'14' ,'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'13' ,'42' , '14' ,'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
35456     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35457     +END;
MPRINT(EM_DIAGRAM):   END;
35458     +END;
MPRINT(EM_DIAGRAM):   END;
35459     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35460     +IF PER_CAPITA_INCOME < 17151 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17151 THEN DO;
35461     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35462     +END;
MPRINT(EM_DIAGRAM):   END;
35463     +ELSE IF 17151 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17151 <= PER_CAPITA_INCOME THEN DO;
35464     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35465     +END;
MPRINT(EM_DIAGRAM):   END;
35466     +END;
MPRINT(EM_DIAGRAM):   END;
35467     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35468     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35469     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35470     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35471     +MEDIAN_HOUSEHOLD_INCOME < 583.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 583.5 THEN DO;
35472     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35473     +END;
MPRINT(EM_DIAGRAM):   END;
35474     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35475     +583.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 583.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35476     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35477     +END;
MPRINT(EM_DIAGRAM):   END;
35478     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35479     +IF PER_CAPITA_INCOME < 32356.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 32356.5 THEN DO;
35480     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35481     +END;
MPRINT(EM_DIAGRAM):   END;
35482     +ELSE IF 32356.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 32356.5 <= PER_CAPITA_INCOME THEN DO;
35483     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35484     +END;
MPRINT(EM_DIAGRAM):   END;
35485     +END;
MPRINT(EM_DIAGRAM):   END;
35486     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35487     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35488     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35489     +IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'42' ,'24' ,
35490     +'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'42' ,'24' , '12' ,'11' ,'22' ,'03' ) THEN DO;
35491     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35492     +END;
MPRINT(EM_DIAGRAM):   END;
35493     +ELSE IF _ARBFMT_2 IN ('13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('13' ,'14' ) THEN DO;
35494     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35495     +END;
MPRINT(EM_DIAGRAM):   END;
35496     +END;
MPRINT(EM_DIAGRAM):   END;
35497     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35498     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35499     +_ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
35500     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35501     +IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35502     +P_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.2;
35503     +P_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.2;
35504     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
35505     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35506     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35507     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
35508     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
35509     +P_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.4;
35510     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
35511     +P_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.2;
35512     +Q_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.2;
35513     +Q_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.2;
35514     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
35515     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35516     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35517     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
35518     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
35519     +Q_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.4;
35520     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
35521     +Q_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.2;
35522     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
35523     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
35524     +END;
MPRINT(EM_DIAGRAM):   END;
35525     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35526     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35527     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
35528     +PER_CAPITA_INCOME < 22479.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22479.5 THEN DO;
35529     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35530     +END;
MPRINT(EM_DIAGRAM):   END;
35531     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
35532     +22479.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22479.5 <= PER_CAPITA_INCOME THEN DO;
35533     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35534     +END;
MPRINT(EM_DIAGRAM):   END;
35535     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35536     +IF MEDIAN_HOME_VALUE < 1038 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1038 THEN DO;
35537     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35538     +END;
MPRINT(EM_DIAGRAM):   END;
35539     +ELSE IF 1038 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1038 <= MEDIAN_HOME_VALUE THEN DO;
35540     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35541     +END;
MPRINT(EM_DIAGRAM):   END;
35542     +END;
MPRINT(EM_DIAGRAM):   END;
35543     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35544     +IF MEDIAN_HOUSEHOLD_INCOME < 594.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 594.5 THEN DO;
35545     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35546     +END;
MPRINT(EM_DIAGRAM):   END;
35547     +ELSE IF 594.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 594.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35548     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35549     +END;
MPRINT(EM_DIAGRAM):   END;
35550     +END;
MPRINT(EM_DIAGRAM):   END;
35551     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35552     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35553     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35554     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
35555     +MEDIAN_HOME_VALUE < 1753 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1753 THEN DO;
35556     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35557     +END;
MPRINT(EM_DIAGRAM):   END;
35558     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
35559     +1753 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1753 <= MEDIAN_HOME_VALUE THEN DO;
35560     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35561     +END;
MPRINT(EM_DIAGRAM):   END;
35562     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35563     +IF 89.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 89.5 <= PCT_OWNER_OCCUPIED THEN DO;
35564     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35565     +END;
MPRINT(EM_DIAGRAM):   END;
35566     +ELSE IF PCT_OWNER_OCCUPIED < 89.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 89.5 THEN DO;
35567     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35568     +END;
MPRINT(EM_DIAGRAM):   END;
35569     +END;
MPRINT(EM_DIAGRAM):   END;
35570     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35571     +IF MEDIAN_HOUSEHOLD_INCOME < 612.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 612.5 THEN DO;
35572     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35573     +END;
MPRINT(EM_DIAGRAM):   END;
35574     +ELSE IF 612.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 612.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35575     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35576     +END;
MPRINT(EM_DIAGRAM):   END;
35577     +END;
MPRINT(EM_DIAGRAM):   END;
35578     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35579     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35580     +P_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03333333333333;
35581     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
35582     +P_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06666666666666;
35583     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35584     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35585     +P_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1;
35586     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
35587     +P_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.16666666666666;
35588     +P_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.63333333333333;
35589     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
35590     +Q_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03333333333333;
35591     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
35592     +Q_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06666666666666;
35593     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35594     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35595     +Q_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1;
35596     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
35597     +Q_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.16666666666666;
35598     +Q_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.63333333333333;
35599     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
35600     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
35601     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
35602     +END;
MPRINT(EM_DIAGRAM):   END;
35603     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35604     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
35605     +P_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.02631578947368;
35606     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
35607     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35608     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35609     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
35610     +P_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05263157894736;
35611     +P_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.78947368421052;
35612     +P_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.13157894736842;
35613     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
35614     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
35615     +Q_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.02631578947368;
35616     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
35617     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35618     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35619     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
35620     +Q_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05263157894736;
35621     +Q_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.78947368421052;
35622     +Q_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.13157894736842;
35623     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
35624     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
35625     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
35626     +END;
MPRINT(EM_DIAGRAM):   END;
35627     +END;
MPRINT(EM_DIAGRAM):   END;
35628     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35629     +P_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01212121212121;
35630     +P_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.0030303030303;
35631     +P_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.01212121212121;
35632     +P_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0030303030303;
35633     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35634     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
35635     +P_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01818181818181;
35636     +P_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.84848484848484;
35637     +P_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.09696969696969;
35638     +P_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0060606060606;
35639     +Q_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01212121212121;
35640     +Q_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.0030303030303;
35641     +Q_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.01212121212121;
35642     +Q_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0030303030303;
35643     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35644     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
35645     +Q_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01818181818181;
35646     +Q_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.84848484848484;
35647     +Q_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.09696969696969;
35648     +Q_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0060606060606;
35649     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
35650     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
35651     +END;
MPRINT(EM_DIAGRAM):   END;
35652     +END;
MPRINT(EM_DIAGRAM):   END;
35653     +END;
MPRINT(EM_DIAGRAM):   END;
35654     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35655     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35656     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35657     +MEDIAN_HOUSEHOLD_INCOME < 383.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 383.5 THEN DO;
35658     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35659     +END;
MPRINT(EM_DIAGRAM):   END;
35660     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35661     +383.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 383.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35662     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35663     +END;
MPRINT(EM_DIAGRAM):   END;
35664     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35665     +IF PCT_OWNER_OCCUPIED < 61.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 61.5 THEN DO;
35666     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35667     +END;
MPRINT(EM_DIAGRAM):   END;
35668     +ELSE IF 61.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 61.5 <= PCT_OWNER_OCCUPIED THEN DO;
35669     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35670     +END;
MPRINT(EM_DIAGRAM):   END;
35671     +END;
MPRINT(EM_DIAGRAM):   END;
35672     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35673     +IF PER_CAPITA_INCOME < 15622.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15622.5 THEN DO;
35674     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35675     +END;
MPRINT(EM_DIAGRAM):   END;
35676     +ELSE IF 15622.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 15622.5 <= PER_CAPITA_INCOME THEN DO;
35677     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35678     +END;
MPRINT(EM_DIAGRAM):   END;
35679     +END;
MPRINT(EM_DIAGRAM):   END;
35680     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35681     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35682     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35683     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
35684     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35685     +IF _ARBFMT_4 IN ('U' ,'R' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ,'R' ) THEN DO;
35686     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35687     +END;
MPRINT(EM_DIAGRAM):   END;
35688     +ELSE IF _ARBFMT_4 IN ('S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('S' ,'C' ,'T' ) THEN DO;
35689     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35690     +END;
MPRINT(EM_DIAGRAM):   END;
35691     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35692     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35693     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35694     +IF _ARBFMT_2 IN ('01' ,'02' ,'42' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('01' ,'02' ,'42' ,'03' ) THEN DO;
35695     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35696     +END;
MPRINT(EM_DIAGRAM):   END;
35697     +ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'15' ,'35' ,'13' ,'14' ,'24' ,
35698     +'12' ,'11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'15' ,'35' ,'13' ,'14' ,'24' , '12' ,'11' ,'22' ) THEN DO;
35699     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35700     +END;
MPRINT(EM_DIAGRAM):   END;
35701     +END;
MPRINT(EM_DIAGRAM):   END;
35702     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35703     +IF 1733 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1733 <= MEDIAN_HOME_VALUE THEN DO;
35704     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35705     +END;
MPRINT(EM_DIAGRAM):   END;
35706     +ELSE IF MEDIAN_HOME_VALUE < 1733 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1733 THEN DO;
35707     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35708     +END;
MPRINT(EM_DIAGRAM):   END;
35709     +END;
MPRINT(EM_DIAGRAM):   END;
35710     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35711     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35712     +P_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.05070422535211;
35713     +P_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.08169014084507;
35714     +P_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.19718309859154;
35715     +P_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.04507042253521;
35716     +P_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0112676056338;
35717     +P_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.0281690140845;
35718     +P_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.14647887323943;
35719     +P_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.19436619718309;
35720     +P_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.2338028169014;
35721     +P_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0112676056338;
35722     +Q_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.05070422535211;
35723     +Q_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.08169014084507;
35724     +Q_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.19718309859154;
35725     +Q_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.04507042253521;
35726     +Q_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0112676056338;
35727     +Q_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.0281690140845;
35728     +Q_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.14647887323943;
35729     +Q_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.19436619718309;
35730     +Q_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.2338028169014;
35731     +Q_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0112676056338;
35732     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
35733     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
35734     +END;
MPRINT(EM_DIAGRAM):   END;
35735     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35736     +P_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.17222222222222;
35737     +P_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09444444444444;
35738     +P_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.12222222222222;
35739     +P_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.03333333333333;
35740     +P_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.02222222222222;
35741     +P_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11666666666666;
35742     +P_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.18333333333333;
35743     +P_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.10555555555555;
35744     +P_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.11666666666666;
35745     +P_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03333333333333;
35746     +Q_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.17222222222222;
35747     +Q_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09444444444444;
35748     +Q_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.12222222222222;
35749     +Q_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.03333333333333;
35750     +Q_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.02222222222222;
35751     +Q_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11666666666666;
35752     +Q_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.18333333333333;
35753     +Q_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.10555555555555;
35754     +Q_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.11666666666666;
35755     +Q_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03333333333333;
35756     +I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
35757     +U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
35758     +END;
MPRINT(EM_DIAGRAM):   END;
35759     +END;
MPRINT(EM_DIAGRAM):   END;
35760     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35761     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35762     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
35763     +MEDIAN_HOME_VALUE < 1628 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1628 THEN DO;
35764     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35765     +END;
MPRINT(EM_DIAGRAM):   END;
35766     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
35767     +1628 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1628 <= MEDIAN_HOME_VALUE THEN DO;
35768     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35769     +END;
MPRINT(EM_DIAGRAM):   END;
35770     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35771     +IF PER_CAPITA_INCOME < 25807.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 25807.5 THEN DO;
35772     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35773     +END;
MPRINT(EM_DIAGRAM):   END;
35774     +ELSE IF 25807.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 25807.5 <= PER_CAPITA_INCOME THEN DO;
35775     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35776     +END;
MPRINT(EM_DIAGRAM):   END;
35777     +END;
MPRINT(EM_DIAGRAM):   END;
35778     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35779     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35780     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35781     +IF _ARBFMT_2 IN ('.' ,'34' ,'35' ,'13' ,'42' ,'14' ,'24' ,'12' ,
35782     +'11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'35' ,'13' ,'42' ,'14' ,'24' ,'12' , '11' ,'22' ) THEN DO;
35783     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35784     +END;
MPRINT(EM_DIAGRAM):   END;
35785     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'03' ) THEN DO;
35786     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35787     +END;
MPRINT(EM_DIAGRAM):   END;
35788     +END;
MPRINT(EM_DIAGRAM):   END;
35789     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35790     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35791     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35792     +IF NOT MISSING(LIFETIME_CARD_PROM ) AND
35793     +LIFETIME_CARD_PROM < 34.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_CARD_PROM ) AND LIFETIME_CARD_PROM < 34.5 THEN DO;
35794     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35795     +END;
MPRINT(EM_DIAGRAM):   END;
35796     +ELSE IF NOT MISSING(LIFETIME_CARD_PROM ) AND
35797     +34.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_CARD_PROM ) AND 34.5 <= LIFETIME_CARD_PROM THEN DO;
35798     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35799     +END;
MPRINT(EM_DIAGRAM):   END;
35800     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
35801     +IF FILE_CARD_GIFT < 21.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_CARD_GIFT < 21.5 THEN DO;
35802     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35803     +END;
MPRINT(EM_DIAGRAM):   END;
35804     +ELSE IF 21.5 <= FILE_CARD_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 21.5 <= FILE_CARD_GIFT THEN DO;
35805     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35806     +END;
MPRINT(EM_DIAGRAM):   END;
35807     +END;
MPRINT(EM_DIAGRAM):   END;
35808     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
35809     +IF LIFETIME_PROM < 101.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 101.5 THEN DO;
35810     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35811     +END;
MPRINT(EM_DIAGRAM):   END;
35812     +ELSE IF 101.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 101.5 <= LIFETIME_PROM THEN DO;
35813     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35814     +END;
MPRINT(EM_DIAGRAM):   END;
35815     +END;
MPRINT(EM_DIAGRAM):   END;
35816     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35817     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35818     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
35819     +P_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.25;
35820     +P_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.25;
35821     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35822     +P_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25;
35823     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
35824     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
35825     +P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
35826     +P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
35827     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
35828     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
35829     +Q_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.25;
35830     +Q_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.25;
35831     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35832     +Q_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25;
35833     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
35834     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
35835     +Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
35836     +Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
35837     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
35838     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
35839     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
35840     +END;
MPRINT(EM_DIAGRAM):   END;
35841     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35842     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35843     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
35844     +PER_CAPITA_INCOME < 28361.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 28361.5 THEN DO;
35845     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35846     +END;
MPRINT(EM_DIAGRAM):   END;
35847     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
35848     +28361.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 28361.5 <= PER_CAPITA_INCOME THEN DO;
35849     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35850     +END;
MPRINT(EM_DIAGRAM):   END;
35851     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35852     +IF MEDIAN_HOME_VALUE < 3997 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 3997 THEN DO;
35853     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35854     +END;
MPRINT(EM_DIAGRAM):   END;
35855     +ELSE IF 3997 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3997 <= MEDIAN_HOME_VALUE THEN DO;
35856     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35857     +END;
MPRINT(EM_DIAGRAM):   END;
35858     +END;
MPRINT(EM_DIAGRAM):   END;
35859     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35860     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35861     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35862     +IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'35' ,'13' ,'14' ,'24' ,'12' ,
35863     +'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'35' ,'13' ,'14' ,'24' ,'12' , '11' ,'22' ,'03' ) THEN DO;
35864     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35865     +END;
MPRINT(EM_DIAGRAM):   END;
35866     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'15' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'15' ) THEN DO;
35867     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35868     +END;
MPRINT(EM_DIAGRAM):   END;
35869     +END;
MPRINT(EM_DIAGRAM):   END;
35870     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35871     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35872     +P_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03296703296703;
35873     +P_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01098901098901;
35874     +P_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09890109890109;
35875     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35876     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35877     +P_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01098901098901;
35878     +P_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09890109890109;
35879     +P_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.53846153846153;
35880     +P_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.19780219780219;
35881     +P_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01098901098901;
35882     +Q_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03296703296703;
35883     +Q_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01098901098901;
35884     +Q_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09890109890109;
35885     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35886     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35887     +Q_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01098901098901;
35888     +Q_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09890109890109;
35889     +Q_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.53846153846153;
35890     +Q_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.19780219780219;
35891     +Q_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01098901098901;
35892     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
35893     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
35894     +END;
MPRINT(EM_DIAGRAM):   END;
35895     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35896     +P_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02597402597402;
35897     +P_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.06493506493506;
35898     +P_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.29437229437229;
35899     +P_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02164502164502;
35900     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
35901     +P_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01298701298701;
35902     +P_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17748917748917;
35903     +P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
35904     +P_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.29437229437229;
35905     +P_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01731601731601;
35906     +Q_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02597402597402;
35907     +Q_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.06493506493506;
35908     +Q_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.29437229437229;
35909     +Q_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02164502164502;
35910     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
35911     +Q_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01298701298701;
35912     +Q_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17748917748917;
35913     +Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
35914     +Q_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.29437229437229;
35915     +Q_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01731601731601;
35916     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
35917     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
35918     +END;
MPRINT(EM_DIAGRAM):   END;
35919     +END;
MPRINT(EM_DIAGRAM):   END;
35920     +END;
MPRINT(EM_DIAGRAM):   END;
35921     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35922     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35923     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35924     +MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
35925     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35926     +END;
MPRINT(EM_DIAGRAM):   END;
35927     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35928     +504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35929     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35930     +END;
MPRINT(EM_DIAGRAM):   END;
35931     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35932     +IF PCT_OWNER_OCCUPIED < 94.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 94.5 THEN DO;
35933     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35934     +END;
MPRINT(EM_DIAGRAM):   END;
35935     +ELSE IF 94.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 94.5 <= PCT_OWNER_OCCUPIED THEN DO;
35936     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35937     +END;
MPRINT(EM_DIAGRAM):   END;
35938     +END;
MPRINT(EM_DIAGRAM):   END;
35939     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35940     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35941     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35942     +IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'02' ,'15' ,'35' ,'13' ,'42' ,
35943     +'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'02' ,'15' ,'35' ,'13' ,'42' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
35944     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35945     +END;
MPRINT(EM_DIAGRAM):   END;
35946     +ELSE IF _ARBFMT_2 IN ('14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('14' ) THEN DO;
35947     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35948     +END;
MPRINT(EM_DIAGRAM):   END;
35949     +END;
MPRINT(EM_DIAGRAM):   END;
35950     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35951     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35952     +P_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.00636942675159;
35953     +P_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01273885350318;
35954     +P_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08917197452229;
35955     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
35956     +P_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.01910828025477;
35957     +P_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.02547770700636;
35958     +P_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01273885350318;
35959     +P_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.61783439490445;
35960     +P_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.20382165605095;
35961     +P_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01273885350318;
35962     +Q_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.00636942675159;
35963     +Q_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01273885350318;
35964     +Q_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08917197452229;
35965     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
35966     +Q_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.01910828025477;
35967     +Q_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.02547770700636;
35968     +Q_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01273885350318;
35969     +Q_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.61783439490445;
35970     +Q_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.20382165605095;
35971     +Q_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01273885350318;
35972     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
35973     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
35974     +END;
MPRINT(EM_DIAGRAM):   END;
35975     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35976     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35977     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
35978     +PER_CAPITA_INCOME < 22879 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22879 THEN DO;
35979     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35980     +END;
MPRINT(EM_DIAGRAM):   END;
35981     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
35982     +22879 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22879 <= PER_CAPITA_INCOME THEN DO;
35983     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35984     +END;
MPRINT(EM_DIAGRAM):   END;
35985     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35986     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35987     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35988     +IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'15' ,'35' ,'13' ,'42' ,'14' ,
35989     +'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'15' ,'35' ,'13' ,'42' ,'14' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
35990     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35991     +END;
MPRINT(EM_DIAGRAM):   END;
35992     +ELSE IF _ARBFMT_2 IN ('23' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ) THEN DO;
35993     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35994     +END;
MPRINT(EM_DIAGRAM):   END;
35995     +END;
MPRINT(EM_DIAGRAM):   END;
35996     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35997     +IF MEDIAN_HOME_VALUE < 1587 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1587 THEN DO;
35998     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35999     +END;
MPRINT(EM_DIAGRAM):   END;
36000     +ELSE IF 1587 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1587 <= MEDIAN_HOME_VALUE THEN DO;
36001     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36002     +END;
MPRINT(EM_DIAGRAM):   END;
36003     +END;
MPRINT(EM_DIAGRAM):   END;
36004     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36005     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36006     +P_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02777777777777;
36007     +P_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01388888888888;
36008     +P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
36009     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36010     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36011     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36012     +P_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05555555555555;
36013     +P_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.56944444444444;
36014     +P_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.25;
36015     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36016     +Q_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02777777777777;
36017     +Q_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01388888888888;
36018     +Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
36019     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36020     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36021     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36022     +Q_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05555555555555;
36023     +Q_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.56944444444444;
36024     +Q_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.25;
36025     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36026     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36027     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36028     +END;
MPRINT(EM_DIAGRAM):   END;
36029     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36030     +P_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01699716713881;
36031     +P_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.03116147308781;
36032     +P_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.18413597733711;
36033     +P_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0084985835694;
36034     +P_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0113314447592;
36035     +P_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01699716713881;
36036     +P_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.08215297450424;
36037     +P_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.22379603399433;
36038     +P_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.42492917847025;
36039     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36040     +Q_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01699716713881;
36041     +Q_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.03116147308781;
36042     +Q_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.18413597733711;
36043     +Q_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0084985835694;
36044     +Q_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0113314447592;
36045     +Q_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01699716713881;
36046     +Q_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.08215297450424;
36047     +Q_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.22379603399433;
36048     +Q_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.42492917847025;
36049     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36050     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
36051     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
36052     +END;
MPRINT(EM_DIAGRAM):   END;
36053     +END;
MPRINT(EM_DIAGRAM):   END;
36054     +END;
MPRINT(EM_DIAGRAM):   END;
36055     +END;
MPRINT(EM_DIAGRAM):   END;
36056     +END;
MPRINT(EM_DIAGRAM):   END;
36057     +END;
MPRINT(EM_DIAGRAM):   END;
36058     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36059     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36060     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36061     +MEDIAN_HOUSEHOLD_INCOME < 268.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 268.5 THEN DO;
36062     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36063     +END;
MPRINT(EM_DIAGRAM):   END;
36064     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36065     +268.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 268.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36066     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36067     +END;
MPRINT(EM_DIAGRAM):   END;
36068     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36069     +IF PER_CAPITA_INCOME < 11745.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11745.5 THEN DO;
36070     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36071     +END;
MPRINT(EM_DIAGRAM):   END;
36072     +ELSE IF 11745.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11745.5 <= PER_CAPITA_INCOME THEN DO;
36073     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36074     +END;
MPRINT(EM_DIAGRAM):   END;
36075     +END;
MPRINT(EM_DIAGRAM):   END;
36076     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36077     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36078     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36079     +IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,'36' ,
36080     +'48' ,'31' ,'46' ,'26' ,'51' ,'25' ,'33' ,'38' ,'09' ,'53' ,'32' ,'47' ,
36081     +'10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,'36' , '48' ,'31' ,'46' ,'26' ,'51' ,'25' ,'33' ,'38' ,'09' ,'53' ,'32' ,'47' , '10' ,'52' ) THEN DO;
36082     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36083     +END;
MPRINT(EM_DIAGRAM):   END;
36084     +ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'18' ,'08' ,'19' ,'27' ,
36085     +'28' ,'21' ,'44' ,'05' ,'17' ,'39' ,'29' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'18' ,'08' ,'19' ,'27' , '28' ,'21' ,'44' ,'05' ,'17' ,'39' ,'29' ,'40' ,'06' ) THEN DO;
36086     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36087     +END;
MPRINT(EM_DIAGRAM):   END;
36088     +END;
MPRINT(EM_DIAGRAM):   END;
36089     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36090     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36091     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36092     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36093     +MEDIAN_HOUSEHOLD_INCOME < 330.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 330.5 THEN DO;
36094     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36095     +END;
MPRINT(EM_DIAGRAM):   END;
36096     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36097     +330.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 330.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36098     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36099     +END;
MPRINT(EM_DIAGRAM):   END;
36100     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36101     +IF PER_CAPITA_INCOME < 13147.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 13147.5 THEN DO;
36102     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36103     +END;
MPRINT(EM_DIAGRAM):   END;
36104     +ELSE IF 13147.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13147.5 <= PER_CAPITA_INCOME THEN DO;
36105     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36106     +END;
MPRINT(EM_DIAGRAM):   END;
36107     +END;
MPRINT(EM_DIAGRAM):   END;
36108     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36109     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36110     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36111     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'45' ,'30' ,'07' ,'41' ,'37' ,
36112     +'36' ,'08' ,'31' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,
36113     +'09' ,'29' ,'47' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'45' ,'30' ,'07' ,'41' ,'37' , '36' ,'08' ,'31' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' , '09' ,'29' ,'47' ,'10' ) THEN DO;
36114     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36115     +END;
MPRINT(EM_DIAGRAM):   END;
36116     +ELSE IF _ARBFMT_2 IN ('20' ,'.' ,'16' ,'18' ,'48' ,'19' ,'27' ,'28' ,
36117     +'44' ,'05' ,'33' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'.' ,'16' ,'18' ,'48' ,'19' ,'27' ,'28' , '44' ,'05' ,'33' ,'40' ,'06' ) THEN DO;
36118     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36119     +END;
MPRINT(EM_DIAGRAM):   END;
36120     +END;
MPRINT(EM_DIAGRAM):   END;
36121     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36122     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36123     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36124     +IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36125     +RECENT_AVG_GIFT_AMT < 48.335 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 48.335 THEN DO;
36126     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36127     +END;
MPRINT(EM_DIAGRAM):   END;
36128     +ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36129     +48.335 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 48.335 <= RECENT_AVG_GIFT_AMT THEN DO;
36130     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36131     +END;
MPRINT(EM_DIAGRAM):   END;
36132     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
36133     +IF LIFETIME_MIN_GIFT_AMT < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MIN_GIFT_AMT < 37.5 THEN DO;
36134     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36135     +END;
MPRINT(EM_DIAGRAM):   END;
36136     +ELSE IF 37.5 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_MIN_GIFT_AMT THEN DO;
36137     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36138     +END;
MPRINT(EM_DIAGRAM):   END;
36139     +END;
MPRINT(EM_DIAGRAM):   END;
36140     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_CARD_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_CARD_GIFT_AMT ) THEN DO;
36141     +IF RECENT_AVG_CARD_GIFT_AMT < 45.625 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_CARD_GIFT_AMT < 45.625 THEN DO;
36142     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36143     +END;
MPRINT(EM_DIAGRAM):   END;
36144     +ELSE IF 45.625 <= RECENT_AVG_CARD_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 45.625 <= RECENT_AVG_CARD_GIFT_AMT THEN DO;
36145     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36146     +END;
MPRINT(EM_DIAGRAM):   END;
36147     +END;
MPRINT(EM_DIAGRAM):   END;
36148     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36149     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36150     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36151     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36152     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36153     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36154     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36155     +P_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.33333333333333;
36156     +P_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.33333333333333;
36157     +P_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.33333333333333;
36158     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36159     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36160     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36161     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36162     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36163     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36164     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36165     +Q_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.33333333333333;
36166     +Q_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.33333333333333;
36167     +Q_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.33333333333333;
36168     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36169     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36170     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
36171     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
36172     +END;
MPRINT(EM_DIAGRAM):   END;
36173     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36174     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36175     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36176     +MEDIAN_HOME_VALUE < 970.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 970.5 THEN DO;
36177     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36178     +END;
MPRINT(EM_DIAGRAM):   END;
36179     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36180     +970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 970.5 <= MEDIAN_HOME_VALUE THEN DO;
36181     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36182     +END;
MPRINT(EM_DIAGRAM):   END;
36183     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
36184     +IF 27.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 27.5 <= PCT_OWNER_OCCUPIED THEN DO;
36185     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36186     +END;
MPRINT(EM_DIAGRAM):   END;
36187     +ELSE IF PCT_OWNER_OCCUPIED < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 27.5 THEN DO;
36188     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36189     +END;
MPRINT(EM_DIAGRAM):   END;
36190     +END;
MPRINT(EM_DIAGRAM):   END;
36191     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36192     +IF PER_CAPITA_INCOME < 18997.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18997.5 THEN DO;
36193     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36194     +END;
MPRINT(EM_DIAGRAM):   END;
36195     +ELSE IF 18997.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 18997.5 <= PER_CAPITA_INCOME THEN DO;
36196     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36197     +END;
MPRINT(EM_DIAGRAM):   END;
36198     +END;
MPRINT(EM_DIAGRAM):   END;
36199     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36200     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36201     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36202     +IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36203     +RECENT_AVG_GIFT_AMT < 4.25 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 4.25 THEN DO;
36204     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36205     +END;
MPRINT(EM_DIAGRAM):   END;
36206     +ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36207     +4.25 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 4.25 <= RECENT_AVG_GIFT_AMT THEN DO;
36208     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36209     +END;
MPRINT(EM_DIAGRAM):   END;
36210     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
36211     +IF RECENT_RESPONSE_PROP < 0.024 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.024 THEN DO;
36212     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36213     +END;
MPRINT(EM_DIAGRAM):   END;
36214     +ELSE IF 0.024 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.024 <= RECENT_RESPONSE_PROP THEN DO;
36215     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36216     +END;
MPRINT(EM_DIAGRAM):   END;
36217     +END;
MPRINT(EM_DIAGRAM):   END;
36218     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
36219     +IF FILE_AVG_GIFT < 3.605 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 3.605 THEN DO;
36220     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36221     +END;
MPRINT(EM_DIAGRAM):   END;
36222     +ELSE IF 3.605 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3.605 <= FILE_AVG_GIFT THEN DO;
36223     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36224     +END;
MPRINT(EM_DIAGRAM):   END;
36225     +END;
MPRINT(EM_DIAGRAM):   END;
36226     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36227     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36228     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36229     +P_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.4;
36230     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36231     +P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
36232     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36233     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36234     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36235     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
36236     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36237     +P_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.4;
36238     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36239     +Q_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.4;
36240     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36241     +Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
36242     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36243     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36244     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36245     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
36246     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36247     +Q_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.4;
36248     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
36249     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
36250     +END;
MPRINT(EM_DIAGRAM):   END;
36251     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36252     +P_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.19565217391304;
36253     +P_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09420289855072;
36254     +P_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04347826086956;
36255     +P_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.15942028985507;
36256     +P_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.05072463768115;
36257     +P_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.31884057971014;
36258     +P_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09420289855072;
36259     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
36260     +P_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.03623188405797;
36261     +P_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00724637681159;
36262     +Q_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.19565217391304;
36263     +Q_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09420289855072;
36264     +Q_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04347826086956;
36265     +Q_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.15942028985507;
36266     +Q_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.05072463768115;
36267     +Q_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.31884057971014;
36268     +Q_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09420289855072;
36269     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
36270     +Q_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.03623188405797;
36271     +Q_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00724637681159;
36272     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
36273     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
36274     +END;
MPRINT(EM_DIAGRAM):   END;
36275     +END;
MPRINT(EM_DIAGRAM):   END;
36276     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36277     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36278     +IF NOT MISSING(LIFETIME_PROM ) AND
36279     +LIFETIME_PROM < 100.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_PROM ) AND LIFETIME_PROM < 100.5 THEN DO;
36280     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36281     +END;
MPRINT(EM_DIAGRAM):   END;
36282     +ELSE IF NOT MISSING(LIFETIME_PROM ) AND
36283     +100.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_PROM ) AND 100.5 <= LIFETIME_PROM THEN DO;
36284     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36285     +END;
MPRINT(EM_DIAGRAM):   END;
36286     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
36287     +IF LIFETIME_CARD_PROM < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_CARD_PROM < 37.5 THEN DO;
36288     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36289     +END;
MPRINT(EM_DIAGRAM):   END;
36290     +ELSE IF 37.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_CARD_PROM THEN DO;
36291     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36292     +END;
MPRINT(EM_DIAGRAM):   END;
36293     +END;
MPRINT(EM_DIAGRAM):   END;
36294     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
36295     +IF LIFETIME_GIFT_COUNT < 71.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_COUNT < 71.5 THEN DO;
36296     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36297     +END;
MPRINT(EM_DIAGRAM):   END;
36298     +ELSE IF 71.5 <= LIFETIME_GIFT_COUNT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 71.5 <= LIFETIME_GIFT_COUNT THEN DO;
36299     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36300     +END;
MPRINT(EM_DIAGRAM):   END;
36301     +END;
MPRINT(EM_DIAGRAM):   END;
36302     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36303     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36304     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36305     +P_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.11111111111111;
36306     +P_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.11111111111111;
36307     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36308     +P_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.44444444444444;
36309     +P_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11111111111111;
36310     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36311     +P_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.11111111111111;
36312     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36313     +P_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11111111111111;
36314     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36315     +Q_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.11111111111111;
36316     +Q_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.11111111111111;
36317     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36318     +Q_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.44444444444444;
36319     +Q_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11111111111111;
36320     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36321     +Q_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.11111111111111;
36322     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36323     +Q_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11111111111111;
36324     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
36325     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
36326     +END;
MPRINT(EM_DIAGRAM):   END;
36327     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36328     +P_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15745856353591;
36329     +P_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.23204419889502;
36330     +P_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08839779005524;
36331     +P_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0732044198895;
36332     +P_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.03591160220994;
36333     +P_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.14779005524861;
36334     +P_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17403314917127;
36335     +P_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00966850828729;
36336     +P_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.04419889502762;
36337     +P_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03729281767955;
36338     +Q_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15745856353591;
36339     +Q_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.23204419889502;
36340     +Q_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08839779005524;
36341     +Q_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0732044198895;
36342     +Q_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.03591160220994;
36343     +Q_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.14779005524861;
36344     +Q_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17403314917127;
36345     +Q_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00966850828729;
36346     +Q_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.04419889502762;
36347     +Q_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03729281767955;
36348     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
36349     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
36350     +END;
MPRINT(EM_DIAGRAM):   END;
36351     +END;
MPRINT(EM_DIAGRAM):   END;
36352     +END;
MPRINT(EM_DIAGRAM):   END;
36353     +END;
MPRINT(EM_DIAGRAM):   END;
36354     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36355     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36356     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36357     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36358     +IF _ARBFMT_2 IN ('49' ,'45' ,'.' ,'30' ,'07' ,'41' ,'37' ,'36' ,'48' ,
36359     +'08' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,'29' ,'06' )
36360     +THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'45' ,'.' ,'30' ,'07' ,'41' ,'37' ,'36' ,'48' , '08' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,'29' ,'06' ) THEN DO;
36361     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36362     +END;
MPRINT(EM_DIAGRAM):   END;
36363     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' ,
36364     +'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
36365     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36366     +END;
MPRINT(EM_DIAGRAM):   END;
36367     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
36368     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
36369     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36370     +IF _ARBFMT_4 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ) THEN DO;
36371     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36372     +END;
MPRINT(EM_DIAGRAM):   END;
36373     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
36374     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36375     +END;
MPRINT(EM_DIAGRAM):   END;
36376     +END;
MPRINT(EM_DIAGRAM):   END;
36377     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
36378     +IF PCT_ATTRIBUTE2 < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE2 < 17.5 THEN DO;
36379     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36380     +END;
MPRINT(EM_DIAGRAM):   END;
36381     +ELSE IF 17.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17.5 <= PCT_ATTRIBUTE2 THEN DO;
36382     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36383     +END;
MPRINT(EM_DIAGRAM):   END;
36384     +END;
MPRINT(EM_DIAGRAM):   END;
36385     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36386     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36387     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36388     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36389     +IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' ,
36390     +'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
36391     +P_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06896551724137;
36392     +P_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.16413793103448;
36393     +P_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.26482758620689;
36394     +P_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02068965517241;
36395     +P_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.00689655172413;
36396     +P_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.03172413793103;
36397     +P_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.20689655172413;
36398     +P_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04413793103448;
36399     +P_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.17931034482758;
36400     +P_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01241379310344;
36401     +Q_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06896551724137;
36402     +Q_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.16413793103448;
36403     +Q_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.26482758620689;
36404     +Q_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02068965517241;
36405     +Q_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.00689655172413;
36406     +Q_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.03172413793103;
36407     +Q_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.20689655172413;
36408     +Q_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04413793103448;
36409     +Q_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.17931034482758;
36410     +Q_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01241379310344;
36411     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
36412     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
36413     +END;
MPRINT(EM_DIAGRAM):   END;
36414     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36415     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36416     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36417     +P_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09090909090909;
36418     +P_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.18181818181818;
36419     +P_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.36363636363636;
36420     +P_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.18181818181818;
36421     +P_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09090909090909;
36422     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
36423     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36424     +P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
36425     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36426     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36427     +Q_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09090909090909;
36428     +Q_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.18181818181818;
36429     +Q_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.36363636363636;
36430     +Q_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.18181818181818;
36431     +Q_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09090909090909;
36432     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
36433     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36434     +Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
36435     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
36436     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
36437     +END;
MPRINT(EM_DIAGRAM):   END;
36438     +END;
MPRINT(EM_DIAGRAM):   END;
36439     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36440     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36441     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36442     +IF _ARBFMT_2 IN ('49' ,'.' ,'07' ,'08' ,'46' ,'26' ,'21' ,'51' ,'17' ,
36443     +'39' ,'38' ,'29' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'.' ,'07' ,'08' ,'46' ,'26' ,'21' ,'51' ,'17' , '39' ,'38' ,'29' ,'06' ) THEN DO;
36444     +P_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.14117647058823;
36445     +P_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.20392156862745;
36446     +P_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.13725490196078;
36447     +P_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.05882352941176;
36448     +P_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0392156862745;
36449     +P_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09411764705882;
36450     +P_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.2078431372549;
36451     +P_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04313725490196;
36452     +P_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.07058823529411;
36453     +P_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00392156862745;
36454     +Q_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.14117647058823;
36455     +Q_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.20392156862745;
36456     +Q_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.13725490196078;
36457     +Q_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.05882352941176;
36458     +Q_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0392156862745;
36459     +Q_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09411764705882;
36460     +Q_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.2078431372549;
36461     +Q_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04313725490196;
36462     +Q_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.07058823529411;
36463     +Q_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00392156862745;
36464     +I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
36465     +U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
36466     +END;
MPRINT(EM_DIAGRAM):   END;
36467     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36468     +P_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15492957746478;
36469     +P_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.05633802816901;
36470     +P_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.0281690140845;
36471     +P_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2112676056338;
36472     +P_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.16901408450704;
36473     +P_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.12676056338028;
36474     +P_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.11267605633802;
36475     +P_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.0281690140845;
36476     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36477     +P_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11267605633802;
36478     +Q_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15492957746478;
36479     +Q_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.05633802816901;
36480     +Q_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.0281690140845;
36481     +Q_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2112676056338;
36482     +Q_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.16901408450704;
36483     +Q_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.12676056338028;
36484     +Q_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.11267605633802;
36485     +Q_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.0281690140845;
36486     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36487     +Q_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11267605633802;
36488     +I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
36489     +U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
36490     +END;
MPRINT(EM_DIAGRAM):   END;
36491     +END;
MPRINT(EM_DIAGRAM):   END;
36492     +END;
MPRINT(EM_DIAGRAM):   END;
36493     +END;
MPRINT(EM_DIAGRAM):   END;
36494     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36495     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36496     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36497     +MEDIAN_HOUSEHOLD_INCOME < 186.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 186.5 THEN DO;
36498     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36499     +END;
MPRINT(EM_DIAGRAM):   END;
36500     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36501     +186.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 186.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36502     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36503     +END;
MPRINT(EM_DIAGRAM):   END;
36504     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36505     +IF PER_CAPITA_INCOME < 8800 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 8800 THEN DO;
36506     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36507     +END;
MPRINT(EM_DIAGRAM):   END;
36508     +ELSE IF 8800 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 8800 <= PER_CAPITA_INCOME THEN DO;
36509     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36510     +END;
MPRINT(EM_DIAGRAM):   END;
36511     +END;
MPRINT(EM_DIAGRAM):   END;
36512     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
36513     +IF MEDIAN_HOME_VALUE < 335.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 335.5 THEN DO;
36514     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36515     +END;
MPRINT(EM_DIAGRAM):   END;
36516     +ELSE IF 335.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 335.5 <= MEDIAN_HOME_VALUE THEN DO;
36517     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36518     +END;
MPRINT(EM_DIAGRAM):   END;
36519     +END;
MPRINT(EM_DIAGRAM):   END;
36520     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36521     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36522     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36523     +IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND
36524     +PCT_OWNER_OCCUPIED < 90.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND PCT_OWNER_OCCUPIED < 90.5 THEN DO;
36525     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36526     +END;
MPRINT(EM_DIAGRAM):   END;
36527     +ELSE IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND
36528     +90.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND 90.5 <= PCT_OWNER_OCCUPIED THEN DO;
36529     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36530     +END;
MPRINT(EM_DIAGRAM):   END;
36531     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_CARD_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_CARD_RESPONSE_PROP ) THEN DO;
36532     +IF RECENT_CARD_RESPONSE_PROP < 0.909 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_CARD_RESPONSE_PROP < 0.909 THEN DO;
36533     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36534     +END;
MPRINT(EM_DIAGRAM):   END;
36535     +ELSE IF 0.909 <= RECENT_CARD_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.909 <= RECENT_CARD_RESPONSE_PROP THEN DO;
36536     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36537     +END;
MPRINT(EM_DIAGRAM):   END;
36538     +END;
MPRINT(EM_DIAGRAM):   END;
36539     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
36540     +IF RECENT_RESPONSE_PROP < 0.771 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.771 THEN DO;
36541     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36542     +END;
MPRINT(EM_DIAGRAM):   END;
36543     +ELSE IF 0.771 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.771 <= RECENT_RESPONSE_PROP THEN DO;
36544     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36545     +END;
MPRINT(EM_DIAGRAM):   END;
36546     +END;
MPRINT(EM_DIAGRAM):   END;
36547     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36548     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36549     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36550     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36551     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36552     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36553     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36554     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36555     +P_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.16666666666666;
36556     +P_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.5;
36557     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36558     +P_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.33333333333333;
36559     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36560     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36561     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36562     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36563     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36564     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36565     +Q_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.16666666666666;
36566     +Q_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.5;
36567     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36568     +Q_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.33333333333333;
36569     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36570     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36571     +END;
MPRINT(EM_DIAGRAM):   END;
36572     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36573     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36574     +IF NOT MISSING(PCT_ATTRIBUTE2 ) AND
36575     +PCT_ATTRIBUTE2 < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND PCT_ATTRIBUTE2 < 1.5 THEN DO;
36576     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36577     +END;
MPRINT(EM_DIAGRAM):   END;
36578     +ELSE IF NOT MISSING(PCT_ATTRIBUTE2 ) AND
36579     +1.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 1.5 <= PCT_ATTRIBUTE2 THEN DO;
36580     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36581     +END;
MPRINT(EM_DIAGRAM):   END;
36582     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE4 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE4 ) THEN DO;
36583     +IF PCT_ATTRIBUTE4 < 3 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE4 < 3 THEN DO;
36584     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36585     +END;
MPRINT(EM_DIAGRAM):   END;
36586     +ELSE IF 3 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3 <= PCT_ATTRIBUTE4 THEN DO;
36587     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36588     +END;
MPRINT(EM_DIAGRAM):   END;
36589     +END;
MPRINT(EM_DIAGRAM):   END;
36590     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36591     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36592     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36593     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36594     +P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
36595     +P_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.125;
36596     +P_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.08333333333333;
36597     +P_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.04166666666666;
36598     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36599     +P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
36600     +P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
36601     +P_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.41666666666666;
36602     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36603     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36604     +Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
36605     +Q_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.125;
36606     +Q_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.08333333333333;
36607     +Q_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.04166666666666;
36608     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36609     +Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
36610     +Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
36611     +Q_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.41666666666666;
36612     +I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
36613     +U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
36614     +END;
MPRINT(EM_DIAGRAM):   END;
36615     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36616     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
36617     +15462.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND 15462.5 <= PER_CAPITA_INCOME THEN DO;
36618     +P_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.18181818181818;
36619     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36620     +P_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.27272727272727;
36621     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36622     +P_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.09090909090909;
36623     +P_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09090909090909;
36624     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36625     +P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
36626     +P_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.18181818181818;
36627     +P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
36628     +Q_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.18181818181818;
36629     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36630     +Q_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.27272727272727;
36631     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36632     +Q_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.09090909090909;
36633     +Q_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09090909090909;
36634     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36635     +Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
36636     +Q_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.18181818181818;
36637     +Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
36638     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
36639     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
36640     +END;
MPRINT(EM_DIAGRAM):   END;
36641     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36642     +P_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06273062730627;
36643     +P_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.04059040590405;
36644     +P_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02398523985239;
36645     +P_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14575645756457;
36646     +P_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25830258302583;
36647     +P_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09778597785977;
36648     +P_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.03136531365313;
36649     +P_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00184501845018;
36650     +P_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00922509225092;
36651     +P_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.32841328413284;
36652     +Q_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06273062730627;
36653     +Q_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.04059040590405;
36654     +Q_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02398523985239;
36655     +Q_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14575645756457;
36656     +Q_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25830258302583;
36657     +Q_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09778597785977;
36658     +Q_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.03136531365313;
36659     +Q_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00184501845018;
36660     +Q_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00922509225092;
36661     +Q_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.32841328413284;
36662     +I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
36663     +U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
36664     +END;
MPRINT(EM_DIAGRAM):   END;
36665     +END;
MPRINT(EM_DIAGRAM):   END;
36666     +END;
MPRINT(EM_DIAGRAM):   END;
36667     +END;
MPRINT(EM_DIAGRAM):   END;
36668     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36669     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36670     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36671     +MEDIAN_HOUSEHOLD_INCOME < 236.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 236.5 THEN DO;
36672     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36673     +END;
MPRINT(EM_DIAGRAM):   END;
36674     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36675     +236.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 236.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36676     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36677     +END;
MPRINT(EM_DIAGRAM):   END;
36678     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36679     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36680     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36681     +IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,
36682     +'18' ,'36' ,'48' ,'31' ,'46' ,'51' ,'25' ,'33' ,'38' ,'53' ,'40' ,
36683     +'32' ,'47' ,'10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' , '18' ,'36' ,'48' ,'31' ,'46' ,'51' ,'25' ,'33' ,'38' ,'53' ,'40' , '32' ,'47' ,'10' ,'52' ) THEN DO;
36684     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36685     +END;
MPRINT(EM_DIAGRAM):   END;
36686     +ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'08' ,'19' ,'27' ,
36687     +'26' ,'28' ,'21' ,'44' ,'17' ,'39' ,'09' ,'29' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'08' ,'19' ,'27' , '26' ,'28' ,'21' ,'44' ,'17' ,'39' ,'09' ,'29' ) THEN DO;
36688     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36689     +END;
MPRINT(EM_DIAGRAM):   END;
36690     +END;
MPRINT(EM_DIAGRAM):   END;
36691     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36692     +IF PER_CAPITA_INCOME < 11155.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11155.5 THEN DO;
36693     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36694     +END;
MPRINT(EM_DIAGRAM):   END;
36695     +ELSE IF 11155.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11155.5 <= PER_CAPITA_INCOME THEN DO;
36696     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36697     +END;
MPRINT(EM_DIAGRAM):   END;
36698     +END;
MPRINT(EM_DIAGRAM):   END;
36699     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36700     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36701     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36702     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
36703     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36704     +IF _ARBFMT_4 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'4' ) THEN DO;
36705     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36706     +END;
MPRINT(EM_DIAGRAM):   END;
36707     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
36708     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36709     +END;
MPRINT(EM_DIAGRAM):   END;
36710     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36711     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36712     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36713     +IF _ARBFMT_2 IN ('30' ,'41' ,'08' ,'21' ,'51' ,'09' ,'10' ) THEN
36714     +DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'41' ,'08' ,'21' ,'51' ,'09' ,'10' ) THEN DO;
36715     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36716     +END;
MPRINT(EM_DIAGRAM):   END;
36717     +ELSE IF _ARBFMT_2 IN ('49' ,'43' ,'45' ,'20' ,'16' ,'07' ,'37' ,
36718     +'36' ,'48' ,'27' ,'46' ,'26' ,'28' ,'44' ,'17' ,'39' ,'25' ,'38' ,
36719     +'29' ,'40' ,'47' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'43' ,'45' ,'20' ,'16' ,'07' ,'37' , '36' ,'48' ,'27' ,'46' ,'26' ,'28' ,'44' ,'17' ,'39' ,'25' ,'38' , '29' ,'40' ,'47' ) THEN DO;
36720     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36721     +END;
MPRINT(EM_DIAGRAM):   END;
36722     +END;
MPRINT(EM_DIAGRAM):   END;
36723     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_URBANICITY ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_URBANICITY ) THEN DO;
36724     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
36725     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36726     +IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ) THEN DO;
36727     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36728     +END;
MPRINT(EM_DIAGRAM):   END;
36729     +ELSE IF _ARBFMT_4 IN ('R' ,'S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('R' ,'S' ,'C' ,'T' ) THEN DO;
36730     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36731     +END;
MPRINT(EM_DIAGRAM):   END;
36732     +END;
MPRINT(EM_DIAGRAM):   END;
36733     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36734     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36735     +P_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.20537897310513;
36736     +P_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.17359413202933;
36737     +P_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06356968215158;
36738     +P_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14180929095354;
36739     +P_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.07579462102689;
36740     +P_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1760391198044;
36741     +P_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09046454767726;
36742     +P_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00244498777506;
36743     +P_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.02689486552567;
36744     +P_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0440097799511;
36745     +Q_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.20537897310513;
36746     +Q_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.17359413202933;
36747     +Q_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06356968215158;
36748     +Q_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14180929095354;
36749     +Q_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.07579462102689;
36750     +Q_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1760391198044;
36751     +Q_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09046454767726;
36752     +Q_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00244498777506;
36753     +Q_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.02689486552567;
36754     +Q_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0440097799511;
36755     +I_WEALTH_RATING = '4';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '4';
36756     +U_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 4;
36757     +END;
MPRINT(EM_DIAGRAM):   END;
36758     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36759     +P_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.1;
36760     +P_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09333333333333;
36761     +P_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04;
36762     +P_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.21333333333333;
36763     +P_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.17333333333333;
36764     +P_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.23333333333333;
36765     +P_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04666666666666;
36766     +P_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.02;
36767     +P_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00666666666666;
36768     +P_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.07333333333333;
36769     +Q_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.1;
36770     +Q_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09333333333333;
36771     +Q_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04;
36772     +Q_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.21333333333333;
36773     +Q_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.17333333333333;
36774     +Q_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.23333333333333;
36775     +Q_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04666666666666;
36776     +Q_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.02;
36777     +Q_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00666666666666;
36778     +Q_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.07333333333333;
36779     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
36780     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
36781     +END;
MPRINT(EM_DIAGRAM):   END;
36782     +END;
MPRINT(EM_DIAGRAM):   END;
36783     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36784     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36785     +IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND
36786     +LIFETIME_MIN_GIFT_AMT < 19 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND LIFETIME_MIN_GIFT_AMT < 19 THEN DO;
36787     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36788     +END;
MPRINT(EM_DIAGRAM):   END;
36789     +ELSE IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND
36790     +19 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND 19 <= LIFETIME_MIN_GIFT_AMT THEN DO;
36791     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36792     +END;
MPRINT(EM_DIAGRAM):   END;
36793     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
36794     +IF FILE_AVG_GIFT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 30.5 THEN DO;
36795     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36796     +END;
MPRINT(EM_DIAGRAM):   END;
36797     +ELSE IF 30.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= FILE_AVG_GIFT THEN DO;
36798     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36799     +END;
MPRINT(EM_DIAGRAM):   END;
36800     +END;
MPRINT(EM_DIAGRAM):   END;
36801     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
36802     +IF LIFETIME_AVG_GIFT_AMT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 30.5 THEN DO;
36803     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36804     +END;
MPRINT(EM_DIAGRAM):   END;
36805     +ELSE IF 30.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
36806     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36807     +END;
MPRINT(EM_DIAGRAM):   END;
36808     +END;
MPRINT(EM_DIAGRAM):   END;
36809     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36810     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36811     +P_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.125;
36812     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36813     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36814     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36815     +P_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.375;
36816     +P_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.25;
36817     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36818     +P_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.25;
36819     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36820     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36821     +Q_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.125;
36822     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36823     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36824     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36825     +Q_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.375;
36826     +Q_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.25;
36827     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36828     +Q_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.25;
36829     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36830     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36831     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
36832     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
36833     +END;
MPRINT(EM_DIAGRAM):   END;
36834     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36835     +IF NOT MISSING(PCT_ATTRIBUTE3 ) AND
36836     +61.5 <= PCT_ATTRIBUTE3 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE3 ) AND 61.5 <= PCT_ATTRIBUTE3 THEN DO;
36837     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36838     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36839     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36840     +P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
36841     +P_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.4;
36842     +P_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.2;
36843     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36844     +P_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.2;
36845     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36846     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36847     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36848     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36849     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36850     +Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
36851     +Q_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.4;
36852     +Q_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.2;
36853     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36854     +Q_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.2;
36855     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36856     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36857     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
36858     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
36859     +END;
MPRINT(EM_DIAGRAM):   END;
36860     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36861     +P_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.11469534050179;
36862     +P_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.07048984468339;
36863     +P_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02986857825567;
36864     +P_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.24731182795698;
36865     +P_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.22341696535244;
36866     +P_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.16009557945041;
36867     +P_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04659498207885;
36868     +P_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00358422939068;
36869     +P_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.0179211469534;
36870     +P_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.08602150537634;
36871     +Q_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.11469534050179;
36872     +Q_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.07048984468339;
36873     +Q_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02986857825567;
36874     +Q_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.24731182795698;
36875     +Q_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.22341696535244;
36876     +Q_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.16009557945041;
36877     +Q_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04659498207885;
36878     +Q_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00358422939068;
36879     +Q_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.0179211469534;
36880     +Q_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.08602150537634;
36881     +I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
36882     +U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
36883     +END;
MPRINT(EM_DIAGRAM):   END;
36884     +END;
MPRINT(EM_DIAGRAM):   END;
36885     +END;
MPRINT(EM_DIAGRAM):   END;
36886     +END;
MPRINT(EM_DIAGRAM):   END;
36887     +END;
MPRINT(EM_DIAGRAM):   END;
36888     +END;
MPRINT(EM_DIAGRAM):   END;
36889     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36890     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
36891     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36892     +*;
MPRINT(EM_DIAGRAM):   *;
36893     +* ASSIGN VALUE TO: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: WEALTH_RATING;
36894     +*;
MPRINT(EM_DIAGRAM):   *;
36895     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
36896     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
36897     +_format200 = strip(I_WEALTH_RATING);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_WEALTH_RATING);
36898     +if _format200="9" then IMP_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   if _format200="9" then IMP_WEALTH_RATING = 9;
36899     +else
36900     +if _format200="8" then IMP_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   else if _format200="8" then IMP_WEALTH_RATING = 8;
36901     +else
36902     +if _format200="7" then IMP_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   else if _format200="7" then IMP_WEALTH_RATING = 7;
36903     +else
36904     +if _format200="6" then IMP_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_WEALTH_RATING = 6;
36905     +else
36906     +if _format200="5" then IMP_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_WEALTH_RATING = 5;
36907     +else
36908     +if _format200="4" then IMP_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_WEALTH_RATING = 4;
36909     +else
36910     +if _format200="3" then IMP_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_WEALTH_RATING = 3;
36911     +else
36912     +if _format200="2" then IMP_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_WEALTH_RATING = 2;
36913     +else
36914     +if _format200="1" then IMP_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_WEALTH_RATING = 1;
36915     +else
36916     +if _format200="0" then IMP_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   else if _format200="0" then IMP_WEALTH_RATING = 0;
36917     +END;
MPRINT(EM_DIAGRAM):   END;
36918     +*;
MPRINT(EM_DIAGRAM):   *;
36919     +* Drop prediction variables since they are for INPUTS not TARGETS;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
36920     +* Replace _NODE_ by _XODE_ so it can be safely dropped;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
36921     +*;
MPRINT(EM_DIAGRAM):   *;
36922     +drop
36923     +P_INCOME_GROUP7
36924     +P_INCOME_GROUP1
36925     +P_INCOME_GROUP3
36926     +P_INCOME_GROUP4
36927     +P_INCOME_GROUP5
36928     +P_INCOME_GROUP6
36929     +P_INCOME_GROUP2
36930     +I_INCOME_GROUP
36931     +U_INCOME_GROUP
36932     +Q_INCOME_GROUP7
36933     +Q_INCOME_GROUP1
36934     +Q_INCOME_GROUP3
36935     +Q_INCOME_GROUP4
36936     +Q_INCOME_GROUP5
36937     +Q_INCOME_GROUP6
36938     +Q_INCOME_GROUP2
36939     +P_REP_SES4
36940     +P_REP_SES1
36941     +P_REP_SES3
36942     +P_REP_SES2
36943     +I_REP_SES
36944     +U_REP_SES
36945     +Q_REP_SES4
36946     +Q_REP_SES1
36947     +Q_REP_SES3
36948     +Q_REP_SES2
36949     +P_REP_URBANICITYT
36950     +P_REP_URBANICITYC
36951     +P_REP_URBANICITYS
36952     +P_REP_URBANICITYR
36953     +P_REP_URBANICITYU
36954     +I_REP_URBANICITY
36955     +U_REP_URBANICITY
36956     +Q_REP_URBANICITYT
36957     +Q_REP_URBANICITYC
36958     +Q_REP_URBANICITYS
36959     +Q_REP_URBANICITYR
36960     +Q_REP_URBANICITYU
36961     +P_WEALTH_RATING0
36962     +P_WEALTH_RATING8
36963     +P_WEALTH_RATING9
36964     +P_WEALTH_RATING6
36965     +P_WEALTH_RATING3
36966     +P_WEALTH_RATING1
36967     +P_WEALTH_RATING2
36968     +P_WEALTH_RATING7
36969     +P_WEALTH_RATING5
36970     +P_WEALTH_RATING4
36971     +I_WEALTH_RATING
36972     +U_WEALTH_RATING
36973     +Q_WEALTH_RATING0
36974     +Q_WEALTH_RATING8
36975     +Q_WEALTH_RATING9
36976     +Q_WEALTH_RATING6
36977     +Q_WEALTH_RATING3
36978     +Q_WEALTH_RATING1
36979     +Q_WEALTH_RATING2
36980     +Q_WEALTH_RATING7
36981     +Q_WEALTH_RATING5
36982     +Q_WEALTH_RATING4
36983     +;
MPRINT(EM_DIAGRAM):   drop P_INCOME_GROUP7 P_INCOME_GROUP1 P_INCOME_GROUP3 P_INCOME_GROUP4 P_INCOME_GROUP5 P_INCOME_GROUP6 P_INCOME_GROUP2 I_INCOME_GROUP U_INCOME_GROUP Q_INCOME_GROUP7 Q_INCOME_GROUP1 Q_INCOME_GROUP3 Q_INCOME_GROUP4 Q_INCOME_GROUP5 
Q_INCOME_GROUP6 Q_INCOME_GROUP2 P_REP_SES4 P_REP_SES1 P_REP_SES3 P_REP_SES2 I_REP_SES U_REP_SES Q_REP_SES4 Q_REP_SES1 Q_REP_SES3 Q_REP_SES2 P_REP_URBANICITYT P_REP_URBANICITYC P_REP_URBANICITYS P_REP_URBANICITYR P_REP_URBANICITYU I_REP_URBANICITY 
U_REP_URBANICITY Q_REP_URBANICITYT Q_REP_URBANICITYC Q_REP_URBANICITYS Q_REP_URBANICITYR Q_REP_URBANICITYU P_WEALTH_RATING0 P_WEALTH_RATING8 P_WEALTH_RATING9 P_WEALTH_RATING6 P_WEALTH_RATING3 P_WEALTH_RATING1 P_WEALTH_RATING2 P_WEALTH_RATING7 
P_WEALTH_RATING5 P_WEALTH_RATING4 I_WEALTH_RATING U_WEALTH_RATING Q_WEALTH_RATING0 Q_WEALTH_RATING8 Q_WEALTH_RATING9 Q_WEALTH_RATING6 Q_WEALTH_RATING3 Q_WEALTH_RATING1 Q_WEALTH_RATING2 Q_WEALTH_RATING7 Q_WEALTH_RATING5 Q_WEALTH_RATING4 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
36984      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           1.00 seconds
      cpu time            0.98 seconds
      

36985      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
36986      quit;
36987      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
36988      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
36989      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
36990      retain ID 5 Node "Impt";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Impt";
36991      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
36992      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3623 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3623 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

36993      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
36994      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36995      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3623 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3623 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

36996      proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
36997      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36998      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set EMWS1.REPL_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

36999      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37000      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
37001      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
37002      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

37003      proc contents data=EMWS1.Impt_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Impt_train out=_meta(keep=NAME) noprint;
37004      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

37005      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
37006      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37007      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 61 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37008      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37009      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
37010      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37011      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: There were 53 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 61 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37012      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37013      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2842 rows and 5 columns.

37014      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37015      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
37016      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2842 observations read from the data set WORK._TEMPX.
NOTE: 2842 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 2934 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37017      filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas";
37018      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
37019      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
37020      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas.
37021     +
37022     +* ;
MPRINT(EM_DIAGRAM):   * ;
37023     +* Defining New Variables;
MPRINT(EM_DIAGRAM):   * Defining New Variables;
37024     +* ;
MPRINT(EM_DIAGRAM):   * ;
37025     +Length REP_DONOR_GENDER $9;
MPRINT(EM_DIAGRAM):   Length REP_DONOR_GENDER $9;
37026     +Label REP_DONOR_GENDER='Replacement: DONOR_GENDER';
MPRINT(EM_DIAGRAM):   Label REP_DONOR_GENDER='Replacement: DONOR_GENDER';
37027     +REP_DONOR_GENDER= DONOR_GENDER;
MPRINT(EM_DIAGRAM):   REP_DONOR_GENDER= DONOR_GENDER;
NOTE: Numeric value converted to character.
37028     +Length REP_SES $4;
MPRINT(EM_DIAGRAM):   Length REP_SES $4;
37029     +Label REP_SES='Replacement: SES';
MPRINT(EM_DIAGRAM):   Label REP_SES='Replacement: SES';
37030     +REP_SES= SES;
MPRINT(EM_DIAGRAM):   REP_SES= SES;
NOTE: Numeric value converted to character.
37031     +Length REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   Length REP_URBANICITY $4;
37032     +Label REP_URBANICITY='Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   Label REP_URBANICITY='Replacement: URBANICITY';
37033     +REP_URBANICITY= URBANICITY;
MPRINT(EM_DIAGRAM):   REP_URBANICITY= URBANICITY;
NOTE: Numeric value converted to character.
37034     +
37035     +* ;
MPRINT(EM_DIAGRAM):   * ;
37036     +* Replace Specific Class Levels ;
MPRINT(EM_DIAGRAM):   * Replace Specific Class Levels ;
37037     +* ;
MPRINT(EM_DIAGRAM):   * ;
37038     +length _UFormat200 $200;
MPRINT(EM_DIAGRAM):   length _UFormat200 $200;
37039     +drop   _UFORMAT200;
MPRINT(EM_DIAGRAM):   drop _UFORMAT200;
37040     +_UFORMAT200 = " ";
MPRINT(EM_DIAGRAM):   _UFORMAT200 = " ";
37041     +* ;
MPRINT(EM_DIAGRAM):   * ;
37042     +* Variable: DONOR_GENDER;
MPRINT(EM_DIAGRAM):   * Variable: DONOR_GENDER;
37043     +* ;
MPRINT(EM_DIAGRAM):   * ;
37044     +_UFORMAT200 = strip(DONOR_GENDER);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(DONOR_GENDER);
NOTE: Numeric value converted to character for argument 1 of 'STRIP' operation.
37045     +if _UFORMAT200 =  "A" then
37046     +REP_DONOR_GENDER="_UNKNOWN_";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "A" then REP_DONOR_GENDER="_UNKNOWN_";
37047     +* ;
MPRINT(EM_DIAGRAM):   * ;
37048     +* Variable: SES;
MPRINT(EM_DIAGRAM):   * Variable: SES;
37049     +* ;
MPRINT(EM_DIAGRAM):   * ;
37050     +_UFORMAT200 = strip(SES);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(SES);
NOTE: Numeric value converted to character for argument 1 of 'STRIP' operation.
37051     +if _UFORMAT200 =  "?" then
37052     +REP_SES="";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_SES="";
37053     +* ;
MPRINT(EM_DIAGRAM):   * ;
37054     +* Variable: URBANICITY;
MPRINT(EM_DIAGRAM):   * Variable: URBANICITY;
37055     +* ;
MPRINT(EM_DIAGRAM):   * ;
37056     +_UFORMAT200 = strip(URBANICITY);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(URBANICITY);
NOTE: Numeric value converted to character for argument 1 of 'STRIP' operation.
37057     +if _UFORMAT200 =  "?" then
37058     +REP_URBANICITY="";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_URBANICITY="";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37059      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

37060      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
37061      quit;
37062      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
37063      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
37064      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
37065      retain ID 6 Node "Repl";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "Repl";
37066      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
37067      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37068      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
37069      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37071      proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
37072      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37073      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS1.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 50 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37074      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37075      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
37076      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
37077      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 50 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

37078      proc contents data=EMWS1.Repl_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_train out=_meta(keep=NAME) noprint;
37079      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

37080      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
37081      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37082      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37083      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37084      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
37085      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37086      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37087      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37088      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 12 rows and 5 columns.

37089      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37090      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
37091      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 12 observations read from the data set WORK._TEMPX.
NOTE: 12 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 2946 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37092      %macro varDept(fcmpdata=,id=);
37093      %global nobs&id scoreFlag&id;
37094      %let scoreFlag&id = 0;
37095      %if &id=1 or ^&fcmpStart %then %do;
37096      proc sort data=&fcmpdata out=_temp&id nodupkey;
37097      by NAME;
37098      %if EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY ne %then %do;
37099      where id=&id and (LHS in( %let j=1;
37100      %do %while(%scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j) ne );
37101      %let var = %scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j);
37102      "&var" %let j = %eval(&j+1);
37103      %end;
37104      ) or substr(LHS, 1, 3)='EM_');
37105      %end;
37106      %else %do;
37107      where id=&id and substr(LHS, 1, 3)='EM_';
37108      %end;
37109      run;
37110      %let dsid = %sysfunc(open(_temp&id));
37111      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37112      %let dsid = %sysfunc(close(&dsid));
37113      %if &&nobs&id %then %do;
37114      %let scoreFlag&id = 1;
37115      %let fcmpStart = 1;
37116      %end;
37117      %else %let fcmpStart = 0;
37118      %end;
37119      %else %do;
37120      proc sort data=&fcmpdata out=_tempid;
37121      where id=&id;
37122      by LHS;
37123      run;
37124      %let dsid = %sysfunc(open(_tempid));
37125      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37126      %let dsid = %sysfunc(close(&dsid));
37127      %if ^&&nobs&id %then %do;
37128      proc datasets lib=work nolist;
37129      delete _tempid;
37130      run;
37131      quit;
37132      %end;
37133      %else %do;
37134      data _tempAll;
37135      set %let j=%eval(&id-1);
37136      %do x=1 %to &j;
37137      %if &&nobs&x %then %do;
37138      _temp&x %end;
37139      %end;
37140      ;
37141      run;
37142      proc sql;
37143      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
37144      quit;
37145      data _temp&id;
37146      set _temp&id;
37147      where LHS ne '' and NAME ne '' and Node ne '';
37148      run;
37149      proc datasets lib=work nolist;
37150      delete _tempAll;
37151      run;
37152      %let dsid = %sysfunc(open(_temp&id));
37153      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37154      %let dsid = %sysfunc(close(&dsid));
37155      %if ^&&nobs&id %then %do;
37156      proc datasets lib=work nolist;
37157      delete _temp&id;
37158      run;
37159      quit;
37160      %end;
37161      %else %do;
37162      %let scoreFlag&id = 1;
37163      data _temp&id;
37164      set _temp&id;
37165      where LHS ne NAME and node ne '';
37166      run;
37167      %let dsid = %sysfunc(open(_temp&id));
37168      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37169      %let dsid = %sysfunc(close(&dsid));
37170      %if ^&&nobs&id %then %do;
37171      proc datasets lib=work nolist;
37172      delete _temp&id;
37173      run;
37174      quit;
37175      %end;
37176      %else %do;
37177      proc sort data=_temp&id nodupkey;
37178      by LHS NAME;
37179      run;
37180      %end;
37181      %end;
37182      %end;
37183      %end;
37184      %mend varDept;
37185      %macro optCode(outdata=);
37186      %global fcmpStart;
37187      %let fcmpStart = 0;
37188      %let outputVars = EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY;
37189      %let NumNodes=9;
37190      %do k=1 %to &NumNodes;
37191      %vardept(fcmpdata=&outdata, id=&k);
37192      %end;
37193      %mend optCode;
37194      %optcode(outData=EMWS1.Score_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_CLASSIFICATION" "EM_PROBABILITY" "EM_EVENTPROBABILITY" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE (id=1) and (LHS in ('EM_CLASSIFICATION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 12 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP3.
NOTE: 3 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 9 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 9 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp4 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP4 created, with 3 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP4 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP4 has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp4 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP4.
NOTE: 2 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP4 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2842 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 2842 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp4 ;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 9 observations read from the data set WORK._TEMP3.
NOTE: There were 1 observations read from the data set WORK._TEMP4.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp4 ;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 9 observations read from the data set WORK._TEMP3.
NOTE: There were 1 observations read from the data set WORK._TEMP4.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

37195      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
37196      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
37197      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
37198      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37199      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
37200      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
37201      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
37202      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37203      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37204      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.

37205      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

37206      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
37207      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
37208      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 12.3;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M0P061913;
MPRINT(EM_DIAGRAM):   * Host: COB-IT-M22;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects;
MPRINT(EM_DIAGRAM):   * Project Name: Getting Started Charitable Giving Example;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Donations;
MPRINT(EM_DIAGRAM):   * Generated by: sakerb01;
MPRINT(EM_DIAGRAM):   * Date: 11OCT2015:15:07:21;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   drop _12_0 ;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
37566      %let validvarany = 0;
37567      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
37568      set EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMINPUTVARS;
37569      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
37570      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
37571      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 50 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37572      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
37573      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
37574      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 50 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

37575      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37576      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
37577      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
37578      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
37579      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
37580      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
37581      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
37582      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
37583      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
37584      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
37585      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
37586      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
37587      end;
MPRINT(EM_DIAGRAM):   end;
37588      output;
MPRINT(EM_DIAGRAM):   output;
37589      end;
MPRINT(EM_DIAGRAM):   end;
37590      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: There were 31 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

37591      proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
37592      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37593      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=DONOR.DONOR_RAW_DATA noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\sakerb01\AppData\Local\Temp\SAS Temporary Files\_TD4368_COB-IT-M22_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\sakerb01\AppData\Local\Temp\SAS Temporary Files\_TD4368_COB-IT-M22_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('DONOR.DONOR_RAW_DATA');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set DONOR.DONOR_RAW_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 12.3;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M0P061913;
MPRINT(EM_DIAGRAM):   * Host: COB-IT-M22;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects;
MPRINT(EM_DIAGRAM):   * Project Name: Getting Started Charitable Giving Example;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Donations;
MPRINT(EM_DIAGRAM):   * Generated by: sakerb01;
MPRINT(EM_DIAGRAM):   * Date: 11OCT2015:15:07:21;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   drop _12_0 ;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   drop 'CARD_PROM_12'n 'CLUSTER_CODE'n 'CONTROL_NUMBER'n 'DONOR_AGE'n 'DONOR_GENDER'n 'FILE_AVG_GIFT'n 'FILE_CARD_GIFT'n 'FREQUENCY_STATUS_97NK'n 'HOME_OWNER'n 'INCOME_GROUP'n 'IN_HOUSE'n 'LAST_GIFT_AMT'n 'LIFETIME_AVG_GIFT_AMT'n 
'LIFETIME_CARD_PROM'n 'LIFETIME_GIFT_AMOUNT'n 'LIFETIME_GIFT_COUNT'n 'LIFETIME_GIFT_RANGE'n 'LIFETIME_MAX_GIFT_AMT'n 'LIFETIME_MIN_GIFT_AMT'n 'LIFETIME_PROM'n 'MEDIAN_HOME_VALUE'n 'MEDIAN_HOUSEHOLD_INCOME'n 'MONTHS_SINCE_FIRST_GIFT'n 
'MONTHS_SINCE_LAST_GIFT'n 'MONTHS_SINCE_LAST_PROM_RESP'n 'MONTHS_SINCE_ORIGIN'n 'MOR_HIT_RATE'n 'NUMBER_PROM_12'n 'OVERLAY_SOURCE'n 'PCT_ATTRIBUTE1'n 'PCT_ATTRIBUTE2'n 'PCT_ATTRIBUTE3'n 'PCT_ATTRIBUTE4'n 'PCT_OWNER_OCCUPIED'n 'PEP_STAR'n 
'PER_CAPITA_INCOME'n 'PUBLISHED_PHONE'n 'RECENCY_STATUS_96NK'n 'RECENT_AVG_CARD_GIFT_AMT'n 'RECENT_AVG_GIFT_AMT'n 'RECENT_CARD_RESPONSE_COUNT'n 'RECENT_CARD_RESPONSE_PROP'n 'RECENT_RESPONSE_COUNT'n 'RECENT_RESPONSE_PROP'n 'RECENT_STAR_STATUS'n 'SES'n 
'TARGET_B'n 'TARGET_D'n 'URBANICITY'n 'WEALTH_RATING'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS1.Score_EMOUTPUTVARS noprint out=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
38037      data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
38038      set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
38039      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
38040      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
38041      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
38042      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
38043      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
38044      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
38045      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
38046      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
38047      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
38048      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
38049      else do;
MPRINT(EM_DIAGRAM):   else do;
38050      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
38051      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
38052      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
38053      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
38054      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
38055      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
38056      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
38057      end;
MPRINT(EM_DIAGRAM):   end;
38058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 13 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38059      proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
38060      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38061      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 66 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38062      proc sort data=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMOUTPUTVARS;
38063      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38064      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 13 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

38065      data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMOUTPUTVARS;
38066      merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
38067      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
38068      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38069      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
38070      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
38071      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 66 observations read from the data set WORK.META.
NOTE: There were 13 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

38072      %let _cn = %sysfunc(getoption(CENTER));
38073      %let _nb = %sysfunc(getoption(NUMBER));
38074      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
38075      title;
MPRINT(EM_DIAGRAM):   title;
38076      proc print data=EMWS1.Score_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMINPUTVARS noobs label;
38077      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
38078      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38079      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
38080      run;

NOTE: There were 4 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

38081      title10;
MPRINT(EM_DIAGRAM):   title10;
38082      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
38083      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
38084      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38085      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
38086      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38087      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
38088      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38089      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
38090      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38091      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
38092      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.

38093      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

38094      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
38095      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
38096      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38097      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
38098      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38099      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
38100      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38101      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
38102      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38103      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
38104      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38105      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
38106      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.

38107      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

38108      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
38109      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
38110      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

38111      %let _cn = %sysfunc(getoption(CENTER));
38112      %let _nb = %sysfunc(getoption(NUMBER));
38113      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
38114      title;
MPRINT(EM_DIAGRAM):   title;
38115      proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
38116      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
38117      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
38118         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
38119      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38120      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
38121      run;

NOTE: There were 13 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

38122      title10;
MPRINT(EM_DIAGRAM):   title10;
38123      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
38124      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
38125      * Score: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for TRAIN data;
38126      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.39 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score_TRAIN out=WORK.M13PTLUW noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13PTLUW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M13PTLUW(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13PTLUW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M13PTLUW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2V3K18H NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DXI6MT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V3K18H;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "D_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EP_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "I_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.37 seconds
      
NOTE: View EMWS1.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.39 seconds
      
38439      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
38440      * Score: Computing metadata for SCORE data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for SCORE data;
38441      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for SCORE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score_SCORE out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score_SCORE');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score_SCORE out=WORK.M3T9KDS5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3T9KDS5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T9KDS5(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3T9KDS5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T9KDS5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1P2N_5I NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00CSWRP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P2N_5I;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids2_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids2_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_CMeta_SCORE;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "D_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EP_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "I_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
