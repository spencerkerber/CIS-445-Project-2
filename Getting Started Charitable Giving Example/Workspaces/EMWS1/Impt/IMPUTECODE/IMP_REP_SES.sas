*;
* IMPUTE VARIABLE: REP_SES;
*;
length IMP_REP_SES $4;
label IMP_REP_SES = 'Imputed: Replacement: SES';
IMP_REP_SES = REP_SES;
if IMP_REP_SES eq '' then do;
****************************************************************;
****** DECISION TREE SCORING CODE ******;
****************************************************************;
****** LENGTHS OF NEW CHARACTER VARIABLES ******;
LENGTH I_REP_SES $ 4;
LENGTH U_REP_SES $ 4;
LENGTH _WARN_ $ 4;
****** LABELS FOR NEW VARIABLES ******;
LABEL P_REP_SES2 = 'Predicted: REP_SES=2';
LABEL P_REP_SES3 = 'Predicted: REP_SES=3';
LABEL P_REP_SES1 = 'Predicted: REP_SES=1';
LABEL P_REP_SES4 = 'Predicted: REP_SES=4';
LABEL Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
LABEL Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
LABEL Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
LABEL Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
LABEL I_REP_SES = 'Into: REP_SES';
LABEL U_REP_SES = 'Unnormalized Into: REP_SES';
LABEL _WARN_ = 'Warnings';
****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
LENGTH _ARBFMT_4 $ 4;
DROP _ARBFMT_4;
_ARBFMT_4 = ' ';
/* Initialize to avoid warning. */
LENGTH _ARBFMT_2 $ 2;
DROP _ARBFMT_2;
_ARBFMT_2 = ' ';
/* Initialize to avoid warning. */
****** ASSIGN OBSERVATION TO NODE ******;
DROP _BRANCH_;
_BRANCH_ = -1;
_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
%DMNORMIP( _ARBFMT_2);
IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' ,
'34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' ,
'12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' ,
'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,
'10' ) THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
_BRANCH_ = 2;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
_BRANCH_ = 1;
END;
ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
_BRANCH_ = 1;
END;
ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
IF _BRANCH_ EQ 2 THEN DO;
P_REP_SES2 = 0;
P_REP_SES3 = 1;
P_REP_SES1 = 0;
P_REP_SES4 = 0;
Q_REP_SES2 = 0;
Q_REP_SES3 = 1;
Q_REP_SES1 = 0;
Q_REP_SES4 = 0;
I_REP_SES = '3';
U_REP_SES = '3';
END;
ELSE DO;
_BRANCH_ = -1;
_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
%DMNORMIP( _ARBFMT_2);
IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' ,
'37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,
'35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,
'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
_BRANCH_ = 2;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
IF PER_CAPITA_INCOME < 15470.5 THEN DO;
_BRANCH_ = 1;
END;
ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
_BRANCH_ = 1;
END;
ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
IF _BRANCH_ EQ 1 THEN DO;
P_REP_SES2 = 1;
P_REP_SES3 = 0;
P_REP_SES1 = 0;
P_REP_SES4 = 0;
Q_REP_SES2 = 1;
Q_REP_SES3 = 0;
Q_REP_SES1 = 0;
Q_REP_SES4 = 0;
I_REP_SES = '2';
U_REP_SES = '2';
END;
ELSE DO;
_BRANCH_ = -1;
_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
%DMNORMIP( _ARBFMT_2);
IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
'13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,
'33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
_BRANCH_ = 2;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
_BRANCH_ = 1;
END;
ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
_BRANCH_ = 1;
END;
ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
IF _BRANCH_ EQ 2 THEN DO;
_BRANCH_ = -1;
_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
%DMNORMIP( _ARBFMT_2);
IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' )
THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
_BRANCH_ = 2;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
_BRANCH_ = 1;
END;
ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
_BRANCH_ = 1;
END;
ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
IF _BRANCH_ EQ 2 THEN DO;
_BRANCH_ = -1;
_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
%DMNORMIP( _ARBFMT_4);
IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
_BRANCH_ = 2;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
%DMNORMIP( _ARBFMT_2);
IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
_BRANCH_ = 1;
END;
ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
_BRANCH_ = 1;
END;
ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
_BRANCH_ = 2;
END;
END;
IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
IF _BRANCH_ EQ 2 THEN DO;
P_REP_SES2 = 0;
P_REP_SES3 = 0;
P_REP_SES1 = 0;
P_REP_SES4 = 1;
Q_REP_SES2 = 0;
Q_REP_SES3 = 0;
Q_REP_SES1 = 0;
Q_REP_SES4 = 1;
I_REP_SES = '4';
U_REP_SES = '4';
END;
ELSE DO;
P_REP_SES2 = 0;
P_REP_SES3 = 1;
P_REP_SES1 = 0;
P_REP_SES4 = 0;
Q_REP_SES2 = 0;
Q_REP_SES3 = 1;
Q_REP_SES1 = 0;
Q_REP_SES4 = 0;
I_REP_SES = '3';
U_REP_SES = '3';
END;
END;
ELSE DO;
P_REP_SES2 = 1;
P_REP_SES3 = 0;
P_REP_SES1 = 0;
P_REP_SES4 = 0;
Q_REP_SES2 = 1;
Q_REP_SES3 = 0;
Q_REP_SES1 = 0;
Q_REP_SES4 = 0;
I_REP_SES = '2';
U_REP_SES = '2';
END;
END;
ELSE DO;
P_REP_SES2 = 0;
P_REP_SES3 = 0;
P_REP_SES1 = 1;
P_REP_SES4 = 0;
Q_REP_SES2 = 0;
Q_REP_SES3 = 0;
Q_REP_SES1 = 1;
Q_REP_SES4 = 0;
I_REP_SES = '1';
U_REP_SES = '1';
END;
END;
END;
****************************************************************;
****** END OF DECISION TREE SCORING CODE ******;
****************************************************************;
*;
* ASSIGN VALUE TO: REP_SES;
*;
length _format200 $200;
drop _format200;
_format200 = strip(I_REP_SES);
if _format200="4" then IMP_REP_SES = "4   ";
else
if _format200="3" then IMP_REP_SES = "3   ";
else
if _format200="2" then IMP_REP_SES = "2   ";
else
if _format200="1" then IMP_REP_SES = "1   ";
END;
