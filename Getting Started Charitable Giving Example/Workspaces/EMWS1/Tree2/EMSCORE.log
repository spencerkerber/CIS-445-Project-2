MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:00:29" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 11, 2015
Time:                15:00:29
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2H8RGPK "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2H8RGPK new;
MPRINT(EM_DIAGRAM):   run;
23520      %let EMEXCEPTIONSTRING=;
23521      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23522      * SCORE: Tree2;
MPRINT(EM_DIAGRAM):   * SCORE: Tree2;
23523      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23524      %let EM_ACTION = SCORE;
23525      %let syscc = 0;
23526      %macro main;
23527      
23528        %if %upcase(&EM_ACTION) = CREATE %then %do;
23529          filename temp catalog 'sashelp.emmodl.tree_create.source';
23530          %include temp;
23531          filename temp;
23532      
23533          %em_tree_create;
23534        %end;
23535      
23536         %else
23537         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23538      
23539             filename temp catalog 'sashelp.emmodl.tree_train.source';
23540             %include temp;
23541             filename temp;
23542             %em_tree_train;
23543         %end;
23544      
23545        %else
23546        %if %upcase(&EM_ACTION) = SCORE %then %do;
23547          filename temp catalog 'sashelp.emmodl.tree_score.source';
23548          %include temp;
23549          filename temp;
23550      
23551          %em_tree_score;
23552      
23553        %end;
23554      
23555        %else
23556        %if %upcase(&EM_ACTION) = REPORT %then %do;
23557      
23558             filename temp catalog 'sashelp.emmodl.tree_report.source';
23559             %include temp;
23560             filename temp;
23561      
23562             %em_tree_report;
23563         %end;
23564      
23565        %else
23566        %if %upcase(&EM_ACTION) = OPENINT %then %do;
23567      
23568             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23569             %include temp;
23570             filename temp;
23571             %EM_TREE_OPENTREEVIEWER;
23572      
23573         %end;
23574      
23575        %else
23576        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
23577      
23578             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23579             %include temp;
23580             filename temp;
23581             %EM_TREE_CLOSETREEVIEWER;
23582      
23583         %end;
23584      
23585      
23586         %doendm:
23587      %mend main;
23588      
23589      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
23591     +%macro em_tree_score;
23593     +   /* determine if multiple targets will be processed */
23594     +   %let em_tree_multipleTargets=N;
23595     +   %let em_tree_numTarget=1;
23596     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
23597     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
23598     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
23599     +         %let em_tree_multipleTargets=N;
23600     +      %end;
23601     +      %else %do;
23602     +         /* create macro array of targets  */
23603     +         data _null_;
23604     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
23605     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
23606     +           if eof then
23607     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
23608     +        run;
23610     +        %if &em_tree_numTarget gt 1 %then %do;
23611     +           %let em_tree_multipleTargets=Y;
23612     +        %end;
23613     +      %end;
23614     +   %end;
23616     +   /* build flow and publish scoring code */
23617     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
23618     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
23620     +   filename treeflow "&EM_USER_TREEFLOW";
23621     +   filename treepub "&EM_USER_TREEPUBLISH";
23623     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
23624     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
23626     +   %em_copyfile(infref=treeflow, outfref=flowref);
23627     +   %em_copyfile(infref=treepub, outfref=pubref);
23629     +   filename treeflow;
23630     +   filename treepub;
23632     +   /* if priors are used, add code to generate unadjusted residuals in export */
23633     +   %let useAdjPriors = N;
23634     +   data _null_;
23635     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
23636     +     if USE="Y" then call symput('useAdjPriors', 'Y');
23637     +   run;
23638     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
23639     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
23640     +      %include temp;
23641     +      filename temp;
23643     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
23644     +      filename adjref "&EM_USER_adjResidualCode";
23645     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
23647     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
23649     +      filename adjref;
23650     +   %end;
23652     +   /* LEAF */
23653     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23654     +      data _null_;
23655     +        file flowref mod;
23656     +        put 'drop _LEAF_;';
23657     +      run;
23659     +      data _null_;
23660     +        file pubref mod;
23661     +        put 'drop _LEAF_;';
23662     +      run;
23664     +   %end;
23666     +   filename flowref;
23667     +   filename pubref;
23669     +   /* em_metachange code */
23670     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23671     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
23672     +   %end;
23674     +   /* variable selection based on importance stat    */
23675     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
23676     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
23677     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
23678     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
23679     +     %let obs = %sysfunc(fetch(&dsid));
23680     +     %do %while(&obs=0);
23681     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
23682     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
23683     +       %EM_METACHANGE(name=&varname, role=REJECTED);
23684     +       %let obs = %sysfunc(fetch(&dsid));
23685     +     %end;
23686     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
23687     +   %end;
23689     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
23690     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
23691     +    %let tree_pred_vars = ;
23692     +    %let tree_pred_lvl =;
23693     +    %let numpred= 0;
23695     +    data _null_;
23696     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
23697     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
23698     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
23699     +     if eof then
23700     +       call symput('numpred', strip(put(_N_, BEST.)));
23701     +    run;
23702     +   %end;
23704     +   %if &numpred ne 0 %then %do;
23705     +    %do i=1 %to &numpred;
23706     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
23707     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
23708     +    %end;
23709     +   %end;
23711     +   %doendm:
23712     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:54

NOTE: 210 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:58

NOTE: 161 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_TARGET_B_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_MAKEUNADJUSTEDRESIDUALVARS.SOURCE.
23713     +%macro makeUnadjustedResidualVars(target=, decmeta=, fref=);
23714     +    %local from_var target_level pred_level res_var res_label res_vars res_levels pred_var numLevels;
23715     +    %let from_var  =;
23716     +    %let res_var   =;
23717     +    %let res_label =;
23718     +    %let res_vars = ;
23719     +    %let res_levels =;
23720     +    %let pred_var  =;
23721     +    %let pred_level =;
23722     +    %let numLevels =;
23723     +    %let target_level =;
23724     +
23725     +    %if (&target eq ) or ^%sysfunc(exist(&decmeta)) or (&fref eq ) %then %goto doendm;
23726     +
23727     +    data _null_;
23728     +       set &decmeta end=eof;
23729     +       where _TYPE_ in('TARGET', 'FROM');
23730     +       if _TYPE_='TARGET' then
23731     +          call symput('target_level', strip(LEVEL));
23732     +       else
23733     +          call symput('from_var', strip(VARIABLE));
23734     +    run;
23735     +    %if &target_level = INTERVAL %then %do;
23736     +        data _null_;
23737     +           set &decmeta end=eof;
23738     +           where _TYPE_ in('PREDICTED', 'RESIDUAL');
23739     +           if _TYPE_ eq 'PREDICTED' then do;
23740     +               call symput('pred_var',   strip(Variable));
23741     +           end;
23742     +           else do;
23743     +              call symput('res_var',   strip(Variable));
23744     +              call symput('res_label', strip(tranwrd(LABEL,"'","''")));
23745     +           end;
23746     +        run;
23747     +    %end;
23748     +    %else %do;
23749     +        data _null_;
23750     +           set &decmeta;
23751     +           where _TYPE_ ='PREDICTED';
23752     +           call symput('pred_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
23753     +        run;
23754     +        data _null_;
23755     +           set &decmeta end=eof;
23756     +           where _TYPE_ ='RESIDUAL';
23757     +           call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
23758     +           call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
23759     +           call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
23760     +           if eof then
23761     +              call symput('numLevels', strip(put(_N_,BEST.)));
23762     +        run;
23763     +    %end;
23764     +
23765     +    data _null_;
23766     +        file &fref;
23767     +
23768     +    put "&EM_codebar;";
23769     +    put "*Computing Unadjusted Residual Vars: &Target;";
23770     +    put "&EM_codebar;";
23771     +
23772     +    %if &target_level eq INTERVAL %then %do;
23773     +        %if &res_label ne %then %do;
23774     +            put "Label &res_var = '&res_label';";
23775     +        %end;
23776     +         put "&res_var = &target - &pred_var;";
23777     +    %end;
23778     +    %else %do;
23779     +       %do i= 1 %to &numLevels;
23780     +           %let res_var =  &&res_vars&i;
23781     +           %let string = %nrbquote(Label &res_var='&&res_labels&i');
23782     +           put "&string;";
23783     +        %end;
23784     +
23785     +        put "if ";
23786     +
23787     +        %do i= 1 %to &numLevels;
23788     +            %let and = ;
23789     +            %if &i>1 %then
23790     +                %let and = and;
23791     +            %let string = %nrbquote(&and &from_var ne '&&res_levels&i');
23792     +                 put "&string";
23793     +        %end;
23794     +
23795     +        put " then do;";
23796     +
23797     +        %do i= 1 %to &numLevels;
23798     +            put "&&res_vars&i=.;";
23799     +        %end;
23800     +
23801     +        put "end;";
23802     +        put "else do;";
23803     +
23804     +        %do i= 1 %to &numLevels;
23805     +           %let qvar =  &&res_vars&i;
23806     +            %let qvar = %substr(&qvar, 2);
23807     +            %let qvar = Q&qvar;
23808     +            put "&&res_vars&i= - &qvar;";
23809     +        %end;
23810     +
23811     +         put "select(&from_var);";
23812     +
23813     +         %do i= 1 %to &numLevels;
23814     +            %let string = %nrbquote(when('&&res_levels&i')&&res_vars&i= &&res_vars&i+1);
23815     +            put "&string;";
23816     +        %end;
23817     +         put 'otherwise;';
23818     +         put 'end;';
23819     +         put 'end;';
23820     +    %end;
23821     +    run;
23822     +    %doendm:
23823     +%mend;
23824     +
23825     +
23826     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_TREE_SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename adjref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\adjResidualCode.sas";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   file adjref;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*Computing Unadjusted Residual Vars: TARGET_B;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B1='Residual: TARGET_B=1';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B0='Residual: TARGET_B=0';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "if ";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " F_TARGET_B ne '1'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "and F_TARGET_B ne '0'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " then do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "end;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "else do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1= - Q_TARGET_B1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0= - Q_TARGET_B0;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "select(F_TARGET_B);";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('1')R_TARGET_B1= R_TARGET_B1+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('0')R_TARGET_B0= R_TARGET_B0+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'otherwise;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: The file ADJREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\adjResidualCode.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:52

NOTE: 21 records were written to the file ADJREF.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("adjref",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=7160,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:54

NOTE: 21 records were written to the file FLOWREF.
      The minimum record length was 2.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename adjref;
NOTE: Fileref ADJREF has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=7709,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:54

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5808,
      Last Modified=11Oct2015:15:00:29,
      Create Time=08Oct2015:11:16:58

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE4                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FILE_CARD_GIFT                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_CARD_PROM              ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_RANGE             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DONOR_AGE                       ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_AVG_GIFT_AMT           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_PROM                   ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_AMOUNT            ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_MIN_GIFT_AMT           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_FIRST_GIFT         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MEDIAN_HOME_VALUE               ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_LAST_PROM_RESP     ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_ORIGIN             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MOR_HIT_RATE                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_COUNT             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE1                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LAST_GIFT_AMT                   ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE3                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("OVERLAY_SOURCE                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_OWNER_OCCUPIED              ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MEDIAN_HOUSEHOLD_INCOME         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_AVG_CARD_GIFT_AMT        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_LAST_GIFT          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_PROP       ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_RESPONSE_PROP            ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_STAR_STATUS              ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CARD_PROM_12                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CLUSTER_CODE                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_AVG_GIFT_AMT             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("INCOME_GROUP                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_URBANICITY                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENCY_STATUS_96NK             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_COUNT      ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_RESPONSE_COUNT           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_DONOR_GENDER                ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_SES                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("IN_HOUSE                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("WEALTH_RATING                   ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HOME_OWNER                      ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_MAX_GIFT_AMT           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PUBLISHED_PHONE                 ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_TARGET_B_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23827      
23828      *------------------------------------------------------------*;
23829      * End SCORE: Tree2;
23830      *------------------------------------------------------------*;

23831      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
23832      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
23833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23834      filename x "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
23835      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
23836      file x;
MPRINT(EM_DIAGRAM):   file x;
23837      put 'if upcase(NAME) = "CARD_PROM_12" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CARD_PROM_12" then do;';
23838      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23839      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23840      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23841      put 'if upcase(NAME) = "CLUSTER_CODE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CLUSTER_CODE" then do;';
23842      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23843      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23844      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23845      put 'if upcase(NAME) = "DONOR_AGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DONOR_AGE" then do;';
23846      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23847      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23848      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23849      put 'if upcase(NAME) = "FILE_CARD_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FILE_CARD_GIFT" then do;';
23850      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23851      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23852      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23853      put 'if upcase(NAME) = "HOME_OWNER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HOME_OWNER" then do;';
23854      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23855      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23856      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23857      put 'if upcase(NAME) = "INCOME_GROUP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "INCOME_GROUP" then do;';
23858      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23859      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23860      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23861      put 'if upcase(NAME) = "IN_HOUSE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "IN_HOUSE" then do;';
23862      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23863      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23864      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23865      put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
23866      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23867      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23868      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23869      put 'if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;';
23870      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23871      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23872      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23873      put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
23874      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23875      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23876      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23877      put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
23878      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23879      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23880      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23881      put 'if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;';
23882      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23883      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23884      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23885      put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
23886      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23887      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23888      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23889      put 'if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;';
23890      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23891      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23892      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23893      put 'if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;';
23894      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23895      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23896      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23897      put 'if upcase(NAME) = "LIFETIME_PROM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_PROM" then do;';
23898      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23899      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23900      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23901      put 'if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;';
23902      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23903      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23904      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23905      put 'if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;';
23906      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23907      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23908      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23909      put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
23910      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23911      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23912      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23913      put 'if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;';
23914      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23915      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23916      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23917      put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
23918      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23919      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23920      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23921      put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
23922      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23923      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23924      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23925      put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
23926      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23927      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23928      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23929      put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
23930      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23931      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23932      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23933      put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
23934      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23935      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23936      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23937      put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
23938      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23939      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23940      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23941      put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
23942      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23943      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23944      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23945      put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
23946      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23947      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23948      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23949      put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
23950      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23951      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23952      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23953      put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
23954      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
23955      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23956      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23957      put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
23958      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
23959      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23960      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23961      put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
23962      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23963      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23964      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23965      put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
23966      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23967      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23968      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23969      put 'if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;';
23970      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23971      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23972      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23973      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
23974      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23975      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23976      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23977      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
23978      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23979      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23980      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23981      put 'if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;';
23982      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23983      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23984      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23985      put 'if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;';
23986      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23987      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23988      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23989      put 'if upcase(NAME) = "RECENT_STAR_STATUS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_STAR_STATUS" then do;';
23990      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23991      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23992      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23993      put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
23994      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23995      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23996      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23997      put 'if upcase(NAME) = "REP_SES" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_SES" then do;';
23998      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23999      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24000      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24001      put 'if upcase(NAME) = "REP_URBANICITY" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_URBANICITY" then do;';
24002      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24003      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24004      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24005      put 'if upcase(NAME) = "WEALTH_RATING" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "WEALTH_RATING" then do;';
24006      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24007      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24008      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24009      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
24010      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
24011      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
24012      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24013      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11Oct2015:15:00:30,
      Create Time=08Oct2015:11:16:54

NOTE: 176 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

24014      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
24015      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24016      *------------------------------------------------------------*;
24017      * Tree2: Scoring DATA data;
24018      *------------------------------------------------------------*;
24019      data EMWS1.Tree2_TRAIN
24020      / view=EMWS1.Tree2_TRAIN
24021      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_TRAIN / view=EMWS1.Tree2_TRAIN ;
24022      set EMWS1.Repl_TRAIN
24023      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_TRAIN ;
24024      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas.
24025     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24026     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
24027     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24028     +
24029     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
24030     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
24031     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
24032     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
24033     +
24034     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
24035     +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
24036     +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
24037     +LABEL P_TARGET_B1  = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
24038     +LABEL P_TARGET_B0  = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
24039     +LABEL Q_TARGET_B1  = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
24040     +LABEL Q_TARGET_B0  = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
24041     +LABEL V_TARGET_B1  = 'Validated: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_TARGET_B1 = 'Validated: TARGET_B=1' ;
24042     +LABEL V_TARGET_B0  = 'Validated: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_TARGET_B0 = 'Validated: TARGET_B=0' ;
24043     +LABEL R_TARGET_B1  = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B1 = 'Residual: TARGET_B=1' ;
24044     +LABEL R_TARGET_B0  = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B0 = 'Residual: TARGET_B=0' ;
24045     +LABEL F_TARGET_B  = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL F_TARGET_B = 'From: TARGET_B' ;
24046     +LABEL I_TARGET_B  = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL I_TARGET_B = 'Into: TARGET_B' ;
24047     +LABEL U_TARGET_B  = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
24048     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
24049     +
24050     +
24051     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24052     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
24053     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
24054     +
24055     +
24056     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
24057     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24058     +
24059     +******             ASSIGN OBSERVATION TO NODE             ******;
24060     +_ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24061     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.07300054401831;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.92699945598168;
24062     +IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.33283087126921;
24063     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.66716912873078;
24064     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.07029666958131;
24065     +  P_TARGET_B1  =     0.07300054401831;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.92970333041868;
24066     +  P_TARGET_B0  =     0.92699945598168;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24067     +  Q_TARGET_B1  =     0.33283087126921;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24068     +  Q_TARGET_B0  =     0.66716912873078;
MPRINT(EM_DIAGRAM):   END;
24069     +  V_TARGET_B1  =     0.07029666958131;
24070     +  V_TARGET_B0  =     0.92970333041868;
MPRINT(EM_DIAGRAM):   ELSE DO;
24071     +  I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24072     +  U_TARGET_B  =                    0;
24073     +  END;
24074     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
24075     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24076     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.05030587345486;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.94969412654513;
24077     +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.25125292348813;
24078     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.74874707651186;
24079     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04964830264094;
24080     +    P_TARGET_B1  =     0.05030587345486;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95035169735905;
24081     +    P_TARGET_B0  =     0.94969412654513;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24082     +    Q_TARGET_B1  =     0.25125292348813;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24083     +    Q_TARGET_B0  =     0.74874707651186;
MPRINT(EM_DIAGRAM):   END;
24084     +    V_TARGET_B1  =     0.04964830264094;
24085     +    V_TARGET_B0  =     0.95035169735905;
MPRINT(EM_DIAGRAM):   ELSE DO;
24086     +    I_TARGET_B  = '0' ;
24087     +    U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND 17477 <= PER_CAPITA_INCOME THEN DO;
24088     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
24089     +  ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04725884462623;
24090     +    IF  NOT MISSING(PER_CAPITA_INCOME ) AND
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95274115537376;
24091     +                     17477 <= PER_CAPITA_INCOME  THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.2390988372093;
24092     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.76090116279069;
24093     +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04024137145951;
24094     +      P_TARGET_B1  =     0.04725884462623;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95975862854048;
24095     +      P_TARGET_B0  =     0.95274115537376;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24096     +      Q_TARGET_B1  =      0.2390988372093;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24097     +      Q_TARGET_B0  =     0.76090116279069;
MPRINT(EM_DIAGRAM):   END;
24098     +      V_TARGET_B1  =     0.04024137145951;
24099     +      V_TARGET_B0  =     0.95975862854048;
MPRINT(EM_DIAGRAM):   ELSE DO;
24100     +      I_TARGET_B  = '0' ;
24101     +      U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 13.615 THEN DO;
24102     +      END;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
24103     +    ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0361451652753;
24104     +      IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.96385483472469;
24105     +        FILE_AVG_GIFT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.19196062346185;
24106     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.80803937653814;
24107     +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03668059246853;
24108     +        P_TARGET_B1  =      0.0361451652753;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96331940753146;
24109     +        P_TARGET_B0  =     0.96385483472469;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24110     +        Q_TARGET_B1  =     0.19196062346185;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24111     +        Q_TARGET_B0  =     0.80803937653814;
MPRINT(EM_DIAGRAM):   END;
24112     +        V_TARGET_B1  =     0.03668059246853;
24113     +        V_TARGET_B0  =     0.96331940753146;
MPRINT(EM_DIAGRAM):   ELSE DO;
24114     +        I_TARGET_B  = '0' ;
24115     +        U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NUMBER_PROM_12 ) AND 13.5 <= NUMBER_PROM_12 THEN DO;
24116     +        END;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
24117     +      ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04899772110298;
24118     +        IF  NOT MISSING(NUMBER_PROM_12 ) AND
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95100227889701;
24119     +                          13.5 <= NUMBER_PROM_12  THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.24607329842931;
24120     +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.75392670157068;
24121     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03602921311568;
24122     +          P_TARGET_B1  =     0.04899772110298;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96397078688431;
24123     +          P_TARGET_B0  =     0.95100227889701;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24124     +          Q_TARGET_B1  =     0.24607329842931;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24125     +          Q_TARGET_B0  =     0.75392670157068;
MPRINT(EM_DIAGRAM):   END;
24126     +          V_TARGET_B1  =     0.03602921311568;
24127     +          V_TARGET_B0  =     0.96397078688431;
MPRINT(EM_DIAGRAM):   ELSE DO;
24128     +          I_TARGET_B  = '0' ;
24129     +          U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 58.5 <= PCT_ATTRIBUTE2 THEN DO;
24130     +          END;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
24131     +        ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.12136059263373;
24132     +          IF  NOT MISSING(PCT_ATTRIBUTE2 ) AND
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.87863940736626;
24133     +                            58.5 <= PCT_ATTRIBUTE2  THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.46666666666666;
24134     +            _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.53333333333333;
24135     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.05942303585465;
24136     +            P_TARGET_B1  =     0.12136059263373;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.94057696414534;
24137     +            P_TARGET_B0  =     0.87863940736626;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24138     +            Q_TARGET_B1  =     0.46666666666666;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24139     +            Q_TARGET_B0  =     0.53333333333333;
MPRINT(EM_DIAGRAM):   END;
24140     +            V_TARGET_B1  =     0.05942303585465;
24141     +            V_TARGET_B0  =     0.94057696414534;
MPRINT(EM_DIAGRAM):   ELSE DO;
24142     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
24143     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
24144     +            END;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0218140868437;
24145     +          ELSE DO;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.97818591315629;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.12378483473752;
24146     +            _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.87621516526247;
24147     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03330189507384;
24148     +            P_TARGET_B1  =      0.0218140868437;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96669810492615;
24149     +            P_TARGET_B0  =     0.97818591315629;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24150     +            Q_TARGET_B1  =     0.12378483473752;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24151     +            Q_TARGET_B0  =     0.87621516526247;
MPRINT(EM_DIAGRAM):   END;
24152     +            V_TARGET_B1  =     0.03330189507384;
MPRINT(EM_DIAGRAM):   END;
24153     +            V_TARGET_B0  =     0.96669810492615;
MPRINT(EM_DIAGRAM):   END;
24154     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   END;
24155     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   END;
24156     +            END;
MPRINT(EM_DIAGRAM):   END;
24157     +          END;
24158     +        END;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
24159     +      END;
24160     +    END;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
24161     +  END;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
24162     +
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
24163     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   END;
24164     +IF  F_TARGET_B  NE '1'
24165     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24166     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
24167     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
24168     + END;
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
24169     + ELSE DO;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
24170     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   END;
24171     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   END;
24172     +       SELECT( F_TARGET_B  );
24173     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
24174     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
24175     +       END;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
24176     + END;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
24177     +
24178     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
24179     +
24180     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
24181     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
24182     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
24183     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
24184     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
24185     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
24186     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
24187     +
24188     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
24189     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
24190     +BP_TARGET_B = .;
24191     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
24192     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
24193     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   drop _sum;
24194     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
24195     +
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
24196     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
24197     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
24198     +drop _sum;
MPRINT(EM_DIAGRAM):   end;
24199     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
24200     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
24201     +   EP_TARGET_B = _sum; _decnum = 2;
24202     +   D_TARGET_B = '0' ;
24203     +end;
24204     +
MPRINT(EM_DIAGRAM):   array TREE2dema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
24205     +*** Decision Matrix;
24206     +array TREE2dema [2,2] _temporary_ (
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
24207     +/* row 1 */  14.5 0
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
24208     +/* row 2 */  -0.5 0
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
24209     +);
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
24210     +
24211     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
24212     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   end;
24213     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto TREE2deex;
24214     +   when('0' ) _tarnum = 2;
24215     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = TREE2dema [_tarnum,_decnum];
24216     +end;
24217     +if _tarnum <= 0 then goto TREE2deex;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
24218     +
MPRINT(EM_DIAGRAM):   array TREE2debe [2] _temporary_ ( 14.5 0);
24219     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = TREE2debe [_tarnum];
24220     +CP_TARGET_B = TREE2dema [_tarnum,_decnum];
24221     +
24222     +*** Best Possible Consequence of Any Decision without Cost;
24223     +array TREE2debe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   TREE2deex:;
24224     +BP_TARGET_B = TREE2debe [_tarnum];
24225     +
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
24226     +
24227     +TREE2deex:;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
24228     +
MPRINT(EM_DIAGRAM):   ****************************************************************;
24229     +*** End Decision Processing ;
24230     +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24231     +****************************************************************;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
24232     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24233     +****************************************************************;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
24234     +
24235     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
24236     +*Computing Unadjusted Residual Vars: TARGET_B;
24237     +*------------------------------------------------------------*;
24238     +Label R_TARGET_B1='Residual: TARGET_B=1';
24239     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
24240     +if
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
24241     + F_TARGET_B ne '1'
MPRINT(EM_DIAGRAM):   end;
24242     +and F_TARGET_B ne '0'
24243     + then do;
MPRINT(EM_DIAGRAM):   else do;
24244     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
24245     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
24246     +end;
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
24247     +else do;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
24248     +R_TARGET_B1= - Q_TARGET_B1;
24249     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   otherwise;
24250     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   end;
24251     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   end;
24252     +when('0')R_TARGET_B0= R_TARGET_B0+1;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
24253     +otherwise;
24254     +end;
24255     +end;
24256     +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24257      run;

NOTE: DATA STEP view saved on file EMWS1.TREE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24258      quit;
24259      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24260      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24261      *------------------------------------------------------------*;
24262      * Tree2: Scoring VALIDATE data;
24263      *------------------------------------------------------------*;
24264      data EMWS1.Tree2_VALIDATE
24265      / view=EMWS1.Tree2_VALIDATE
24266      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_VALIDATE / view=EMWS1.Tree2_VALIDATE ;
24267      set EMWS1.Repl_VALIDATE
24268      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_VALIDATE ;
24269      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas.
24270     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24271     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
24272     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24273     +
24274     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
24275     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
24276     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
24277     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
24278     +
24279     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
24280     +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
24281     +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
24282     +LABEL P_TARGET_B1  = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
24283     +LABEL P_TARGET_B0  = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
24284     +LABEL Q_TARGET_B1  = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
24285     +LABEL Q_TARGET_B0  = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
24286     +LABEL V_TARGET_B1  = 'Validated: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_TARGET_B1 = 'Validated: TARGET_B=1' ;
24287     +LABEL V_TARGET_B0  = 'Validated: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_TARGET_B0 = 'Validated: TARGET_B=0' ;
24288     +LABEL R_TARGET_B1  = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B1 = 'Residual: TARGET_B=1' ;
24289     +LABEL R_TARGET_B0  = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B0 = 'Residual: TARGET_B=0' ;
24290     +LABEL F_TARGET_B  = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL F_TARGET_B = 'From: TARGET_B' ;
24291     +LABEL I_TARGET_B  = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL I_TARGET_B = 'Into: TARGET_B' ;
24292     +LABEL U_TARGET_B  = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
24293     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
24294     +
24295     +
24296     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24297     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
24298     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
24299     +
24300     +
24301     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
24302     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
24303     +
24304     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
24305     +_ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24306     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24307     +IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
24308     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
24309     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
24310     +  P_TARGET_B1  =     0.07300054401831;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.07300054401831;
24311     +  P_TARGET_B0  =     0.92699945598168;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.92699945598168;
24312     +  Q_TARGET_B1  =     0.33283087126921;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.33283087126921;
24313     +  Q_TARGET_B0  =     0.66716912873078;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.66716912873078;
24314     +  V_TARGET_B1  =     0.07029666958131;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.07029666958131;
24315     +  V_TARGET_B0  =     0.92970333041868;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.92970333041868;
24316     +  I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24317     +  U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24318     +  END;
MPRINT(EM_DIAGRAM):   END;
24319     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24320     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24321     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24322     +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24323     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
24324     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
24325     +    P_TARGET_B1  =     0.05030587345486;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.05030587345486;
24326     +    P_TARGET_B0  =     0.94969412654513;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.94969412654513;
24327     +    Q_TARGET_B1  =     0.25125292348813;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.25125292348813;
24328     +    Q_TARGET_B0  =     0.74874707651186;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.74874707651186;
24329     +    V_TARGET_B1  =     0.04964830264094;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04964830264094;
24330     +    V_TARGET_B0  =     0.95035169735905;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95035169735905;
24331     +    I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24332     +    U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24333     +    END;
MPRINT(EM_DIAGRAM):   END;
24334     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24335     +    IF  NOT MISSING(PER_CAPITA_INCOME ) AND
24336     +                     17477 <= PER_CAPITA_INCOME  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND 17477 <= PER_CAPITA_INCOME THEN DO;
24337     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
24338     +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
24339     +      P_TARGET_B1  =     0.04725884462623;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04725884462623;
24340     +      P_TARGET_B0  =     0.95274115537376;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95274115537376;
24341     +      Q_TARGET_B1  =      0.2390988372093;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.2390988372093;
24342     +      Q_TARGET_B0  =     0.76090116279069;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.76090116279069;
24343     +      V_TARGET_B1  =     0.04024137145951;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04024137145951;
24344     +      V_TARGET_B0  =     0.95975862854048;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95975862854048;
24345     +      I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24346     +      U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24347     +      END;
MPRINT(EM_DIAGRAM):   END;
24348     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24349     +      IF  NOT MISSING(FILE_AVG_GIFT ) AND
24350     +        FILE_AVG_GIFT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 13.615 THEN DO;
24351     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
24352     +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
24353     +        P_TARGET_B1  =      0.0361451652753;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0361451652753;
24354     +        P_TARGET_B0  =     0.96385483472469;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.96385483472469;
24355     +        Q_TARGET_B1  =     0.19196062346185;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.19196062346185;
24356     +        Q_TARGET_B0  =     0.80803937653814;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.80803937653814;
24357     +        V_TARGET_B1  =     0.03668059246853;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03668059246853;
24358     +        V_TARGET_B0  =     0.96331940753146;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96331940753146;
24359     +        I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24360     +        U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24361     +        END;
MPRINT(EM_DIAGRAM):   END;
24362     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24363     +        IF  NOT MISSING(NUMBER_PROM_12 ) AND
24364     +                          13.5 <= NUMBER_PROM_12  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NUMBER_PROM_12 ) AND 13.5 <= NUMBER_PROM_12 THEN DO;
24365     +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
24366     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
24367     +          P_TARGET_B1  =     0.04899772110298;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04899772110298;
24368     +          P_TARGET_B0  =     0.95100227889701;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95100227889701;
24369     +          Q_TARGET_B1  =     0.24607329842931;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.24607329842931;
24370     +          Q_TARGET_B0  =     0.75392670157068;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.75392670157068;
24371     +          V_TARGET_B1  =     0.03602921311568;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03602921311568;
24372     +          V_TARGET_B0  =     0.96397078688431;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96397078688431;
24373     +          I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24374     +          U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24375     +          END;
MPRINT(EM_DIAGRAM):   END;
24376     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24377     +          IF  NOT MISSING(PCT_ATTRIBUTE2 ) AND
24378     +                            58.5 <= PCT_ATTRIBUTE2  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 58.5 <= PCT_ATTRIBUTE2 THEN DO;
24379     +            _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
24380     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
24381     +            P_TARGET_B1  =     0.12136059263373;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.12136059263373;
24382     +            P_TARGET_B0  =     0.87863940736626;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.87863940736626;
24383     +            Q_TARGET_B1  =     0.46666666666666;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.46666666666666;
24384     +            Q_TARGET_B0  =     0.53333333333333;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.53333333333333;
24385     +            V_TARGET_B1  =     0.05942303585465;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.05942303585465;
24386     +            V_TARGET_B0  =     0.94057696414534;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.94057696414534;
24387     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24388     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24389     +            END;
MPRINT(EM_DIAGRAM):   END;
24390     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24391     +            _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
24392     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
24393     +            P_TARGET_B1  =      0.0218140868437;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0218140868437;
24394     +            P_TARGET_B0  =     0.97818591315629;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.97818591315629;
24395     +            Q_TARGET_B1  =     0.12378483473752;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.12378483473752;
24396     +            Q_TARGET_B0  =     0.87621516526247;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.87621516526247;
24397     +            V_TARGET_B1  =     0.03330189507384;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03330189507384;
24398     +            V_TARGET_B0  =     0.96669810492615;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96669810492615;
24399     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24400     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24401     +            END;
MPRINT(EM_DIAGRAM):   END;
24402     +          END;
MPRINT(EM_DIAGRAM):   END;
24403     +        END;
MPRINT(EM_DIAGRAM):   END;
24404     +      END;
MPRINT(EM_DIAGRAM):   END;
24405     +    END;
MPRINT(EM_DIAGRAM):   END;
24406     +  END;
MPRINT(EM_DIAGRAM):   END;
24407     +
24408     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
24409     +IF  F_TARGET_B  NE '1'
24410     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
24411     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
24412     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
24413     + END;
MPRINT(EM_DIAGRAM):   END;
24414     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24415     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
24416     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
24417     +       SELECT( F_TARGET_B  );
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
24418     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
24419     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
24420     +       END;
MPRINT(EM_DIAGRAM):   END;
24421     + END;
MPRINT(EM_DIAGRAM):   END;
24422     +
24423     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
24424     +
24425     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
24426     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
24427     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
24428     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
24429     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
24430     +
24431     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
24432     +
24433     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
24434     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
24435     +BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
24436     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
24437     +
24438     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
24439     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
24440     +
24441     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
24442     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
24443     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
24444     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
24445     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
24446     +   EP_TARGET_B = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
24447     +   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
24448     +end;
MPRINT(EM_DIAGRAM):   end;
24449     +
24450     +*** Decision Matrix;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
24451     +array TREE2dema [2,2] _temporary_ (
24452     +/* row 1 */  14.5 0
24453     +/* row 2 */  -0.5 0
24454     +);
MPRINT(EM_DIAGRAM):   array TREE2dema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
24455     +
24456     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
24457     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
24458     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
24459     +   when('0' ) _tarnum = 2;
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
24460     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
24461     +end;
MPRINT(EM_DIAGRAM):   end;
24462     +if _tarnum <= 0 then goto TREE2deex;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto TREE2deex;
24463     +
24464     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
24465     +CP_TARGET_B = TREE2dema [_tarnum,_decnum];
MPRINT(EM_DIAGRAM):   CP_TARGET_B = TREE2dema [_tarnum,_decnum];
24466     +
24467     +*** Best Possible Consequence of Any Decision without Cost;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
24468     +array TREE2debe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   array TREE2debe [2] _temporary_ ( 14.5 0);
24469     +BP_TARGET_B = TREE2debe [_tarnum];
MPRINT(EM_DIAGRAM):   BP_TARGET_B = TREE2debe [_tarnum];
24470     +
24471     +
24472     +TREE2deex:;
MPRINT(EM_DIAGRAM):   TREE2deex:;
24473     +
24474     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
24475     +
24476     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24477     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
24478     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24479     +
24480     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24481     +*Computing Unadjusted Residual Vars: TARGET_B;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
24482     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24483     +Label R_TARGET_B1='Residual: TARGET_B=1';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
24484     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
24485     +if
24486     + F_TARGET_B ne '1'
24487     +and F_TARGET_B ne '0'
24488     + then do;
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
24489     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
24490     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
24491     +end;
MPRINT(EM_DIAGRAM):   end;
24492     +else do;
MPRINT(EM_DIAGRAM):   else do;
24493     +R_TARGET_B1= - Q_TARGET_B1;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
24494     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
24495     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
24496     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
24497     +when('0')R_TARGET_B0= R_TARGET_B0+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
24498     +otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
24499     +end;
MPRINT(EM_DIAGRAM):   end;
24500     +end;
MPRINT(EM_DIAGRAM):   end;
24501     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24502      run;

NOTE: DATA STEP view saved on file EMWS1.TREE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24503      quit;
24504      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
24506      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
24507      * Tree2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree2: Computing metadata for TRAIN data;
24508      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree2_TRAIN out=WORK.M3DL4HYQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DL4HYQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DL4HYQ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DL4HYQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DL4HYQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0R1GD7S NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1EXNP3T(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R1GD7S;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree2";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_TARGET_B1") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("P_TARGET_B0") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("TARGET_B") model = "Tree2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CARD_PROM_12" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CLUSTER_CODE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DONOR_AGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FILE_CARD_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HOME_OWNER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "INCOME_GROUP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "IN_HOUSE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LAST_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_CARD_PROM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_PROM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MOR_HIT_RATE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "OVERLAY_SOURCE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE3" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE4" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PUBLISHED_PHONE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENCY_STATUS_96NK" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_STAR_STATUS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_DONOR_GENDER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_SES" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_URBANICITY" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "WEALTH_RATING" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
24991      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
24992      set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
24993      where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
24994      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE (DATA='Tree2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

24995      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree2_EMINFO;
24996      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
24997      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
24998      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   run;
25002      run;
25003      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_EMINFO;
25004      set EMWS1.Tree2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO WORK.MODELTEMP_INFO;
25005      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

25006      proc sort data = EMWS1.Tree2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO NOTHREADS;
25007      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25008      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

25009      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
25010      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25011      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

25012      proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
25013      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25014      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

25015      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_EMINFO;
25016      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
25017      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25018      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

25019      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
25020      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
25021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
25022      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
      
NOTE: View EMWS1.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
