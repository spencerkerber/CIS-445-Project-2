*------------------------------------------------------------*
User:                sakerb01
Date:                October 11, 2015
Time:                14:32:01
Site:                70080761
Platform:            X64_7PRO
Maintenance Release: 9.04.01M0P061913
EM Version:          12.3
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:30:59" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                October 11, 2015
Time:                14:30:59
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2HAI0FU "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2HAI0FU new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:30:59" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M0P061913";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.3";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:30:59" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
29751      proc freq data=EMWS1.Boost_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Boost_VariableSet noprint;
29752      table ROLE*LEVEL/out=WORK.BoostMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.BoostMETA;
29753      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS1.BOOST_VARIABLESET.
NOTE: The data set WORK.BOOSTMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
29754      proc print data=WORK.BoostMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.BoostMETA label noobs;
29755      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
29756      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
29757      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29758      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
29759      run;
 
NOTE: There were 7 observations read from the data set WORK.BOOSTMETA.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
29760      title10;
MPRINT(EM_DIAGRAM):   title10;
29761      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Repl_TRAIN EMWS1.Repl_TRAIN
EMWS1.Repl_TRAIN EMWS1.Repl_TRAIN EMWS1 Repl_TRAIN
EMWS1.Repl_TRAIN EMWS1.Repl_TRAIN
EMWS1.Repl_TRAIN EMWS1.Repl_TRAIN EMWS1 Repl_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Repl_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class TARGET_B(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="TARGET_B";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=TARGET_B));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="TARGET_B";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_TARGET_B_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by TARGET_B;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by TARGET_B;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
29790      data WORK.Boost_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Boost_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
29791      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
29792      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
29793         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
29794      set EMWS1.IDS_TARGET_B_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.IDS_TARGET_B_DM( where=(_TYPE_="TARGET"));
29795      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
29796      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
29797      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
29798      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
29799      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
29800      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
29801      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
29802      end;
MPRINT(EM_DIAGRAM):   end;
29803      output;
MPRINT(EM_DIAGRAM):   output;
29804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.BOOST_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
29805      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29806      proc print data=WORK.Boost_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Boost_EVENT noobs label;
29807      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
29808      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29809      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
29810      run;
 
NOTE: There were 1 observations read from the data set WORK.BOOST_EVENT.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29811      title10;
MPRINT(EM_DIAGRAM):   title10;
29812      proc print data = EMWS1.Ids_TARGET_B_DD noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Ids_TARGET_B_DD noobs label;
29813      var TARGET_B
29814      TRAINPRIOR
29815      DECISION1
29816      DECISION2
29817      DECPRIOR
29818      ;
MPRINT(EM_DIAGRAM):   var TARGET_B TRAINPRIOR DECISION1 DECISION2 DECPRIOR ;
29819      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29820      title10 "Decision Matrix and Prior Vector";
MPRINT(EM_DIAGRAM):   title10 "Decision Matrix and Prior Vector";
MPRINT(EM_DIAGRAM):   run;
29821      run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DD.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29822      title10;
MPRINT(EM_DIAGRAM):   title10;
29823      proc print data = EMWS1.Ids_TARGET_B_DM noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Ids_TARGET_B_DM noobs label;
29824      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
29825      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
29826      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
29827      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29828      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
29829      run;
 
NOTE: There were 11 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
29830      title10;
MPRINT(EM_DIAGRAM):   title10;
29831      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TARGET_B(type=PROFIT label= TARGET_B);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Getting Started Charitable Giving Example';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Donations';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.TARGET_B;
MPRINT(EM_DECDATA):   length TARGET_B $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   TARGET_B="1";
MPRINT(EM_DECDATA):   COUNT=4843;
MPRINT(EM_DECDATA):   DATAPRIOR=0.25;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.25;
MPRINT(EM_DECDATA):   DECPRIOR=0.05;
MPRINT(EM_DECDATA):   DECISION1=14.5;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   TARGET_B="0";
MPRINT(EM_DECDATA):   COUNT=14529;
MPRINT(EM_DECDATA):   DATAPRIOR=0.75;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.75;
MPRINT(EM_DECDATA):   DECPRIOR=0.95;
MPRINT(EM_DECDATA):   DECISION1=-0.5;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify TARGET_B(type=PROFIT label= TARGET_B);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TARGET_B(type=PROFIT label= TARGET_B);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="TARGET_B";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_TARGET_B_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_TARGET_B_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="TARGET_B";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_TARGET_B_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_TARGET_B_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
30333      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30334      * Boost: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Boost: Generation of macros and macro variables;
30335      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
30336      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
30337      %let EMEXCEPTIONSTRING=;
30338      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30339      * TRAIN: Boost;
MPRINT(EM_DIAGRAM):   * TRAIN: Boost;
30340      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30341      %let EM_ACTION = TRAIN;
30342      %let syscc = 0;
30343      %macro main;
30344
30345        filename temp catalog 'sashelp.emmodl.boost_macros.source';
30346        %include temp;
30347        filename temp;
30348
30349        %setProperties;
30350
30351        %if %upcase(&EM_ACTION) = CREATE %then %do;
30352          filename temp catalog 'sashelp.emmodl.boost_create.source';
30353          %include temp;
30354          filename temp;
30355
30356          %create;
30357        %end;
30358
30359         %else
30360         %if %upcase(&EM_ACTION) = TRAIN %then %do;
30361
30362             filename temp catalog 'sashelp.emmodl.boost_train.source';
30363             %include temp;
30364             filename temp;
30365             %train;
30366         %end;
30367
30368        %else
30369        %if %upcase(&EM_ACTION) = SCORE %then %do;
30370          filename temp catalog 'sashelp.emmodl.boost_score.source';
30371          %include temp;
30372          filename temp;
30373
30374          %score;
30375
30376        %end;
30377
30378        %else
30379        %if %upcase(&EM_ACTION) = REPORT %then %do;
30380
30381             filename temp catalog 'sashelp.emmodl.boost_report.source';
30382             %include temp;
30383             filename temp;
30384
30385             %report;
30386         %end;
30387
30388         %doendm:
30389      %mend main;
30390
30391      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
30392     +
30393     +%macro SetProperties;
30394     +
30395     +     /* boost options */
30396     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
30397     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
30398     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
30399     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
30400     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
30401     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
30402     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
30403     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
30404     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
30405     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
30406     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
30407     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
30408     +
30409     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
30410     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
30411     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
30412     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
30413     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
30414     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
30415     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
30416     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
30417     +
30418     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
30419     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
30420     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
30421     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
30422     +
30423     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
30424     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
30425     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
30426     +
30427     +%mend SetProperties;
30428     +
30429     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAIN.SOURCE.
30431     +%macro train;
30433     +   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
30434     +   %include temp;
30435     +   filename temp;
30437     +   %if &EM_IMPORT_DATA eq %then %do;
30438     +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
30439     +       %put &em_codebar;
30440     +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
30441     +       %put &errormsg;
30442     +       %put &em_codebar;
30443     +       %goto doendm;
30444     +   %end;
30445     +   %else
30446     +       %let EMEXCEPTIONSTRING =;
30448     +   %if  &EM_NUM_TARGET ne 1 %then %do;
30449     +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
30450     +        %put &em_codebar;
30451     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
30452     +        %put &errormsg;
30453     +        %put &em_codebar;
30454     +        %goto doendm;
30455     +   %end;
30457     +   %let target_level = %EM_TARGET_LEVEL;
30458     +   %let target_var = %EM_TARGET;
30460     +   %if ("&target_Level" ne "INTERVAL") %then %do;
30461     +       %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var,
30462     +                             nLevel=_nTargetLevel);
30463     +   %end;
30465     +   /* check actual num of target levels */
30466     +   %if (&target_Level eq BINARY) %then %do;
30467     +      %if &_nTargetLevel  > 2 %then %do;
30468     +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
30469     +        %put &em_codebar;
30470     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
30471     +        %put &errormsg;
30472     +        %put &em_codebar;
30473     +        %goto doendm;
30474     +      %end;
30475     +   %end;
30477     +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
30478     +        and (&EM_NUM_NOMINAL_INPUT < 1) %then %do;
30479     +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
30480     +        %put &em_codebar;
30481     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
30482     +        %put &errormsg;
30483     +        %put &em_codebar;
30484     +        %goto doendm;
30485     +   %end;
30487     +   /* Initialize property macro variables */
30488     +   %SetProperties;
30490     +   /* data sets */
30491     +   %EM_GETNAME(key=MODEL, type=DATA);
30492     +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
30493     +   %EM_GETNAME(key=SUBFIT, type=DATA);
30494     +   %EM_GETNAME(key=EMOUTFIT, type=DATA);
30496     +   /* files
30497     +   %EM_GETNAME(key=BINNINGCODE, type=FILE, extension=sas);*/
30499     +   /* retrieve target information */
30500     +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
30502     +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
30503     +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
30504     +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
30505     +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
30506     +   %do %while(^ %sysfunc(fetch(&dsid)));
30507     +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
30508     +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
30509     +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
30510     +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
30511     +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
30512     +   %end;
30513     +   %let dsid = %sysfunc(close(&dsid));
30515     +   /* if target level is ORDINAL, throw run time exception -- proc boost does not support ordinal target */
30516     +   %if &Target_Level eq ORDINAL %then %do;
30517     +        %let EMEXCEPTIONSTRING = exception.server.METADATA.INVALIDORDINALTARGET;
30518     +        %put &em_codebar;
30519     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_invalidordinaltarget_note, NOQUOTE));
30520     +        %put &errormsg;
30521     +        %put &em_codebar;
30522     +        %goto doendm;
30523     +   %end;
30525     +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
30526     +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
30527     +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
30528     +        %put &em_codebar;
30529     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
30530     +        %put &errormsg;
30531     +        %put &em_codebar;
30532     +        %goto doendm;
30533     +   %end;
30535     +   %runBoostProcedure;
30538     +   %doendm:
30539     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAINMACROS.SOURCE.
30540     +%Macro em_boost_makeDMDB(indata=, target=,  nLevel= );
30541     +  %global &nLevel;
30543     +  %let targetLevel=;
30544     +  data _null_;
30545     +     length orderString $64;
30546     +     set &em_data_variableset end=eof;
30547     +     where NAME="&target";
30548     +     select(order);
30549     +            when('')        order ='DESC';
30550     +            when('FMTASC')  order='ASCFMT';
30551     +            when('FMTDESC') order='DESFMT';
30552     +            otherwise;
30553     +     end;
30554     +     if eof then do;
30555     +        call symput("targetOrder", trim(order));
30556     +        call symput("targetLevel", trim(Level));
30557     +     end;
30558     +  run;
30560     +  %if "&targetLevel" ne "INTERVAL" %then %do;
30561     +  proc dmdb batch data=&indata dmdbCat=_BoostDMDB
30562     +    classout=_tmp_dmdbout;
30563     +    class &target(&targetOrder);
30564     +    target &target;
30565     +  run;
30566     +  data _tmp_dmdbout;
30567     +    set _tmp_dmdbout;
30568     +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
30569     +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
30570     +  run;
30571     +  data _null_;
30572     +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
30573     +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
30574     +    %let dsid = %sysfunc(close(&dsid));
30575     +     call symput("&nLevel", put(&_obs, Best12.));
30576     +  run;
30578     +  proc datasets lib=work nolist;
30579     +     delete _tmp_dmdbout;
30580     +  run;
30581     +  quit;
30582     +  %end;
30584     +%Mend em_boost_makeDMDB;
30586     +%macro runBoostProcedure;
30588     +  proc sql;
30589     +    reset noprint;
30590     +    select count(*) into :nobs from &EM_IMPORT_DATA;
30591     +  quit;
30593     +  %let arborkluge= "work._BoostDMDB";
30594     +  proc arbor proc=treeboost data=&EM_IMPORT_DATA
30596     +    %if &EM_PROPERTY_ITERATIONS ne %then %do;
30597     +      iterations = &EM_PROPERTY_ITERATIONS
30598     +    %end;
30600     +    %if &EM_PROPERTY_TRAINPROPORTION ne %then %do;
30601     +       %let tprop = %sysevalf(&EM_PROPERTY_TRAINPROPORTION / 100);
30602     +       trainproportion = &tprop
30603     +    %end;
30605     +    %if &EM_PROPERTY_SEED ne %then %do;
30606     +       seed = &EM_PROPERTY_SEED
30607     +    %end;
30609     +    %if &EM_PROPERTY_SHRINKAGE ne %then %do;
30610     +       shrinkage = &EM_PROPERTY_SHRINKAGE
30611     +    %end;
30613     +    %if &EM_PROPERTY_LEAFFRACTION ne %then %do;
30614     +      leaffraction = &EM_PROPERTY_LEAFFRACTION
30615     +    %end;
30617     +    %let splitsize = &EM_PROPERTY_SPLITSIZE;
30618     +    %if &splitsize ge &nobs %then %do;
30619     +       %let splitsize= .;
30620     +    %end;
30621     +    %if &splitsize ne . %then %do;
30622     +      splitsize = &splitsize
30623     +    %end;
30625     +    %if &EM_PROPERTY_MINCATSIZE ne %then %do;
30626     +      mincatsize = &EM_PROPERTY_MINCATSIZE
30627     +    %end;
30629     +    %if &EM_PROPERTY_MAXBRANCH ne %then %do;
30630     +       maxbranch = &EM_PROPERTY_MAXBRANCH
30631     +    %end;
30633     +    %if &EM_PROPERTY_MAXDEPTH ne %then %do;
30634     +       maxdepth = &EM_PROPERTY_MAXDEPTH
30635     +    %end;
30637     +    %let nsurrs = ;
30638     +    %if &EM_PROPERTY_NSURRS ne %then %do;
30639     +      %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
30640     +      %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
30641     +      maxsurrs = &nsurrs
30642     +    %end;
30644     +    %if &EM_PROPERTY_MISSING ne %then %do;
30645     +      Missing = &EM_PROPERTY_MISSING
30646     +    %end;
30648     +    %if &EM_PROPERTY_REUSEVAR ne %then %do;
30649     +      reusevar = &EM_PROPERTY_REUSEVAR
30650     +    %end;
30651     +/*
30652     +    %if &EM_PROPERTY_PRECISION ne %then %do;
30653     +      intervaldecimals=&EM_PROPERTY_PRECISION
30654     +    %end;
30655     +*/
30656     +    %if &EM_PROPERTY_EXHAUSTIVE ne %then %do;
30657     +      Exhaustive = &EM_PROPERTY_EXHAUSTIVE
30658     +    %end;
30660     +    %if &Target_Event ne %then %do;
30661     +      Event="&Target_Event"
30662     +    %end;
30664     +    %if &EM_PROPERTY_CATEGORICALBINS ne %then %do;
30665     +      CategoricalBins = &EM_PROPERTY_CATEGORICALBINS
30666     +    %end;
30668     +    %if &EM_PROPERTY_INTERVALBINS ne %then %do;
30669     +      IntervalBins = &EM_PROPERTY_INTERVALBINS
30670     +    %end;
30672     +    %if &TARGET_LEVEL eq INTERVAL %then %do;
30673     +      %if &EM_PROPERTY_HUBER ne %then %do;
30674     +        Huber=&EM_PROPERTY_HUBER
30675     +      %end;
30676     +    %end;
30677     +    ;
30679     +    %if %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED ne %then %do;
30680     +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
30681     +    %end;
30683     +    %if %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED ne  %then %do;
30684     +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
30685     +    %end;
30687     +    %if %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED ne %then %do;
30688     +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
30689     +    %end;
30691     +    %if %EM_FREQ ne %then %do;
30692     +       freq %EM_FREQ;
30693     +    %end;
30695     +    target %EM_TARGET / level = &TARGET_LEVEL;
30697     +    &EM_DEC_STATEMENT;
30699     +    %if &EM_PROPERTY_PERFORMANCE ne %then %do;
30700     +      performance  workdatalocation = &EM_PROPERTY_PERFORMANCE
30701     +    %end;
30702     +    %if &EM_PROPERTY_NODESIZE ne %then %do;
30703     +       nodesize = &EM_PROPERTY_NODESIZE
30704     +    %end;
30705     +    ;
30706     +    save model=&EM_USER_MODEL;
30707     +  run;
30708     +  quit;
30709     +  %em_checkerror();
30711     +%mend runBoostProcedure;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_BOOST_MAKEDMDB):   data _null_;
MPRINT(EM_BOOST_MAKEDMDB):   length orderString $64;
MPRINT(EM_BOOST_MAKEDMDB):   set EMWS1.Boost_VariableSet end=eof;
MPRINT(EM_BOOST_MAKEDMDB):   where NAME="TARGET_B";
MPRINT(EM_BOOST_MAKEDMDB):   select(order);
MPRINT(EM_BOOST_MAKEDMDB):   when('') order ='DESC';
MPRINT(EM_BOOST_MAKEDMDB):   when('FMTASC') order='ASCFMT';
MPRINT(EM_BOOST_MAKEDMDB):   when('FMTDESC') order='DESFMT';
MPRINT(EM_BOOST_MAKEDMDB):   otherwise;
MPRINT(EM_BOOST_MAKEDMDB):   end;
MPRINT(EM_BOOST_MAKEDMDB):   if eof then do;
MPRINT(EM_BOOST_MAKEDMDB):   call symput("targetOrder", trim(order));
MPRINT(EM_BOOST_MAKEDMDB):   call symput("targetLevel", trim(Level));
MPRINT(EM_BOOST_MAKEDMDB):   end;
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: Variable orderString is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.BOOST_VARIABLESET.
      WHERE NAME='TARGET_B';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_BOOST_MAKEDMDB):   proc dmdb batch data=EMWS1.Repl_TRAIN dmdbCat=_BoostDMDB classout=_tmp_dmdbout;
MPRINT(EM_BOOST_MAKEDMDB):   class TARGET_B(DESC);
MPRINT(EM_BOOST_MAKEDMDB):   target TARGET_B;
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: Records processed = 10654   Memory used = 511K.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_BOOST_MAKEDMDB):   data _tmp_dmdbout;
MPRINT(EM_BOOST_MAKEDMDB):   set _tmp_dmdbout;
MPRINT(EM_BOOST_MAKEDMDB):   if strip(TYPE) = 'N' and strip(LEVEL) = '.' then delete;
MPRINT(EM_BOOST_MAKEDMDB):   if strip(TYPE) = 'C' and strip(LEVEL) = '' then delete;
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_DMDBOUT.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_BOOST_MAKEDMDB):   data _null_;
MPRINT(EM_BOOST_MAKEDMDB):   call symput("_nTargetLevel", put(2, Best12.));
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_BOOST_MAKEDMDB):   proc datasets lib=work nolist;
MPRINT(EM_BOOST_MAKEDMDB):   delete _tmp_dmdbout;
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: Deleting WORK._TMP_DMDBOUT (memtype=DATA).
MPRINT(EM_BOOST_MAKEDMDB):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(RUNBOOSTPROCEDURE):   proc sql;
MPRINT(RUNBOOSTPROCEDURE):   reset noprint;
MPRINT(RUNBOOSTPROCEDURE):   select count(*) into :nobs from EMWS1.Repl_TRAIN;
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
MPRINT(RUNBOOSTPROCEDURE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(RUNBOOSTPROCEDURE):   proc arbor proc=treeboost data=EMWS1.Repl_TRAIN iterations = 50 trainproportion = 0.6 seed = 12345 shrinkage = 0.1 leaffraction = 0.1 mincatsize = 5 maxbranch = 2 maxdepth = 2 maxsurrs = 0 Missing = USEINSEARCH reusevar = 1
Exhaustive = 5000 Event="1                               " CategoricalBins = 30 IntervalBins = 100 ;
MPRINT(RUNBOOSTPROCEDURE):   input
MPRINT(EM_INTERVAL_INPUT):   DONOR_AGE FILE_AVG_GIFT FILE_CARD_GIFT LAST_GIFT_AMT LIFETIME_AVG_GIFT_AMT LIFETIME_CARD_PROM LIFETIME_GIFT_AMOUNT LIFETIME_GIFT_COUNT LIFETIME_GIFT_RANGE LIFETIME_MAX_GIFT_AMT LIFETIME_MIN_GIFT_AMT LIFETIME_PROM
MEDIAN_HOME_VALUE MEDIAN_HOUSEHOLD_INCOME MONTHS_SINCE_FIRST_GIFT MONTHS_SINCE_LAST_GIFT MONTHS_SINCE_LAST_PROM_RESP MONTHS_SINCE_ORIGIN MOR_HIT_RATE NUMBER_PROM_12 PCT_ATTRIBUTE1 PCT_ATTRIBUTE2 PCT_ATTRIBUTE3 PCT_ATTRIBUTE4 PCT_OWNER_OCCUPIED
PER_CAPITA_INCOME RECENT_AVG_CARD_GIFT_AMT RECENT_AVG_GIFT_AMT RECENT_CARD_RESPONSE_PROP RECENT_RESPONSE_PROP RECENT_STAR_STATUS
MPRINT(RUNBOOSTPROCEDURE):  / level = interval;
MPRINT(RUNBOOSTPROCEDURE):   input
MPRINT(EM_BINARY_INPUT):   HOME_OWNER IN_HOUSE PEP_STAR PUBLISHED_PHONE
MPRINT(EM_NOMINAL_INPUT):   CARD_PROM_12 CLUSTER_CODE FREQUENCY_STATUS_97NK INCOME_GROUP OVERLAY_SOURCE RECENCY_STATUS_96NK RECENT_CARD_RESPONSE_COUNT RECENT_RESPONSE_COUNT REP_DONOR_GENDER REP_SES REP_URBANICITY WEALTH_RATING
MPRINT(RUNBOOSTPROCEDURE):   / level = nominal;
MPRINT(RUNBOOSTPROCEDURE):   target
MPRINT(EM_TARGET):   TARGET_B
MPRINT(RUNBOOSTPROCEDURE):   / level = BINARY;
MPRINT(RUNBOOSTPROCEDURE):   decision decdata=WORK.TARGET_B decvars= DECISION1 DECISION2 priorVar=DECPRIOR;
MPRINT(RUNBOOSTPROCEDURE):   performance workdatalocation = DISK nodesize = 20000 ;
MPRINT(RUNBOOSTPROCEDURE):   save model=EMWS1.Boost_MODEL;
NOTE: 1590325 kilobytes of physical memory.
NOTE: Will use 10654 out of 10654 training cases.
NOTE: Using memory pool with 658898944 bytes.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 7500648 bytes of work memory.
NOTE: The data set EMWS1.BOOST_MODEL has 10175 observations and 4 variables.
MPRINT(RUNBOOSTPROCEDURE):   run;
 
MPRINT(RUNBOOSTPROCEDURE):   quit;
 
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           28.06 seconds
      cpu time            27.76 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           28.11 seconds
      cpu time            27.78 seconds
 
 
MPRINT(EM_CHECKERROR):   proc display c=sashelp.emutil.checkerror.scl;
MPRINT(EM_CHECKERROR):   run;
 
30714      %let SYSCC = 0;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_CHECKERROR):
MPRINT(RUNBOOSTPROCEDURE):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30715      *------------------------------------------------------------*;
30716      * End TRAIN: Boost;
30717      *------------------------------------------------------------*;
30718
 
30719      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30720      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
30721      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30722      ;
MPRINT(EM_DIAGRAM):   ;
30723      ;
MPRINT(EM_DIAGRAM):   ;
30724      ;
MPRINT(EM_DIAGRAM):   ;
30725      ;
MPRINT(EM_DIAGRAM):   ;
30726      quit;
MPRINT(EM_DIAGRAM):   quit;
30727      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30728      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
30729      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30730      /*; *"; *'; */
30731      ;
MPRINT(EM_DIAGRAM):   ;
30732      run;
MPRINT(EM_DIAGRAM):   run;
30733      quit;
MPRINT(EM_DIAGRAM):   quit;
30734      /* Reset EM Options */
30735      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
30736      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
30737      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:31:31" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 11, 2015
Time:                14:31:31
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BSL04U "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BSL04U new;
MPRINT(EM_DIAGRAM):   run;
30839      %let EMEXCEPTIONSTRING=;
30840      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30841      * SCORE: Boost;
MPRINT(EM_DIAGRAM):   * SCORE: Boost;
30842      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30843      %let EM_ACTION = SCORE;
30844      %let syscc = 0;
30845      %macro main;
30846
30847        filename temp catalog 'sashelp.emmodl.boost_macros.source';
30848        %include temp;
30849        filename temp;
30850
30851        %setProperties;
30852
30853        %if %upcase(&EM_ACTION) = CREATE %then %do;
30854          filename temp catalog 'sashelp.emmodl.boost_create.source';
30855          %include temp;
30856          filename temp;
30857
30858          %create;
30859        %end;
30860
30861         %else
30862         %if %upcase(&EM_ACTION) = TRAIN %then %do;
30863
30864             filename temp catalog 'sashelp.emmodl.boost_train.source';
30865             %include temp;
30866             filename temp;
30867             %train;
30868         %end;
30869
30870        %else
30871        %if %upcase(&EM_ACTION) = SCORE %then %do;
30872          filename temp catalog 'sashelp.emmodl.boost_score.source';
30873          %include temp;
30874          filename temp;
30875
30876          %score;
30877
30878        %end;
30879
30880        %else
30881        %if %upcase(&EM_ACTION) = REPORT %then %do;
30882
30883             filename temp catalog 'sashelp.emmodl.boost_report.source';
30884             %include temp;
30885             filename temp;
30886
30887             %report;
30888         %end;
30889
30890         %doendm:
30891      %mend main;
30892
30893      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
30894     +
30895     +%macro SetProperties;
30896     +
30897     +     /* boost options */
30898     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
30899     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
30900     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
30901     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
30902     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
30903     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
30904     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
30905     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
30906     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
30907     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
30908     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
30909     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
30910     +
30911     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
30912     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
30913     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
30914     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
30915     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
30916     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
30917     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
30918     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
30919     +
30920     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
30921     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
30922     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
30923     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
30924     +
30925     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
30926     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
30927     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
30928     +
30929     +%mend SetProperties;
30930     +
30931     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_SCORE.SOURCE.
30933     +%global ntrees ni nclasses;
30934     +%macro selectSubseries;
30936     +  %let arborkluge= "work._BoostDMDB";
30937     +  %if ^%sysfunc(cexist(work._BoostDMDB)) %then %do;
30938     +     %let target_var = %EM_TARGET;
30939     +     %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var, nLevel=_nTargetLevel);
30940     +  %end;
30942     +    %EM_GETNAME(key=MODEL, type=DATA);
30943     +    %EM_GETNAME(key=IMPORTANCE, type=DATA);
30944     +    proc arbor proc=treeboost data=&EM_IMPORT_DATA inmodel=&EM_USER_MODEL;
30946     +    %if &EM_PROPERTY_SUBSERIES ne %then %do;
30947     +      subseries
30948     +      %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
30949     +         &EM_PROPERTY_SUBSERIES = &EM_PROPERTY_ITERATIONNUM
30950     +      %end;
30951     +      %else %do;
30952     +         &EM_PROPERTY_SUBSERIES
30953     +      %end;
30954     +    %end;
30955     +    ;
30957     +    makemacro nimportant=ni nclasses=nclasses
30958     +    %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
30959     +       nitsase=nitsase nitsmisc=nitsmisc nitsprofit=nitsprofit
30960     +    %end;
30961     +    ;
30963     +    %if &EM_PROPERTY_ASSESSMEASURE ne %then %do;
30964     +      assess
30965     +      %if &EM_IMPORT_VALIDATE ne %then %do;
30966     +        Validata=&EM_IMPORT_VALIDATE
30967     +      %end;
30968     +      %else %do;
30969     +        NoValidata
30970     +      %end;
30972     +      %if &EM_PROPERTY_ASSESSMEASURE eq PROFIT %then %do;
30973     +         %if %sysfunc(exist(&EM_DEC_DECMETA, DATA)) eq 0 %then %do;
30974     +           %if %upcase(&Target_Level) eq INTERVAL %then %do;
30975     +             %let EM_PROPERTY_MEASURE = ASE;
30976     +           %end;
30977     +           %else %do;
30978     +             %let EM_PROPERTY_MEASURE= MISC;
30979     +           %end;
30980     +           %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
30981     +           %put &note;
30982     +           %let note = %sysfunc(sasmsg(sashelp.dmine, assessmearerest_note, NOQUOTE));
30983     +           %put &note;
30984     +         %end;
30985     +         %else %do;
30986     +            %let dsid = %sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
30987     +            %if &dsid eq %then %do;
30988     +               %if %upcase(&Target_Level) eq INTERVAL %then %do;
30989     +                  %let EM_PROPERTY_MEASURE = ASE;
30990     +               %end;
30991     +               %else %do;
30992     +                  %let EM_PROPERTY_MEASURE = MISC;
30993     +               %end;
30994     +               %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
30995     +               %put &note;
30996     +               %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
30997     +               %put &note;
30998     +            %end;
30999     +            %else %do;
31000     +               %let firstobs = %sysfunc(fetchobs(&dsid, 1));
31001     +               %let usenum   = %sysfunc(VARNUM(&dsid, USE));
31002     +               %let use      = %sysfunc(getvarc(&dsid, &usenum));
31004     +               %if &use eq N %then %do;
31005     +                 %if %upcase(&Target_Level) eq INTERVAL %then %do;
31006     +                    %let EM_PROPERTY_MEASURE = ASE;
31007     +                 %end;
31008     +                 %else %do;
31009     +                    %let EM_PROPERTY_MEASURE = MISC;
31010     +                 %end;
31011     +                 %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
31012     +                 %put &note;
31013     +                 %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
31014     +                 %put &note;
31016     +               %end;
31017     +               %else %do;
31018     +                 %let EM_PROPERTY_MEASURE = PROFIT;
31019     +               %end;
31020     +            %end;
31021     +            %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
31022     +         %end;
31023     +      %end;
31024     +      %else %if &EM_PROPERTY_ASSESSMEASURE eq MISC %then %do;
31025     +         %if %upcase(&Target_Level) eq INTERVAL %then %do;
31026     +           %let EM_PROPERTY_MEASURE = ASE;
31027     +         %end;
31028     +         %else %do;
31029     +           %let EM_PROPERTY_MEASURE = MISC;
31030     +         %end;
31031     +      %end;
31032     +      %else %if &EM_PROPERTY_ASSESSMEASURE eq ASE %then %do;
31033     +         %let EM_PROPERTY_MEASURE = ASE;
31034     +      %end;
31036     +      measure = &EM_PROPERTY_MEASURE
31038     +      ;
31039     +    %end;
31041     +    %let lookupString = ;
31042     +    %if ^%symexist(EM_OPTION) %then
31043     +        %let EM_OPTION=;
31045     +    %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
31046     +           %let lookupString = LOOKUP=SELECT;
31047     +    %end;
31049     +    code file="&EM_FILE_EMFLOWSCORECODE" res group=&emloopid &lookupString;
31050     +    code file="&EM_FILE_EMPUBLISHSCORECODE" nores group=&emloopid &lookupString;
31052     +    save fit=SUBFIT importance=&EM_USER_IMPORTANCE model=&EM_USER_MODEL;
31054     +    score data=&EM_IMPORT_DATA out=fds(keep= p_:) outfit=work.fit_train role=TRAIN;
31055     +    %if &EM_IMPORT_VALIDATE ne %then %do;
31056     +      score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
31057     +    %end;
31058     +    %if &EM_IMPORT_TEST ne %then %do;
31059     +      score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
31060     +    %end;
31062     +    run;
31063     +    quit;
31065     +    %if %sysfunc(cexist(work._BoostDMDB)) %then %do;
31066     +        /* Delete DMDB catalog */
31067     +        proc datasets lib=work nolist;
31068     +           delete _BoostDMDB / mt=cat;
31069     +        run;
31070     +    %end;
31074     +    /* set ntrees macro to selected iteration based on subseries property */
31075     +    %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
31076     +      %let ntrees = &EM_PROPERTY_ITERATIONNUM;
31077     +    %end;
31078     +    %else %if &EM_PROPERTY_SUBSERIES eq LONGEST %then %do;
31079     +      %let ntrees = &EM_PROPERTY_ITERATIONS;
31080     +    %end;
31081     +    %else %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
31082     +       %if &EM_PROPERTY_MEASURE eq ASE %then %let ntrees=&NITSASE;
31083     +       %else %if &EM_PROPERTY_MEASURE eq MISC %then %let ntrees=&NITSMISC;
31084     +       %else %let ntrees=&NITSPROFIT;
31085     +    %end;
31086     +%mend selectSubseries;
31088     +%macro createSubFit;
31090     +  %EM_GETNAME(key=SUBFIT, type=DATA);
31091     +   data &EM_USER_SUBFIT;
31092     +     length datarole $8;
31093     +     set SUBFIT;
31094     +     datarole = "TRAIN";
31095     +     label  _MISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
31096     +            _MAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
31097     +            _SSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
31098     +            _ASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
31099     +            _RASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
31100     +            _APROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
31101     +            _PROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
31102     +            _PASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
31103     +            _PMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
31104     +            _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
31105     +            _ITERATION_="%sysfunc(sasmsg(sashelp.dmine, rpt_iter_vlabel , noquote))"
31106     +            _NW_ = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
31107     +            datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel  , noquote))";
31108     +     keep _ITERATION_ _NW_ _MISC_ _MAX_ _SSE_ _ASE_ _RASE_ _NLEAVES_ datarole
31109     +          %if &EM_DEC_DECDATA ne %then %do;
31110     +            _APROF_ _PROF_ _PASE_ _PMISC_
31111     +          %end;
31112     +          ;
31113     +   run;
31115     +   %if &EM_IMPORT_VALIDATE ne %then %do;
31116     +      data tempvalid;
31117     +        length datarole $8;
31118     +        set SUBFIT;
31119     +        rename  _VMISC_ = _MISC_
31120     +                _VMAX_  = _MAX_
31121     +                _VSSE_ = _SSE_
31122     +                _VASE_ = _ASE_
31123     +                _VRASE_ = _RASE_
31124     +                %if &EM_DEC_DECDATA ne %then %do;
31125     +                  _VAPROF_ = _APROF_
31126     +                  _VPROF_  = _PROF_
31127     +                  _VPASE_  = _PASE_
31128     +                  _VPMISC_ = _PMISC_
31129     +                %end;
31130     +                ;
31131     +        datarole = "VALID";
31132     +         label  _VMISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
31133     +                _VMAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
31134     +                _VSSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
31135     +                _VASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
31136     +                _VRASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
31137     +                _VAPROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
31138     +                _VPROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
31139     +                _VPASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
31140     +                _VPMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
31141     +                _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
31142     +                datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, noquote))";
31143     +        keep _ITERATION_ _NW_ _VMISC_ _VMAX_ _VSSE_ _VASE_ _VRASE_ _NLEAVES_ datarole
31144     +             %if &EM_DEC_DECDATA ne %then %do;
31145     +                _VAPROF_ _VPROF_ _VPASE_ _VPMISC_
31146     +             %end;
31147     +             ;
31148     +      run;
31150     +      data &EM_USER_SUBFIT;
31151     +        set &EM_USER_SUBFIT tempvalid;
31152     +      run;
31154     +      proc datasets library=work nolist;
31155     +        delete tempvalid;
31156     +      run;
31157     +   %end;
31159     +   proc datasets library=work nolist;
31160     +     delete subfit;
31161     +   run;
31163     +%mend createSubFit;
31165     +%macro createFitStatistics;
31167     +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
31168     +   data &EM_USER_EMOUTFIT;
31169     +     length target $32;
31170     +     merge work.fit_train
31171     +     %if &EM_IMPORT_VALIDATE ne %then %do;
31172     +       work.fit_valid
31173     +     %end;
31174     +     %if &EM_IMPORT_TEST ne %then %do;
31175     +       work.fit_test
31176     +     %end;
31177     +     ;
31178     +     target = "%EM_TARGET";
31179     +     drop _NW_;
31180     +   run;
31182     +   %if &EM_IMPORT_VALIDATE ne %then %do;
31183     +     proc datasets library=work nolist;
31184     +       delete fit_valid;
31185     +     run;
31186     +   %end;
31187     +   %if &EM_IMPORT_TEST ne %then %do;
31188     +     proc datasets library=work nolist;
31189     +       delete fit_test;
31190     +     run;
31191     +   %end;
31194     +%mend createFitStatistics;
31196     +%macro generatePartialDependencyTable(iteration= ,ds1=, var=);
31198     +  %EM_GETNAME(key=PARTIALDEPENDENCY, type=DATA);
31200     +  %if &iteration eq 1 %then %do;
31201     +    data &EM_USER_PARTIALDEPENDENCY;
31202     +    run;
31203     +  %end;
31205     +  %let partialvar = partial&iteration;
31206     +  data &EM_USER_PARTIALDEPENDENCY;
31207     +    merge &EM_USER_PARTIALDEPENDENCY &ds1(rename=(P_BAD1=&partialvar) keep=P_BAD1 &var);
31208     +    label &partialvar = "%sysfunc(sasmsg(sashelp.dmine, rpt_partialdep_vlabel, noquote, &var))";
31209     +  run;
31211     +%mend generatePartialDependencyTable;
31213     +%macro merge_imp_h (iactds=, impds= );
31214     +   %if &ni gt 0 %then %do;
31215     +    data _imp;
31216     +       set &impds.;
31217     +       _obs_ = _n_;
31218     +    run;
31219     +    proc sort data=_imp;
31220     +       by name;
31221     +    run;
31222     +    proc sort data= &iactds.;
31223     +       by name;
31224     +    run;
31225     +    data &impds;
31226     +       merge _imp &iactds;
31227     +       by name;
31228     +    run;
31229     +    proc sort data=&impds;
31230     +       by _obs_;
31231     +    run;
31232     +    data &impds;
31233     +       set &impds;
31234     +       drop _obs_;
31235     +    run;
31236     +    quit;
31237     +    %end;
31238     +%mend;
31240     +***************************************************************************
31241     +** MACROS FOR DISCOVERING INTERACTION OF INPUTS IN ARBORETUM MODELS
31242     +**
31243     +** AUTHOR:    saspgn
31244     +** REVISED:    1 MAY 2007
31245     +**
31246     +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
31247     +**                  Predictive Models via Rule Ensembles
31248     +**                  28 Feb 2005
31249     +***************************************************************************;
MPRINT(MAIN):   *************************************************************************** ** MACROS FOR DISCOVERING INTERACTION OF INPUTS IN ARBORETUM MODELS ** ** AUTHOR: saspgn ** REVISED: 1 MAY 2007 ** ** REFERENCE: Jerome H. Friedman and Bogdan E.
Popescu ** Predictive Models via Rule Ensembles ** 28 Feb 2005 ***************************************************************************;
31251     +%macro compute_iact_h(data=, model=, outds=);
31253     +/*** NOTE: this macro was modified to also calculation 1 way partial dependency values as well ****/
31255     +***************************************************************************
31256     +** MACRO:     COMPUTE_IACT_H
31257     +** PURPOSE:   ESTIMATE INTERACTION OF INPUT TO ANY OTHER INPUTS IN MODEL
31258     +** AUTHOR:    saspgn
31259     +** DATE:      30 APR 2007
31260     +**
31261     +** ARGUMENTS: DATA=  data with which to evaluate interaction.
31262     +**                   Typically training data.
31263     +**            MODEL= Model data set from SAVE MODEL= option
31264     +**                   of PROC ARBORETUM  (or SPLIT, FOREST, TREEBOOST)
31265     +**            OUTDS= output data set from this macro.
31266     +**                   Contains two variables:
31267     +**                   NAME   containing name of input variable
31268     +**                   H      containing the H statistic for interaction.
31269     +**
31270     +** DETAILS:   In Predictive Models via Rule Ensembles the authors
31271     +**            define statistic Hj that will be greater than 0 to
31272     +**            the extant that input variable j interacts with some
31273     +**            other variable (section 8.1, equation 45 ).
31274     +**            Macro COMPUTE_IACT_H computes Hj for all variables
31275     +**            used as a primary splitting rule in the model.
31276     +**            The computation of interactions is time consuming.
31277     +**            The user might therefore consult Hj before selecting
31278     +**            which interactions to compute.
31279     +**
31280     +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
31281     +**                  Predictive Models via Rule Ensembles
31282     +**                  28 Feb 2005
31283     +**                  http://www.stat-stanford.edu/~jhf
31284     +**************************************************************************;
31286     +    %do v=1 %to &ni;
31287     +        proc arbor proc=treeboost inmodel=&model;
31288     +            makemacro importantid=&v  var=var;
31289     +            partialdep data=&data out=vds(keep= p_: &var) var= (&var);
31290     +            partialdep data=&data out=eds(keep= p_:) exceptvar= (&var);
31291     +        quit;
31293     +        %let predvar=;
31294     +        %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='PREDICTED'))));
31295     +        %let varnum =%sysfunc(varnum(&dsid, VARIABLE));
31296     +        %do %while(^ %sysfunc(fetch(&dsid)));
31297     +           %let variable = %sysfunc(getvarc(&dsid, &varnum));
31298     +           %let predvar = &predvar &variable;
31299     +        %end;
31300     +        %let dsid = %sysfunc(close(&dsid));
31302     +        data fds;  set fds;  keep &predvar; run;
31303     +        data vds;  set vds;  keep &predvar; run;
31304     +        data eds;  set eds;  keep &predvar; run;
31307     +        %compute_iact_sub(ds1=fds, ds2=vds, ds3=eds, nc=&nclasses, outds=h);
31309     +        /* generates table same size as training data -- too large to plot; removing for now
31310     +        %generatePartialDependencyTable(iteration=&v, ds1=vds, var=&var); */
31312     +        data h;
31313     +             set h;
31314     +             length name $ 32;
31315     +             name = "&var";
31316     +        run;
31317     +        data &outds;
31318     +          set
31319     +              %if &v ne 1 %then %do;
31320     +                  &outds
31321     +              %end;
31322     +               h;
31323     +        run;
31325     +    %end;
31326     +%mend;
31328     +%macro compute_iact_sub(ds1=, ds2=, ds3=, nc=, outds=);
31330     +        %if &nc eq 0 %then %do;
31331     +             data ads; set &ds1; array r p_:; keep a; a = r(1); run;
31332     +             data bds; set &ds2; array r p_:; keep b; b = r(1); run;
31333     +             data cds; set &ds3; array r p_:; keep c; c = r(1); run;
31334     +             data mds; merge ads bds cds;         run;
31336     +             proc stdize data= mds method=mean out=sds;
31337     +                  var a b c;
31338     +             run;
31340     +             data &outds;
31341     +                 retain ss 0  sf 0;
31342     +                 set sds end=the_end;
31343     +                 keep H;
31345     +                 s = a - b - c;
31346     +                 ss = ss + s*s;
31347     +                 sf = sf + a * a;
31349     +                 if the_end ne 0 then do;
31350     +                    H = ss/sf;
31351     +                    output;
31352     +                 end;
31353     +             run;
31354     +        %end;
31356     +        %else %do;  * categorical response. nclasses > 0 ;
31357     +            data ads;
31358     +                 set &ds1;
31359     +                 array r{*} p_:;
31360     +                 keep a:;
31361     +                 %do j = 1 %to &nclasses;
31362     +                     a&j = r(&j);
31363     +                 %end;
31364     +              run;
31365     +              data bds;
31366     +                 set &ds2;
31367     +                 array r{*} p_:;
31368     +                 keep b:;
31369     +                 %do j = 1 %to &nclasses;
31370     +                     b&j = r(&j);
31371     +                 %end;
31372     +              run;
31373     +              data cds;
31374     +                 set &ds3;
31375     +                 array r{*} p_:;
31376     +                 keep c:;
31377     +                 %do j = 1 %to &nclasses;
31378     +                     c&j = r(&j);
31379     +                 %end;
31380     +              run;
31382     +              data mds;
31383     +                   merge ads bds cds;
31384     +              run;
31385     +              proc stdize data=mds method=mean out=sds;
31386     +                   var a: b: c:;
31387     +              run;
31389     +             data &outds;
31390     +                 retain ss 0  sf 0;
31391     +                 set sds end=the_end;
31392     +                 array ra a:;
31393     +                 array rb b:;
31394     +                 array rc c:;
31395     +                 keep H;
31397     +                 do j = 1 to dim(ra);
31398     +                    s = ra(j) - rb(j) - rc(j);
31399     +                    ss = ss + s*s;
31400     +                    sf = sf + ra(j) * ra(j);
31401     +                 end;
31403     +                 if the_end ne 0 then do;
31404     +                    H = ss/sf;
31405     +                    output;
31406     +                 end;
31407     +            run;
31408     +        %end;
31409     +%mend;
31411     +%macro score;
31413     +   /* retrieve target information */
31414     +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
31416     +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
31417     +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
31418     +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
31419     +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
31420     +   %do %while(^ %sysfunc(fetch(&dsid)));
31421     +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
31422     +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
31423     +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
31424     +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
31425     +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
31426     +   %end;
31427     +   %let dsid = %sysfunc(close(&dsid));
31429     +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
31430     +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
31431     +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
31432     +        %put &em_codebar;
31433     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
31434     +        %put &errormsg;
31435     +        %put &em_codebar;
31436     +        %goto doendm;
31437     +   %end;
31439     +   /* score based on selected subseries */
31440     +   %selectSubseries;
31442     +   /* detect variables that have interaction with other input variables in model;    */
31443     +   /* also used to calculate 1 way partial dependency statistics                     */
31444     +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
31445     +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
31446     +       %compute_iact_h(data=&EM_IMPORT_DATA, model=&EM_USER_MODEL, outds=iact);
31447     +     %end;
31448     +   %end;
31450     +   /* determine whether priors were used during modelling */
31451     +   %let usePriors = N;
31452     +   data _null_;
31453     +     set &EM_DEC_DECMETA(where=(_TYPE_='DECPRIOR'));
31454     +     call symput('usePriors', strip(USE));
31455     +   run;
31457     +   /* update scorecode with code to calculated unadjusted residual variables if priors were detected */
31458     +   %if &usePriors eq Y %then %do;
31459     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
31460     +      %include temp;
31461     +      filename temp;
31463     +      %EM_GETNAME(key=ADJUSTEDRESIDUALS, type=FILE, extension=sas);
31464     +      filename adjref "&EM_USER_ADJUSTEDRESIDUALS";
31465     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
31467     +      /* append adjusted residual code to already populated flowscorecode */
31468     +      filename temp catalog 'sashelp.emutil.em_copyfile.source';
31469     +      %include temp;
31470     +      filename temp;
31472     +      filename fref "&EM_FILE_EMFLOWSCORECODE";
31473     +      %em_copyfile(infref=adjref, outfref=fref, append=Y);
31474     +      filename adjref;
31475     +      filenmae fref;
31477     +   %end;
31479     +   /* set all Q variables created by proc arbor to have a role of ASSESS */
31480     +   %let numLevels = 0;
31481     +   data _null_;
31482     +     set &EM_DEC_DECMETA end=eof;
31483     +     where _TYPE_ ='RESIDUAL';
31484     +     call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
31485     +     if eof then
31486     +       call symput('numLevels', strip(put(_N_,BEST.)));
31487     +   run;
31489     +   %do i=1 %to &numLevels;
31490     +     %let qvar = &&res_vars&i;
31491     +     %let qvar = %substr(&qvar,2);
31492     +     %let qvar = Q&qvar;
31493     +     %em_metachange(name=&qvar, role=ASSESS);
31494     +   %end;
31496     +   /* merge H Statistic into the outimportance dataset */
31497     +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
31498     +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
31499     +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
31500     +       %merge_imp_h(iactds=iact, impds=&EM_USER_IMPORTANCE);
31501     +     %end;
31502     +   %end;
31504     +   /* add labels to importance table */
31505     +   data &EM_USER_IMPORTANCE;
31506     +     set &EM_USER_IMPORTANCE;
31507     +     label  NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
31508     +            LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
31509     +            NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
31510     +            IMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
31511     +            %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
31512     +              %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
31513     +                H = "%sysfunc(sasmsg(sashelp.dmine, rpt_h_vlabel, noquote))"
31514     +              %end;
31515     +            %end;
31516     +            %if &EM_IMPORT_VALIDATE ne %then %do;
31517     +              VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
31518     +              RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
31519     +            %end;
31520     +            %let nsurrs = ;
31521     +            %if &EM_PROPERTY_NSURRS ne %then %do;
31522     +              %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
31523     +              %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
31524     +              %if &nsurrs gt 0 %then %do;
31525     +                 NSURROGATES =  "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))";
31526     +              %end;
31527     +            %end;
31528     +            ;
31529     +   run;
31531     +   /* print outimportance dataset to output window */
31532     +   %let title10 = %sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title, NOQUOTE));
31533     +   %if &EM_PROPERTY_NSURRS gt 0 %then %do;
31534     +     title10 "&title10";
31536     +     %if &ni gt 0 %then %do;
31537     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)
31538     +       %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
31539     +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
31540     +         OR (H ne .)
31541     +         %end;
31542     +       %end;
31543     +       ));
31544     +     %end;
31545     +     %else %do;
31546     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)));
31547     +     %end;
31548     +     run;
31549     +     title10;
31550     +   %end;
31551     +   %else %do;
31552     +     title10 "&title10";
31553     +     %if &ni gt 0 %then %do;
31554     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)
31555     +      %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
31556     +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
31557     +           OR (H ne .)
31558     +         %end;
31559     +      %end;
31560     +      ));
31561     +     %end;
31562     +     %else %do;
31563     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)));
31564     +     %end;
31565     +     run;
31566     +     title10;
31567     +   %end;
31569     +   /* generate EM_USER_SUBFIT dataset to plot train and validation data across iterations*/
31570     +   %createSubFit;
31572     +   /* generate fit statistics for train, valid and test datasets */
31573     +   %createFitStatistics;
31575     +   /* refresh exports */
31576     +    /* variable selection based on importance values */
31577     +    %if &EM_PROPERTY_VARSELECTION eq Y %then %do;
31578     +      %let dsid = %sysfunc(open(&EM_USER_IMPORTANCE));
31579     +      %if &dsid %then %do;
31580     +        %let obs= %sysfunc(fetch(&dsid));
31581     +        %let imp_num = %sysfunc(VARNUM(&dsid, IMPORTANCE));
31582     +        %let var_num = %sysfunc(VARNUM(&dsid, NAME));
31583     +        %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
31585     +        %if ((&imp_num ne 0 ) AND (&var_num ne 0)) %then %do;
31586     +          %do %while(&obs=0);
31587     +             %let nobs = %eval(&nobs-1);
31588     +             %let imp_value = %sysfunc(getvarn(&dsid, &imp_num));
31589     +             %let varname = %upcase(%sysfunc(getvarc(&dsid, &var_num)));
31591     +             %if &imp_value lt 0.05 %then %do;
31592     +               %em_metachange(name=&varname, role=REJECTED);
31593     +             %end;
31594     +             %else %do;
31595     +               %em_metachange(name=&varname, role=INPUT);
31596     +             %end;
31597     +             %let obs= %sysfunc(fetch(&dsid));
31598     +          %end;
31599     +        %end;
31600     +      %end;
31601     +      %if &dsid %then %let dsid= %sysfunc(close(&dsid));
31602     +    %end;
31604     +   /* build reports dependent on subseries selection */
31605     +   %EM_REPORT(key=SUBFIT, viewtype=LINEPLOT, block=MODEL, view=1, X=_ITERATION_, Y=_ASE_, group=dataRole, autodisplay=Y, xref=&ntrees, DESCRIPTION=SUBFIT);
31606     +   %EM_REPORT(VIEW=1, Y=_NW_, xref=&ntrees);
31607     +   %EM_REPORT(VIEW=1, Y=_MISC_, xref=&ntrees);
31608     +   %EM_REPORT(VIEW=1, Y=_MAX_, xref=&ntrees);
31609     +   %EM_REPORT(VIEW=1, Y=_SSE_, xref=&ntrees);
31610     +   %EM_REPORT(VIEW=1, Y=_ASE_, xref=&ntrees);
31611     +   %EM_REPORT(VIEW=1, Y=_RASE_, xref=&ntrees);
31612     +   %EM_REPORT(VIEW=1, Y=_APROF_, xref=&ntrees);
31613     +   %EM_REPORT(VIEW=1, Y=_PROF_, xref=&ntrees);
31614     +   %EM_REPORT(VIEW=1, Y=_PASE_, xref=&ntrees);
31615     +   %EM_REPORT(VIEW=1, Y=_PMISC_, xref=&ntrees);
31617     +   /* build importance table including H statistics for display */
31618     +   %EM_REPORT(key=IMPORTANCE, viewtype=DATA, block=MODEL, DESCRIPTION=IMPORTANCE, AUTODISPLAY=Y);
31620     +   %doendm:
31621     +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SELECTSUBSERIES):  ;
MPRINT(SELECTSUBSERIES):  ;
MPRINT(SELECTSUBSERIES):   proc arbor proc=treeboost data=EMWS1.Repl_TRAIN inmodel=EMWS1.Boost_MODEL;
NOTE: 1590325 kilobytes of physical memory.
MPRINT(SELECTSUBSERIES):   subseries BEST ;
NOTE: Will use 10654 out of 10654 training cases.
NOTE: Using memory pool with 658616320 bytes.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
The SAS System
 
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Will not search for split on variable IN_HOUSE.
NOTE: Acceptable cases have the same value.
NOTE: Option MINCATSIZE=5 may apply.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 7500648 bytes of work memory.
NOTE: Current TREEBOOST model contains 50 trees.
MPRINT(SELECTSUBSERIES):   makemacro nimportant=ni nclasses=nclasses nitsase=nitsase nitsmisc=nitsmisc nitsprofit=nitsprofit ;
NOTE: Created macro variable NCLASSES equal to 2.
NOTE: Created macro variable NI equal to 21.
NOTE: Created macro variable NITSASE equal to 50.
NOTE: Created macro variable NITSMISC equal to 1.
NOTE: Created macro variable NITSPROFIT equal to 50.
MPRINT(SELECTSUBSERIES):   assess Validata=EMWS1.Repl_VALIDATE measure = PROFIT ;
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           1.14 seconds
      cpu time            1.14 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: Current TREEBOOST model contains 25 trees.
MPRINT(SELECTSUBSERIES):   code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas" res group=Boost ;
NOTE: External file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas opened.
MPRINT(SELECTSUBSERIES):   code file="C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMPUBLISHSCORE.sas" nores group=Boost ;
NOTE: External file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMPUBLISHSCORE.sas opened.
MPRINT(SELECTSUBSERIES):   save fit=SUBFIT importance=EMWS1.Boost_IMPORTANCE model=EMWS1.Boost_MODEL;
NOTE: The data set WORK.SUBFIT has 50 observations and 27 variables.
NOTE: The data set EMWS1.BOOST_IMPORTANCE has 47 observations and 6 variables.
NOTE: The data set EMWS1.BOOST_MODEL has 10905 observations and 4 variables.
MPRINT(SELECTSUBSERIES):   score data=EMWS1.Repl_TRAIN out=fds(keep= p_:) outfit=work.fit_train role=TRAIN;
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 14 variables.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.48 seconds
      cpu time            0.48 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK.FDS has 10654 observations and 2 variables.
MPRINT(SELECTSUBSERIES):   score data=EMWS1.Repl_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
NOTE: The data set WORK.FIT_VALID has 1 observations and 12 variables.
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
MPRINT(SELECTSUBSERIES):   run;
 
MPRINT(SELECTSUBSERIES):   quit;
 
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           12.97 seconds
      cpu time            12.85 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           12.97 seconds
      cpu time            12.85 seconds
 
 
MPRINT(SELECTSUBSERIES):   proc datasets lib=work nolist;
MPRINT(SELECTSUBSERIES):   delete _BoostDMDB / mt=cat;
MPRINT(SELECTSUBSERIES):   run;
 
NOTE: Deleting WORK._BOOSTDMDB (memtype=CATALOG).
MPRINT(SCORE):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Ids_TARGET_B_DM(where=(_TYPE_='DECPRIOR'));
MPRINT(SCORE):   call symput('usePriors', strip(USE));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_MAKEUNADJUSTEDRESIDUALVARS.SOURCE.
31622     +%macro makeUnadjustedResidualVars(target=, decmeta=, fref=);
31623     +    %local from_var target_level pred_level res_var res_label res_vars res_levels pred_var numLevels;
31624     +    %let from_var  =;
31625     +    %let res_var   =;
31626     +    %let res_label =;
31627     +    %let res_vars = ;
31628     +    %let res_levels =;
31629     +    %let pred_var  =;
31630     +    %let pred_level =;
31631     +    %let numLevels =;
31632     +    %let target_level =;
31633     +
31634     +    %if (&target eq ) or ^%sysfunc(exist(&decmeta)) or (&fref eq ) %then %goto doendm;
31635     +
31636     +    data _null_;
31637     +       set &decmeta end=eof;
31638     +       where _TYPE_ in('TARGET', 'FROM');
31639     +       if _TYPE_='TARGET' then
31640     +          call symput('target_level', strip(LEVEL));
31641     +       else
31642     +          call symput('from_var', strip(VARIABLE));
31643     +    run;
31644     +    %if &target_level = INTERVAL %then %do;
31645     +        data _null_;
31646     +           set &decmeta end=eof;
31647     +           where _TYPE_ in('PREDICTED', 'RESIDUAL');
31648     +           if _TYPE_ eq 'PREDICTED' then do;
31649     +               call symput('pred_var',   strip(Variable));
31650     +           end;
31651     +           else do;
31652     +              call symput('res_var',   strip(Variable));
31653     +              call symput('res_label', strip(tranwrd(LABEL,"'","''")));
31654     +           end;
31655     +        run;
31656     +    %end;
31657     +    %else %do;
31658     +        data _null_;
31659     +           set &decmeta;
31660     +           where _TYPE_ ='PREDICTED';
31661     +           call symput('pred_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
31662     +        run;
31663     +        data _null_;
31664     +           set &decmeta end=eof;
31665     +           where _TYPE_ ='RESIDUAL';
31666     +           call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
31667     +           call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
31668     +           call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
31669     +           if eof then
31670     +              call symput('numLevels', strip(put(_N_,BEST.)));
31671     +        run;
31672     +    %end;
31673     +
31674     +    data _null_;
31675     +        file &fref;
31676     +
31677     +    put "&EM_codebar;";
31678     +    put "*Computing Unadjusted Residual Vars: &Target;";
31679     +    put "&EM_codebar;";
31680     +
31681     +    %if &target_level eq INTERVAL %then %do;
31682     +        %if &res_label ne %then %do;
31683     +            put "Label &res_var = '&res_label';";
31684     +        %end;
31685     +         put "&res_var = &target - &pred_var;";
31686     +    %end;
31687     +    %else %do;
31688     +       %do i= 1 %to &numLevels;
31689     +           %let res_var =  &&res_vars&i;
31690     +           %let string = %nrbquote(Label &res_var='&&res_labels&i');
31691     +           put "&string;";
31692     +        %end;
31693     +
31694     +        put "if ";
31695     +
31696     +        %do i= 1 %to &numLevels;
31697     +            %let and = ;
31698     +            %if &i>1 %then
31699     +                %let and = and;
31700     +            %let string = %nrbquote(&and &from_var ne '&&res_levels&i');
31701     +                 put "&string";
31702     +        %end;
31703     +
31704     +        put " then do;";
31705     +
31706     +        %do i= 1 %to &numLevels;
31707     +            put "&&res_vars&i=.;";
31708     +        %end;
31709     +
31710     +        put "end;";
31711     +        put "else do;";
31712     +
31713     +        %do i= 1 %to &numLevels;
31714     +           %let qvar =  &&res_vars&i;
31715     +            %let qvar = %substr(&qvar, 2);
31716     +            %let qvar = Q&qvar;
31717     +            put "&&res_vars&i= - &qvar;";
31718     +        %end;
31719     +
31720     +         put "select(&from_var);";
31721     +
31722     +         %do i= 1 %to &numLevels;
31723     +            %let string = %nrbquote(when('&&res_levels&i')&&res_vars&i= &&res_vars&i+1);
31724     +            put "&string;";
31725     +        %end;
31726     +         put 'otherwise;';
31727     +         put 'end;';
31728     +         put 'end;';
31729     +    %end;
31730     +    run;
31731     +    %doendm:
31732     +%mend;
31733     +
31734     +
31735     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename adjref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\ADJUSTEDRESIDUALS.sas";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   file adjref;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*Computing Unadjusted Residual Vars: TARGET_B;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B1='Residual: TARGET_B=1';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B0='Residual: TARGET_B=0';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "if ";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " F_TARGET_B ne '1'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "and F_TARGET_B ne '0'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " then do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "end;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "else do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1= - Q_TARGET_B1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0= - Q_TARGET_B0;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "select(F_TARGET_B);";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('1')R_TARGET_B1= R_TARGET_B1+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('0')R_TARGET_B0= R_TARGET_B0+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'otherwise;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;
 
NOTE: The file ADJREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\ADJUSTEDRESIDUALS.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11Oct2015:14:31:45,
      Create Time=11Oct2015:14:31:45
 
NOTE: 21 records were written to the file ADJREF.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_copyfile.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_COPYFILE.SOURCE.
31736     +%macro em_copyfile(infref=, outfref=, append=N);
31737     +
31738     +   %if %sysfunc(fileref(&infref))=0 and %sysfunc(fileref(&outfref))<=0 %then %do;
31739     +
31740     +       %let omode =;
31741     +       %if &append=Y %then
31742     +           %let omode = MOD;
31743     +       data _null_;
31744     +          length line $20000;
31745     +          file &outfref &omode lrecl=20000;
31746     +          fid=fopen("&infref",'i',20000,'v');
31747     +          if fid > 0  then do;
31748     +             do while(^fread(fid));
31749     +                rlen = frlen(fid);
31750     +                rc= fget(fid,line,20000);
31751     +                start = length(line)-length(left(line))+1;
31752     +                line=strip(line);
31753     +                put @start line;
31754     +             end;
31755     +             if fid > 0  then rc=fclose(fid);
31756     +          end;
31757     +       run;
31758     +
31759     +   %end;
31760     +%mend em_copyfile;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename fref "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file fref MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("adjref",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file FREF is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=91665,
      Last Modified=11Oct2015:14:31:44,
      Create Time=11Oct2015:14:31:44
 
NOTE: 21 records were written to the file FREF.
      The minimum record length was 2.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename adjref;
NOTE: Fileref ADJREF has been deassigned.
NOTE: Line generated by the invoked macro "SCORE".
56                                                                                                                           filenmae fref;
                                                                                                                             ________
                                                                                                                             14
MPRINT(SCORE):   filenmae fref;
NOTE: Fileref FREF has been deassigned.
WARNING 14-169: Assuming the symbol FILENAME was misspelled as filenmae.
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(SCORE):   where _TYPE_ ='RESIDUAL';
MPRINT(SCORE):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(SCORE):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(SCORE):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):  ;
MPRINT(SCORE):   data EMWS1.Boost_IMPORTANCE;
MPRINT(SCORE):   set EMWS1.Boost_IMPORTANCE;
MPRINT(SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(SCORE):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.BOOST_IMPORTANCE.
NOTE: The data set EMWS1.BOOST_IMPORTANCE has 47 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):   title10 "Variable Importance";
MPRINT(SCORE):   proc print data=EMWS1.Boost_IMPORTANCE (where=((nrules>0) ));
MPRINT(SCORE):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.BOOST_IMPORTANCE.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   title10;
MPRINT(CREATESUBFIT):  ;
MPRINT(CREATESUBFIT):   data EMWS1.Boost_SUBFIT;
MPRINT(CREATESUBFIT):   length datarole $8;
MPRINT(CREATESUBFIT):   set SUBFIT;
MPRINT(CREATESUBFIT):   datarole = "TRAIN";
MPRINT(CREATESUBFIT):   label _MISC_ = "Misclassification Rate" _MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Square Error" _RASE_ = "Root Average Square Error" _APROF_ = "Average Profit" _PROF_ = "Total Computed Profit"
_PASE_ = "Average Square Error with Priors" _PMISC_ = "Misclassification Rate with Priors" _NLEAVES_ = "Number of Leaves" _ITERATION_= "Iteration" _NW_ = "Number of Leaves" datarole = "Data Role";
MPRINT(CREATESUBFIT):   keep _ITERATION_ _NW_ _MISC_ _MAX_ _SSE_ _ASE_ _RASE_ _NLEAVES_ datarole _APROF_ _PROF_ _PASE_ _PMISC_ ;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set EMWS1.BOOST_SUBFIT has 50 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(CREATESUBFIT):   data tempvalid;
MPRINT(CREATESUBFIT):   length datarole $8;
MPRINT(CREATESUBFIT):   set SUBFIT;
MPRINT(CREATESUBFIT):   rename _VMISC_ = _MISC_ _VMAX_ = _MAX_ _VSSE_ = _SSE_ _VASE_ = _ASE_ _VRASE_ = _RASE_ _VAPROF_ = _APROF_ _VPROF_ = _PROF_ _VPASE_ = _PASE_ _VPMISC_ = _PMISC_ ;
MPRINT(CREATESUBFIT):   datarole = "VALID";
MPRINT(CREATESUBFIT):   label _VMISC_ = "Misclassification Rate" _VMAX_ = "Maximum Absolute Error" _VSSE_ = "Sum of Square Errors" _VASE_ = "Average Square Error" _VRASE_ = "Root Average Square Error" _VAPROF_ = "Average Profit" _VPROF_ = "Total Computed
Profit" _VPASE_ = "Average Square Error with Priors" _VPMISC_ = "Misclassification Rate with Priors" _NLEAVES_ = "Number of Leaves" datarole = "Data Role";
MPRINT(CREATESUBFIT):   keep _ITERATION_ _NW_ _VMISC_ _VMAX_ _VSSE_ _VASE_ _VRASE_ _NLEAVES_ datarole _VAPROF_ _VPROF_ _VPASE_ _VPMISC_ ;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set WORK.TEMPVALID has 50 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CREATESUBFIT):   data EMWS1.Boost_SUBFIT;
MPRINT(CREATESUBFIT):   set EMWS1.Boost_SUBFIT tempvalid;
MPRINT(CREATESUBFIT):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.BOOST_SUBFIT.
NOTE: There were 50 observations read from the data set WORK.TEMPVALID.
NOTE: The data set EMWS1.BOOST_SUBFIT has 100 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CREATESUBFIT):   proc datasets library=work nolist;
MPRINT(CREATESUBFIT):   delete tempvalid;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Deleting WORK.TEMPVALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CREATESUBFIT):   proc datasets library=work nolist;
MPRINT(CREATESUBFIT):   delete subfit;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Deleting WORK.SUBFIT (memtype=DATA).
MPRINT(SCORE):  ;
MPRINT(CREATEFITSTATISTICS):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(CREATEFITSTATISTICS):   data EMWS1.Boost_EMOUTFIT;
MPRINT(CREATEFITSTATISTICS):   length target $32;
MPRINT(CREATEFITSTATISTICS):   merge work.fit_train work.fit_valid ;
MPRINT(CREATEFITSTATISTICS):   target =
MPRINT(CREATEFITSTATISTICS):   "TARGET_B";
MPRINT(CREATEFITSTATISTICS):   drop _NW_;
MPRINT(CREATEFITSTATISTICS):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: The data set EMWS1.BOOST_EMOUTFIT has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(CREATEFITSTATISTICS):   proc datasets library=work nolist;
MPRINT(CREATEFITSTATISTICS):   delete fit_valid;
MPRINT(CREATEFITSTATISTICS):   run;
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
MPRINT(SCORE):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CLUSTER_CODE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_RESPONSE_COUNT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FREQUENCY_STATUS_97NK");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FILE_AVG_GIFT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PEP_STAR");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FILE_CARD_GIFT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MEDIAN_HOME_VALUE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LAST_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_AVG_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_COUNT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENCY_STATUS_96NK");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("WEALTH_RATING");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_LAST_GIFT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CARD_PROM_12");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("INCOME_GROUP");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_OWNER_OCCUPIED");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_FIRST_GIFT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_AMOUNT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE4");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_CARD_PROM");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DONOR_AGE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_COUNT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MOR_HIT_RATE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE3");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_MIN_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_PROM");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("NUMBER_PROM_12");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_AVG_CARD_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_MAX_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_AVG_GIFT_AMT");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_RESPONSE_PROP");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_STAR_STATUS");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HOME_OWNER");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("IN_HOUSE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_RANGE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PUBLISHED_PHONE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_LAST_PROM_RESP");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_ORIGIN");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PER_CAPITA_INCOME");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MEDIAN_HOUSEHOLD_INCOME");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("OVERLAY_SOURCE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_PROP");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_SES");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_URBANICITY");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_DONOR_GENDER");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE2");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SUBFIT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LINEPLOT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "SUBFIT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "_ITERATION_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_ASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "dataRole";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 130 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_NW_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 130 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 260 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_MISC_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 260 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 390 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_MAX_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 390 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 520 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_SSE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 520 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 650 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_ASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 650 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 780 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_RASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 780 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 910 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_APROF_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 910 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1040 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PROF_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1040 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1170 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1170 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1300 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PMISC_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1300 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1430 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.40860473616449;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1430 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1559 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31761      *------------------------------------------------------------*;
31762      * End SCORE: Boost;
31763      *------------------------------------------------------------*;
31764
 
31765      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
31766      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
31767      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31768      filename x "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
31769      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
31770      file x;
MPRINT(EM_DIAGRAM):   file x;
31771      put 'if upcase(NAME) = "CARD_PROM_12" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CARD_PROM_12" then do;';
31772      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31773      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31774      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31775      put 'if upcase(NAME) = "CLUSTER_CODE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CLUSTER_CODE" then do;';
31776      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31777      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31778      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31779      put 'if upcase(NAME) = "DONOR_AGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DONOR_AGE" then do;';
31780      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31781      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31782      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31783      put 'if upcase(NAME) = "FILE_AVG_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FILE_AVG_GIFT" then do;';
31784      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31785      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31786      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31787      put 'if upcase(NAME) = "FILE_CARD_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FILE_CARD_GIFT" then do;';
31788      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31789      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31790      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31791      put 'if upcase(NAME) = "FREQUENCY_STATUS_97NK" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FREQUENCY_STATUS_97NK" then do;';
31792      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31793      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31794      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31795      put 'if upcase(NAME) = "HOME_OWNER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HOME_OWNER" then do;';
31796      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31797      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31798      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31799      put 'if upcase(NAME) = "INCOME_GROUP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "INCOME_GROUP" then do;';
31800      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31801      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31802      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31803      put 'if upcase(NAME) = "IN_HOUSE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "IN_HOUSE" then do;';
31804      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31805      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31806      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31807      put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
31808      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31809      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31810      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31811      put 'if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;';
31812      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31813      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31814      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31815      put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
31816      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31817      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31818      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31819      put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
31820      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31821      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31822      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31823      put 'if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;';
31824      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31825      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31826      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31827      put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
31828      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31829      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31830      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31831      put 'if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;';
31832      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31833      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31834      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31835      put 'if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;';
31836      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31837      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31838      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31839      put 'if upcase(NAME) = "LIFETIME_PROM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_PROM" then do;';
31840      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31841      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31842      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31843      put 'if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;';
31844      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31845      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31846      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31847      put 'if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;';
31848      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31849      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31850      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31851      put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
31852      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31853      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31854      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31855      put 'if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;';
31856      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31857      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31858      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31859      put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
31860      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31861      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31862      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31863      put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
31864      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31865      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31866      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31867      put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
31868      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31869      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31870      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31871      put 'if upcase(NAME) = "NUMBER_PROM_12" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "NUMBER_PROM_12" then do;';
31872      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31873      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31874      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31875      put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
31876      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31877      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31878      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31879      put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
31880      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31881      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31882      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31883      put 'if upcase(NAME) = "PCT_ATTRIBUTE2" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE2" then do;';
31884      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31885      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31886      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31887      put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
31888      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31889      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31890      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31891      put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
31892      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31893      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31894      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31895      put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
31896      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31897      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31898      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31899      put 'if upcase(NAME) = "PEP_STAR" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PEP_STAR" then do;';
31900      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31901      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31902      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31903      put 'if upcase(NAME) = "PER_CAPITA_INCOME" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PER_CAPITA_INCOME" then do;';
31904      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31905      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31906      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31907      put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
31908      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31909      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31910      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31911      put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
31912      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
31913      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31914      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31915      put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
31916      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
31917      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31918      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31919      put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
31920      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31921      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31922      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31923      put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
31924      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31925      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31926      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31927      put 'if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;';
31928      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31929      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31930      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31931      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
31932      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31933      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31934      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31935      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
31936      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31937      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31938      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31939      put 'if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;';
31940      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31941      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31942      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31943      put 'if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;';
31944      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31945      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31946      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31947      put 'if upcase(NAME) = "RECENT_STAR_STATUS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_STAR_STATUS" then do;';
31948      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31949      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31950      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31951      put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
31952      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31953      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31954      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31955      put 'if upcase(NAME) = "REP_SES" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_SES" then do;';
31956      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31957      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31958      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31959      put 'if upcase(NAME) = "REP_URBANICITY" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_URBANICITY" then do;';
31960      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
31961      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31962      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
31963      put 'if upcase(NAME) = "WEALTH_RATING" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "WEALTH_RATING" then do;';
31964      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
31965      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
31966      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file X is:
      Filename=C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11Oct2015:14:31:48,
      Create Time=08Oct2015:11:19:22
 
NOTE: 195 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
31967      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
31968      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31969      *------------------------------------------------------------*;
31970      * Boost: Scoring DATA data;
31971      *------------------------------------------------------------*;
31972      data EMWS1.Boost_TRAIN
31973      / view=EMWS1.Boost_TRAIN
31974      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_TRAIN / view=EMWS1.Boost_TRAIN ;
31975      set EMWS1.Repl_TRAIN
31976      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_TRAIN ;
31977      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas.
31978     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31979     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
31980     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
31981     +
31982     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
31983     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
31984     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
31985     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
31986     +
31987     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
31988     +LABEL P_TARGET_B1  = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
31989     +      P_TARGET_B1  = 0;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0;
31990     +LABEL P_TARGET_B0  = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
31991     +      P_TARGET_B0  = 0;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0;
31992     +LABEL Q_TARGET_B1  = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
31993     +      Q_TARGET_B1  = 0;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0;
31994     +LABEL Q_TARGET_B0  = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
31995     +      Q_TARGET_B0  = 0;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0;
31996     +LABEL R_TARGET_B1  = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B1 = 'Residual: TARGET_B=1' ;
31997     +LABEL R_TARGET_B0  = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B0 = 'Residual: TARGET_B=0' ;
31998     +LABEL F_TARGET_B  = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL F_TARGET_B = 'From: TARGET_B' ;
31999     +LABEL I_TARGET_B  = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL I_TARGET_B = 'Into: TARGET_B' ;
32000     +LABEL U_TARGET_B  = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
32001     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
32002     +
32003     +
32004     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
32005     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
32006     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
32007     +LENGTH _ARBFMT_2 $      2; DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
32008     +_ARBFMT_2 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
32009     +LENGTH _ARBFMT_5 $      5; DROP _ARBFMT_5;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_5 $ 5;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_5;
32010     +_ARBFMT_5 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = ' ';
32011     +
32012     +
32013     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
32014     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   DROP _ARB_F_;
MPRINT(EM_DIAGRAM):   DROP _ARB_BADF_;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 0.5491810036;
MPRINT(EM_DIAGRAM):   _ARB_BADF_ = 0;
32015     +
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
32016     + DROP _ARB_F_;
MPRINT(EM_DIAGRAM):   DROP _ARB_P_;
32017     + DROP _ARB_BADF_;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
32018     +     _ARB_F_ = 0.5491810036;
MPRINT(EM_DIAGRAM):   DROP _ARB_PPATH_;
MPRINT(EM_DIAGRAM):   _ARB_PPATH_ = 1;
32019     +     _ARB_BADF_ = 0;
32020     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ********** LEAF 1 NODE 306 ***************;
32021     + DROP _ARB_P_;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32022     + _ARB_P_ = 0;
32023     + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
32024     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32025     +********** LEAF     1  NODE   306 ***************;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32026     +IF _ARB_BADF_ EQ 0 THEN DO;
32027     +
32028     +   DROP _BRANCH_;
32029     +  _BRANCH_ = -1;
32030     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32031     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
32032     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
32033     +     _BRANCH_ =    1;
32034     +    END;
32035     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
32036     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32037     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32038     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32039     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32040     +  END;
32041     +  IF _BRANCH_ GT 0 THEN DO;
32042     +
32043     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32044     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32045     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' , '31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32046     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32047     +      '31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004132905;
32048     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32049     +      END;
MPRINT(EM_DIAGRAM):   END;
32050     +
MPRINT(EM_DIAGRAM):   END;
32051     +    IF _BRANCH_ GT 0 THEN DO;
32052     +       _ARB_F_ + -0.004132905;
MPRINT(EM_DIAGRAM):   ********** LEAF 2 NODE 307 ***************;
32053     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32054     +    END;
32055     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32056     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32057     +********** LEAF     2  NODE   307 ***************;
32058     +IF _ARB_BADF_ EQ 0 THEN DO;
32059     +
32060     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32061     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32062     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
32063     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
32064     +     _BRANCH_ =    1;
32065     +    END;
32066     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
32067     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32068     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32069     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32070     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32071     +  END;
32072     +  IF _BRANCH_ GT 0 THEN DO;
32073     +
32074     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32075     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32076     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'46' ,'45' ,'20' ,'16' ,'30' ,'07' , '34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' , '52' ,'10' )
THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32077     +      IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'46' ,'45' ,'20' ,'16' ,'30' ,'07' ,
MPRINT(EM_DIAGRAM):   END;
32078     +      '34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32079     +      '27' ,'26' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32080     +      '52' ,'10' ) THEN DO;
32081     +       _BRANCH_ =    2;
32082     +      END;
32083     +    IF _BRANCH_ LT 0 THEN DO;
32084     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32085     +      ELSE IF _ARBFMT_2 NOTIN (
32086     +        '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,'31' ,'35' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,'31' ,'35' , '40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'50' ,'43' , '46' ,'45' ,'20' ,'16' ,'30' ,'07' ,'34' ,'23' ,'09' ,'02' ,'41' , '15'
,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'21' ,'51' , '44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
32087     +        '40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   END;
32088     +        '46' ,'45' ,'20' ,'16' ,'30' ,'07' ,'34' ,'23' ,'09' ,'02' ,'41' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32089     +        '15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'21' ,'51' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.019567829;
32090     +        '44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
32091     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32092     +    END;
MPRINT(EM_DIAGRAM):   END;
32093     +    IF _BRANCH_ GT 0 THEN DO;
32094     +       _ARB_F_ + 0.019567829;
MPRINT(EM_DIAGRAM):   ********** LEAF 3 NODE 305 ***************;
32095     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32096     +    END;
32097     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32098     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32099     +********** LEAF     3  NODE   305 ***************;
32100     +IF _ARB_BADF_ EQ 0 THEN DO;
32101     +
32102     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32103     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32104     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32105     +    IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.024649371;
32106     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32107     +    END;
MPRINT(EM_DIAGRAM):   END;
32108     +
32109     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 4 NODE 311 ***************;
32110     +     _ARB_F_ + -0.024649371;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32111     +    END;
32112     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32113     +
32114     +********** LEAF     4  NODE   311 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.195 THEN DO;
32115     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32116     +
MPRINT(EM_DIAGRAM):   END;
32117     +  _BRANCH_ = -1;
32118     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32119     +    FILE_AVG_GIFT  <               10.195 THEN DO;
32120     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32121     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32122     +
32123     +  IF _BRANCH_ GT 0 THEN DO;
32124     +
32125     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32126     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32127     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' , '43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' , '44' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32128     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,
32129     +      '43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32130     +      '44' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000924504;
32131     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32132     +      END;
MPRINT(EM_DIAGRAM):   END;
32133     +
MPRINT(EM_DIAGRAM):   END;
32134     +    IF _BRANCH_ GT 0 THEN DO;
32135     +       _ARB_F_ + -0.000924504;
MPRINT(EM_DIAGRAM):   ********** LEAF 5 NODE 312 ***************;
32136     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32137     +    END;
32138     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32139     +
32140     +********** LEAF     5  NODE   312 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.195 THEN DO;
32141     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32142     +
MPRINT(EM_DIAGRAM):   END;
32143     +  _BRANCH_ = -1;
32144     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32145     +    FILE_AVG_GIFT  <               10.195 THEN DO;
32146     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32147     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32148     +
32149     +  IF _BRANCH_ GT 0 THEN DO;
32150     +
32151     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32152     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32153     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'38' ,'48' ,'35' ,'40' ,'28' ,'14' , '11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,'36' ,'24' ,'08' ,'12' , '27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32154     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'38' ,'48' ,'35' ,'40' ,'28' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32155     +      '11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,'36' ,'24' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32156     +      '27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
32157     +       _BRANCH_ =    2;
32158     +      END;
32159     +    IF _BRANCH_ LT 0 THEN DO;
32160     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32161     +      ELSE IF _ARBFMT_2 NOTIN (
32162     +        '.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,'43' ,'46' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,'43' ,'46' , '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,'44' , '29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'25' ,'38' ,'48' ,'35' , '40'
,'28' ,'14' ,'11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' , '36' ,'24' ,'08' ,'12' ,'27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN _BRANCH_ = 2;
32163     +        '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,'44' ,
MPRINT(EM_DIAGRAM):   END;
32164     +        '29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'25' ,'38' ,'48' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32165     +        '40' ,'28' ,'14' ,'11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.024904351;
32166     +        '36' ,'24' ,'08' ,'12' ,'27' ,'51' ,'05' ,'39' ,'22' ,'52'
MPRINT(EM_DIAGRAM):   END;
32167     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32168     +    END;
MPRINT(EM_DIAGRAM):   END;
32169     +    IF _BRANCH_ GT 0 THEN DO;
32170     +       _ARB_F_ + -0.024904351;
MPRINT(EM_DIAGRAM):   ********** LEAF 6 NODE 313 ***************;
32171     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32172     +    END;
32173     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32174     +
32175     +********** LEAF     6  NODE   313 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.195 <= FILE_AVG_GIFT THEN DO;
32176     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32177     +
MPRINT(EM_DIAGRAM):   END;
32178     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32179     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
32180     +                  10.195 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32181     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32182     +    END;
32183     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32184     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
32185     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 678.5 THEN DO;
32186     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32187     +
MPRINT(EM_DIAGRAM):   END;
32188     +    _BRANCH_ = -1;
32189     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32190     +      MEDIAN_HOME_VALUE  <                678.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0253072226;
32191     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32192     +      END;
MPRINT(EM_DIAGRAM):   END;
32193     +
MPRINT(EM_DIAGRAM):   END;
32194     +    IF _BRANCH_ GT 0 THEN DO;
32195     +       _ARB_F_ + 0.0253072226;
MPRINT(EM_DIAGRAM):   ********** LEAF 7 NODE 314 ***************;
32196     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32197     +    END;
32198     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32199     +
32200     +********** LEAF     7  NODE   314 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.195 <= FILE_AVG_GIFT THEN DO;
32201     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32202     +
MPRINT(EM_DIAGRAM):   END;
32203     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32204     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
32205     +                  10.195 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32206     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32207     +    END;
32208     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32209     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
32210     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 678.5 <= MEDIAN_HOME_VALUE THEN DO;
32211     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32212     +
MPRINT(EM_DIAGRAM):   END;
32213     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32214     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 2;
32215     +                     678.5 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32216     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32217     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034517842;
32218     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
32219     +       IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32220     +    END;
MPRINT(EM_DIAGRAM):   END;
32221     +    IF _BRANCH_ GT 0 THEN DO;
32222     +       _ARB_F_ + 0.0034517842;
MPRINT(EM_DIAGRAM):   ********** LEAF 8 NODE 318 ***************;
32223     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32224     +    END;
32225     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32226     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32227     +********** LEAF     8  NODE   318 ***************;
32228     +IF _ARB_BADF_ EQ 0 THEN DO;
32229     +
32230     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32231     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32232     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32233     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
32234     +     _BRANCH_ =    1;
32235     +    END;
32236     +  IF _BRANCH_ LT 0 THEN DO;
32237     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
32238     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32239     +      '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
32240     +      '13'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32241     +       ) THEN _BRANCH_ = 1;
32242     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 1.5 THEN DO;
32243     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32244     +
MPRINT(EM_DIAGRAM):   END;
32245     +    _BRANCH_ = -1;
32246     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32247     +      FILE_CARD_GIFT  <                  1.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0220779529;
32248     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32249     +      END;
MPRINT(EM_DIAGRAM):   END;
32250     +
MPRINT(EM_DIAGRAM):   END;
32251     +    IF _BRANCH_ GT 0 THEN DO;
32252     +       _ARB_F_ + 0.0220779529;
MPRINT(EM_DIAGRAM):   ********** LEAF 9 NODE 319 ***************;
32253     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32254     +    END;
32255     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32256     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32257     +********** LEAF     9  NODE   319 ***************;
32258     +IF _ARB_BADF_ EQ 0 THEN DO;
32259     +
32260     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32261     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32262     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32263     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
32264     +     _BRANCH_ =    1;
32265     +    END;
32266     +  IF _BRANCH_ LT 0 THEN DO;
32267     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
32268     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32269     +      '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
32270     +      '13'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32271     +       ) THEN _BRANCH_ = 1;
32272     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 1.5 <= FILE_CARD_GIFT THEN DO;
32273     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32274     +
MPRINT(EM_DIAGRAM):   END;
32275     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32276     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
32277     +                       1.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32278     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32279     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0011250563;
32280     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
32281     +       IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32282     +    END;
MPRINT(EM_DIAGRAM):   END;
32283     +    IF _BRANCH_ GT 0 THEN DO;
32284     +       _ARB_F_ + 0.0011250563;
MPRINT(EM_DIAGRAM):   ********** LEAF 10 NODE 317 ***************;
32285     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32286     +    END;
32287     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32288     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32289     +********** LEAF    10  NODE   317 ***************;
32290     +IF _ARB_BADF_ EQ 0 THEN DO;
32291     +
32292     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32293     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32294     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32295     +    IF _ARBFMT_12 IN ('9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.028358292;
32296     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32297     +    END;
MPRINT(EM_DIAGRAM):   END;
32298     +
32299     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 11 NODE 323 ***************;
32300     +     _ARB_F_ + -0.028358292;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32301     +    END;
32302     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32303     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32304     +********** LEAF    11  NODE   323 ***************;
32305     +IF _ARB_BADF_ EQ 0 THEN DO;
32306     +
32307     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32308     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32309     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32310     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
32311     +     _BRANCH_ =    1;
32312     +    END;
32313     +  IF _BRANCH_ LT 0 THEN DO;
32314     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
32315     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32316     +      '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
32317     +      '13'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32318     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
32319     +  END;
32320     +  IF _BRANCH_ GT 0 THEN DO;
32321     +
32322     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32323     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
32324     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32325     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005138931;
32326     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32327     +      END;
MPRINT(EM_DIAGRAM):   END;
32328     +
MPRINT(EM_DIAGRAM):   END;
32329     +    IF _BRANCH_ GT 0 THEN DO;
32330     +       _ARB_F_ + -0.005138931;
MPRINT(EM_DIAGRAM):   ********** LEAF 12 NODE 324 ***************;
32331     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32332     +    END;
32333     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32334     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32335     +********** LEAF    12  NODE   324 ***************;
32336     +IF _ARB_BADF_ EQ 0 THEN DO;
32337     +
32338     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32339     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32340     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32341     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
32342     +     _BRANCH_ =    1;
32343     +    END;
32344     +  IF _BRANCH_ LT 0 THEN DO;
32345     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
32346     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32347     +      '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
32348     +      '13'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32349     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
32350     +  END;
32351     +  IF _BRANCH_ GT 0 THEN DO;
32352     +
32353     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32354     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
32355     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
32356     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
32357     +       _BRANCH_ =    2;
32358     +      END;
32359     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
32360     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32361     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0153891406;
32362     +        '1' ,'0'
MPRINT(EM_DIAGRAM):   END;
32363     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32364     +    END;
MPRINT(EM_DIAGRAM):   END;
32365     +    IF _BRANCH_ GT 0 THEN DO;
32366     +       _ARB_F_ + 0.0153891406;
MPRINT(EM_DIAGRAM):   ********** LEAF 13 NODE 322 ***************;
32367     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32368     +    END;
32369     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32370     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32371     +********** LEAF    13  NODE   322 ***************;
32372     +IF _ARB_BADF_ EQ 0 THEN DO;
32373     +
32374     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32375     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32376     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32377     +    IF _ARBFMT_12 IN ('11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.026431605;
32378     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32379     +    END;
MPRINT(EM_DIAGRAM):   END;
32380     +
32381     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 14 NODE 328 ***************;
32382     +     _ARB_F_ + -0.026431605;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32383     +    END;
32384     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32385     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32386     +********** LEAF    14  NODE   328 ***************;
32387     +IF _ARB_BADF_ EQ 0 THEN DO;
32388     +
32389     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32390     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32391     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32392     +    IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
32393     +     _BRANCH_ =    1;
32394     +    END;
32395     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN _BRANCH_ = 1;
32396     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32397     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32398     +      '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32399     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32400     +  END;
32401     +  IF _BRANCH_ GT 0 THEN DO;
32402     +
32403     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32404     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32405     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' , '35' ,'40' ,'13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' , '26' ,'21' ,'51' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32406     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,
32407     +      '35' ,'40' ,'13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32408     +      '26' ,'21' ,'51' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0001994945;
32409     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32410     +      END;
MPRINT(EM_DIAGRAM):   END;
32411     +
MPRINT(EM_DIAGRAM):   END;
32412     +    IF _BRANCH_ GT 0 THEN DO;
32413     +       _ARB_F_ + 0.0001994945;
MPRINT(EM_DIAGRAM):   ********** LEAF 15 NODE 329 ***************;
32414     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32415     +    END;
32416     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32417     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32418     +********** LEAF    15  NODE   329 ***************;
32419     +IF _ARB_BADF_ EQ 0 THEN DO;
32420     +
32421     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32422     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32423     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
32424     +    IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
32425     +     _BRANCH_ =    1;
32426     +    END;
32427     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN _BRANCH_ = 1;
32428     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32429     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32430     +      '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32431     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32432     +  END;
32433     +  IF _BRANCH_ GT 0 THEN DO;
32434     +
32435     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32436     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32437     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('37' ,'14' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' , '16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,'24' ,'08' ,'27' ,'44' , '29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32438     +      IF _ARBFMT_2 IN ('37' ,'14' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32439     +      '16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,'24' ,'08' ,'27' ,'44' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32440     +      '29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
32441     +       _BRANCH_ =    2;
32442     +      END;
32443     +    IF _BRANCH_ LT 0 THEN DO;
32444     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32445     +      ELSE IF _ARBFMT_2 NOTIN (
32446     +        '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,'26' , '21' ,'51' ,'05' ,'22' ,'06' ,'37' ,'14' ,'17' ,'11' ,'49' ,'50' , '43'
,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' , '24' ,'08' ,'27' ,'44' ,'29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
32447     +        '13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,'26' ,
MPRINT(EM_DIAGRAM):   END;
32448     +        '21' ,'51' ,'05' ,'22' ,'06' ,'37' ,'14' ,'17' ,'11' ,'49' ,'50' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32449     +        '43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0242020752;
32450     +        '24' ,'08' ,'27' ,'44' ,'29' ,'39' ,'33' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
32451     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32452     +    END;
MPRINT(EM_DIAGRAM):   END;
32453     +    IF _BRANCH_ GT 0 THEN DO;
32454     +       _ARB_F_ + 0.0242020752;
MPRINT(EM_DIAGRAM):   ********** LEAF 16 NODE 330 ***************;
32455     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32456     +    END;
32457     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32458     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32459     +********** LEAF    16  NODE   330 ***************;
32460     +IF _ARB_BADF_ EQ 0 THEN DO;
32461     +
32462     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32463     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32464     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32465     +    IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
32466     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32467     +    END;
32468     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND MONTHS_SINCE_LAST_GIFT < 16.5 THEN DO;
32469     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32470     +
MPRINT(EM_DIAGRAM):   END;
32471     +    _BRANCH_ = -1;
32472     +      IF  NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32473     +      MONTHS_SINCE_LAST_GIFT  <                 16.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.026813126;
32474     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32475     +      END;
MPRINT(EM_DIAGRAM):   END;
32476     +
MPRINT(EM_DIAGRAM):   END;
32477     +    IF _BRANCH_ GT 0 THEN DO;
32478     +       _ARB_F_ + -0.026813126;
MPRINT(EM_DIAGRAM):   ********** LEAF 17 NODE 331 ***************;
32479     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32480     +    END;
32481     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32482     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32483     +********** LEAF    17  NODE   331 ***************;
32484     +IF _ARB_BADF_ EQ 0 THEN DO;
32485     +
32486     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32487     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
32488     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32489     +    IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
32490     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32491     +    END;
32492     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND 16.5 <= MONTHS_SINCE_LAST_GIFT THEN DO;
32493     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32494     +
MPRINT(EM_DIAGRAM):   END;
32495     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32496     +      IF  NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( MONTHS_SINCE_LAST_GIFT ) THEN _BRANCH_ = 2;
32497     +                      16.5 <= MONTHS_SINCE_LAST_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32498     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32499     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004459446;
32500     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
32501     +       IF MISSING( MONTHS_SINCE_LAST_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32502     +    END;
MPRINT(EM_DIAGRAM):   END;
32503     +    IF _BRANCH_ GT 0 THEN DO;
32504     +       _ARB_F_ + -0.004459446;
MPRINT(EM_DIAGRAM):   ********** LEAF 18 NODE 335 ***************;
32505     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32506     +    END;
32507     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32508     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32509     +********** LEAF    18  NODE   335 ***************;
32510     +IF _ARB_BADF_ EQ 0 THEN DO;
32511     +
32512     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32513     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32514     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32515     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
32516     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32517     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32518     +
32519     +  IF _BRANCH_ GT 0 THEN DO;
32520     +
32521     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32522     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32523     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' , '45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' , '27' ,'51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32524     +      IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32525     +      '45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
32526     +      '27' ,'51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
32527     +       _BRANCH_ =    1;
32528     +      END;
32529     +    IF _BRANCH_ LT 0 THEN DO;
32530     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
32531     +      ELSE IF _ARBFMT_2 NOTIN (
32532     +        '.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,'45' ,'20' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,'45' ,'20' , '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,'27' , '51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'42' ,'25' ,'01' , '37'
,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'49' ,'50' ,'46' ,'07' , '15' ,'18' ,'08' ,'12' ,'26' ,'21' ,'29' ,'05' ,'39' ,'22' ) THEN _BRANCH_ = 1;
32533     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,'27' ,
MPRINT(EM_DIAGRAM):   END;
32534     +        '51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'42' ,'25' ,'01' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32535     +        '37' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'49' ,'50' ,'46' ,'07' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0223101739;
32536     +        '15' ,'18' ,'08' ,'12' ,'26' ,'21' ,'29' ,'05' ,'39' ,'22'
MPRINT(EM_DIAGRAM):   END;
32537     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32538     +    END;
MPRINT(EM_DIAGRAM):   END;
32539     +    IF _BRANCH_ GT 0 THEN DO;
32540     +       _ARB_F_ + 0.0223101739;
MPRINT(EM_DIAGRAM):   ********** LEAF 19 NODE 336 ***************;
32541     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32542     +    END;
32543     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32544     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32545     +********** LEAF    19  NODE   336 ***************;
32546     +IF _ARB_BADF_ EQ 0 THEN DO;
32547     +
32548     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32549     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32550     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32551     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
32552     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32553     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32554     +
32555     +  IF _BRANCH_ GT 0 THEN DO;
32556     +
32557     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32558     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32559     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'31' ,'40' ,'13' , '28' ,'14' ,'49' ,'50' ,'46' ,'07' ,'15' ,'18' ,'08' ,'12' ,'26' ,'21' , '29' ,'05' ,'39' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32560     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'31' ,'40' ,'13' ,
32561     +      '28' ,'14' ,'49' ,'50' ,'46' ,'07' ,'15' ,'18' ,'08' ,'12' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32562     +      '29' ,'05' ,'39' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001097654;
32563     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32564     +      END;
MPRINT(EM_DIAGRAM):   END;
32565     +
MPRINT(EM_DIAGRAM):   END;
32566     +    IF _BRANCH_ GT 0 THEN DO;
32567     +       _ARB_F_ + -0.001097654;
MPRINT(EM_DIAGRAM):   ********** LEAF 20 NODE 337 ***************;
32568     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32569     +    END;
32570     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32571     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32572     +********** LEAF    20  NODE   337 ***************;
32573     +IF _ARB_BADF_ EQ 0 THEN DO;
32574     +
32575     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32576     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32577     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
32578     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
32579     +     _BRANCH_ =    2;
32580     +    END;
32581     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
32582     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32583     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32584     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32585     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32586     +  END;
32587     +  IF _BRANCH_ GT 0 THEN DO;
32588     +
32589     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32590     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32591     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' , '11' ,'03' ,'43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' , '39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32592     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,
32593     +      '11' ,'03' ,'43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32594     +      '39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.023508015;
32595     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32596     +      END;
MPRINT(EM_DIAGRAM):   END;
32597     +
MPRINT(EM_DIAGRAM):   END;
32598     +    IF _BRANCH_ GT 0 THEN DO;
32599     +       _ARB_F_ + -0.023508015;
MPRINT(EM_DIAGRAM):   ********** LEAF 21 NODE 338 ***************;
32600     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32601     +    END;
32602     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32603     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32604     +********** LEAF    21  NODE   338 ***************;
32605     +IF _ARB_BADF_ EQ 0 THEN DO;
32606     +
32607     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32608     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32609     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
32610     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
32611     +     _BRANCH_ =    2;
32612     +    END;
32613     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
32614     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32615     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32616     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32617     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32618     +  END;
32619     +  IF _BRANCH_ GT 0 THEN DO;
32620     +
32621     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32622     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32623     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' , '50' ,'46' ,'45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32624     +      IF _ARBFMT_2 IN ('42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,
MPRINT(EM_DIAGRAM):   END;
32625     +      '50' ,'46' ,'45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32626     +      '21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32627     +        DO;
32628     +       _BRANCH_ =    2;
32629     +      END;
32630     +    IF _BRANCH_ LT 0 THEN DO;
32631     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32632     +      ELSE IF _ARBFMT_2 NOTIN (
32633     +        '.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' , '43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,'39' , '42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,'50' ,'46' , '45'
,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
32634     +        '43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,'39' ,
MPRINT(EM_DIAGRAM):   END;
32635     +        '42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,'50' ,'46' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32636     +        '45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0026901648;
32637     +        '51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
32638     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32639     +    END;
MPRINT(EM_DIAGRAM):   END;
32640     +    IF _BRANCH_ GT 0 THEN DO;
32641     +       _ARB_F_ + 0.0026901648;
MPRINT(EM_DIAGRAM):   ********** LEAF 22 NODE 342 ***************;
32642     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32643     +    END;
32644     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32645     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32646     +********** LEAF    22  NODE   342 ***************;
32647     +IF _ARB_BADF_ EQ 0 THEN DO;
32648     +
32649     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32650     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32651     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32652     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
32653     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32654     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32655     +
32656     +  IF _BRANCH_ GT 0 THEN DO;
32657     +
32658     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32659     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32660     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' , '45' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' , '39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32661     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,
32662     +      '45' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32663     +      '39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0233229454;
32664     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32665     +      END;
MPRINT(EM_DIAGRAM):   END;
32666     +
MPRINT(EM_DIAGRAM):   END;
32667     +    IF _BRANCH_ GT 0 THEN DO;
32668     +       _ARB_F_ + 0.0233229454;
MPRINT(EM_DIAGRAM):   ********** LEAF 23 NODE 343 ***************;
32669     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32670     +    END;
32671     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32672     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32673     +********** LEAF    23  NODE   343 ***************;
32674     +IF _ARB_BADF_ EQ 0 THEN DO;
32675     +
32676     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32677     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32678     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32679     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
32680     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32681     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32682     +
32683     +  IF _BRANCH_ GT 0 THEN DO;
32684     +
32685     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32686     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32687     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' , '28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'15' ,'18' ,'24' ,'08' , '12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32688     +      IF _ARBFMT_2 IN ('42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32689     +      '28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'15' ,'18' ,'24' ,'08' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32690     +      '12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN DO;
32691     +       _BRANCH_ =    2;
32692     +      END;
32693     +    IF _BRANCH_ LT 0 THEN DO;
32694     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32695     +      ELSE IF _ARBFMT_2 NOTIN (
32696     +        '.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,'45' ,'30' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,'45' ,'30' , '34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,'39' , '33' ,'06' ,'32' ,'52' ,'10' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' , '35'
,'40' ,'13' ,'28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' , '15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN _BRANCH_ = 2;
32697     +        '34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,'39' ,
MPRINT(EM_DIAGRAM):   END;
32698     +        '33' ,'06' ,'32' ,'52' ,'10' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32699     +        '35' ,'40' ,'13' ,'28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001726972;
32700     +        '15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'44' ,'22'
MPRINT(EM_DIAGRAM):   END;
32701     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32702     +    END;
MPRINT(EM_DIAGRAM):   END;
32703     +    IF _BRANCH_ GT 0 THEN DO;
32704     +       _ARB_F_ + -0.001726972;
MPRINT(EM_DIAGRAM):   ********** LEAF 24 NODE 344 ***************;
32705     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32706     +    END;
32707     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32708     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
The SAS System
 
32709     +********** LEAF    24  NODE   344 ***************;
32710     +IF _ARB_BADF_ EQ 0 THEN DO;
32711     +
32712     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32713     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32714     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
32715     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
32716     +     _BRANCH_ =    2;
32717     +    END;
32718     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
32719     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32720     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32721     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32722     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32723     +  END;
32724     +  IF _BRANCH_ GT 0 THEN DO;
32725     +
32726     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32727     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32728     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' , '11' ,'03' ,'43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' , '27' ,'26' ,'51' ,'29' ,'05' ,'39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32729     +      IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32730     +      '11' ,'03' ,'43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
32731     +      '27' ,'26' ,'51' ,'29' ,'05' ,'39' ) THEN DO;
32732     +       _BRANCH_ =    1;
32733     +      END;
32734     +    IF _BRANCH_ LT 0 THEN DO;
32735     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
32736     +      ELSE IF _ARBFMT_2 NOTIN (
32737     +        '.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' , '43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,'27' , '26' ,'51' ,'29' ,'05' ,'39' ,'04' ,'42' ,'25' ,'01' ,'37' ,'48' , '17'
,'47' ,'49' ,'50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' , '12' ,'19' ,'21' ,'44' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 1;
32738     +        '43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,'27' ,
MPRINT(EM_DIAGRAM):   END;
32739     +        '26' ,'51' ,'29' ,'05' ,'39' ,'04' ,'42' ,'25' ,'01' ,'37' ,'48' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32740     +        '17' ,'47' ,'49' ,'50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.016584144;
32741     +        '12' ,'19' ,'21' ,'44' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
32742     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32743     +    END;
MPRINT(EM_DIAGRAM):   END;
32744     +    IF _BRANCH_ GT 0 THEN DO;
32745     +       _ARB_F_ + -0.016584144;
MPRINT(EM_DIAGRAM):   ********** LEAF 25 NODE 345 ***************;
32746     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32747     +    END;
32748     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32749     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32750     +********** LEAF    25  NODE   345 ***************;
32751     +IF _ARB_BADF_ EQ 0 THEN DO;
32752     +
32753     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32754     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32755     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
32756     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
32757     +     _BRANCH_ =    2;
32758     +    END;
32759     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
32760     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32761     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32762     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32763     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32764     +  END;
32765     +  IF _BRANCH_ GT 0 THEN DO;
32766     +
32767     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32768     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32769     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'17' ,'47' ,'49' , '50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,'12' ,'19' ,'21' ,'44' , '33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32770     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'17' ,'47' ,'49' ,
32771     +      '50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,'12' ,'19' ,'21' ,'44' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32772     +      '33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0055738909;
32773     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32774     +      END;
MPRINT(EM_DIAGRAM):   END;
32775     +
MPRINT(EM_DIAGRAM):   END;
32776     +    IF _BRANCH_ GT 0 THEN DO;
32777     +       _ARB_F_ + 0.0055738909;
MPRINT(EM_DIAGRAM):   ********** LEAF 26 NODE 349 ***************;
32778     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32779     +    END;
32780     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32781     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32782     +********** LEAF    26  NODE   349 ***************;
32783     +IF _ARB_BADF_ EQ 0 THEN DO;
32784     +
32785     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32786     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32787     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
32788     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
32789     +     _BRANCH_ =    1;
32790     +    END;
32791     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
32792     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32793     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32794     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32795     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32796     +  END;
32797     +  IF _BRANCH_ GT 0 THEN DO;
32798     +
32799     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32800     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32801     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' , '19' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32802     +      IF _ARBFMT_2 IN ('.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,
32803     +      '13' ,'28' ,'14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32804     +      '19' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003266764;
32805     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32806     +      END;
MPRINT(EM_DIAGRAM):   END;
32807     +
MPRINT(EM_DIAGRAM):   END;
32808     +    IF _BRANCH_ GT 0 THEN DO;
32809     +       _ARB_F_ + -0.003266764;
MPRINT(EM_DIAGRAM):   ********** LEAF 27 NODE 350 ***************;
32810     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32811     +    END;
32812     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32813     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32814     +********** LEAF    27  NODE   350 ***************;
32815     +IF _ARB_BADF_ EQ 0 THEN DO;
32816     +
32817     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32818     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32819     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
32820     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
32821     +     _BRANCH_ =    1;
32822     +    END;
32823     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
32824     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32825     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32826     +      '1' ,'2' ,'3' ,'4'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32827     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32828     +  END;
32829     +  IF _BRANCH_ GT 0 THEN DO;
32830     +
32831     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32832     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32833     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' , '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32834     +      IF _ARBFMT_2 IN ('53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32835     +      '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32836     +      '51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN DO;
32837     +       _BRANCH_ =    2;
32838     +      END;
32839     +    IF _BRANCH_ LT 0 THEN DO;
32840     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32841     +      ELSE IF _ARBFMT_2 NOTIN (
32842     +        '.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' , '14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,'19' , '32' ,'52' ,'53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' , '20'
,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 2;
32843     +        '14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,'19' ,
MPRINT(EM_DIAGRAM):   END;
32844     +        '32' ,'52' ,'53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32845     +        '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0163449098;
32846     +        '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10'
MPRINT(EM_DIAGRAM):   END;
32847     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32848     +    END;
MPRINT(EM_DIAGRAM):   END;
32849     +    IF _BRANCH_ GT 0 THEN DO;
32850     +       _ARB_F_ + 0.0163449098;
MPRINT(EM_DIAGRAM):   ********** LEAF 28 NODE 348 ***************;
32851     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32852     +    END;
32853     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32854     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32855     +********** LEAF    28  NODE   348 ***************;
32856     +IF _ARB_BADF_ EQ 0 THEN DO;
32857     +
32858     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
32859     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
32860     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32861     +    IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013155494;
32862     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
32863     +    END;
MPRINT(EM_DIAGRAM):   END;
32864     +
32865     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 29 NODE 354 ***************;
32866     +     _ARB_F_ + -0.013155494;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32867     +    END;
32868     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32869     +
32870     +********** LEAF    29  NODE   354 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
32871     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32872     +
MPRINT(EM_DIAGRAM):   END;
32873     +  _BRANCH_ = -1;
32874     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32875     +    FILE_CARD_GIFT  <                  3.5 THEN DO;
32876     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32877     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32878     +
32879     +  IF _BRANCH_ GT 0 THEN DO;
32880     +
32881     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32882     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32883     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' , '45' ,'16' ,'30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' , '05' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32884     +      IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,
32885     +      '45' ,'16' ,'30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32886     +      '05' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.02222169;
32887     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32888     +      END;
MPRINT(EM_DIAGRAM):   END;
32889     +
MPRINT(EM_DIAGRAM):   END;
32890     +    IF _BRANCH_ GT 0 THEN DO;
32891     +       _ARB_F_ + 0.02222169;
MPRINT(EM_DIAGRAM):   ********** LEAF 30 NODE 355 ***************;
32892     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32893     +    END;
32894     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32895     +
32896     +********** LEAF    30  NODE   355 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
32897     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
32898     +
MPRINT(EM_DIAGRAM):   END;
32899     +  _BRANCH_ = -1;
32900     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32901     +    FILE_CARD_GIFT  <                  3.5 THEN DO;
32902     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32903     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32904     +
32905     +  IF _BRANCH_ GT 0 THEN DO;
32906     +
32907     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32908     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32909     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,'28' ,'14' , '17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,'15' ,'24' ,'12' , '27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32910     +      IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,'28' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32911     +      '17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,'15' ,'24' ,'12' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32912     +      '27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN DO;
32913     +       _BRANCH_ =    2;
32914     +      END;
32915     +    IF _BRANCH_ LT 0 THEN DO;
32916     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32917     +      ELSE IF _ARBFMT_2 NOTIN (
32918     +        '.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,'45' ,'16' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,'45' ,'16' , '30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,'05' , '33' ,'32' ,'52' ,'10' ,'53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' , '28'
,'14' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' , '15' ,'24' ,'12' ,'27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN _BRANCH_ = 2;
32919     +        '30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,'05' ,
MPRINT(EM_DIAGRAM):   END;
32920     +        '33' ,'32' ,'52' ,'10' ,'53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32921     +        '28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.00106465;
32922     +        '15' ,'24' ,'12' ,'27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06'
MPRINT(EM_DIAGRAM):   END;
32923     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32924     +    END;
MPRINT(EM_DIAGRAM):   END;
32925     +    IF _BRANCH_ GT 0 THEN DO;
32926     +       _ARB_F_ + -0.00106465;
MPRINT(EM_DIAGRAM):   ********** LEAF 31 NODE 356 ***************;
32927     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32928     +    END;
32929     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32930     +
32931     +********** LEAF    31  NODE   356 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
32932     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32933     +
MPRINT(EM_DIAGRAM):   END;
32934     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32935     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
32936     +                     3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32937     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32938     +    END;
32939     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32940     +     IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32941     +  END;
32942     +  IF _BRANCH_ GT 0 THEN DO;
32943     +
32944     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32945     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32946     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' , '12' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
32947     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,
32948     +      '13' ,'28' ,'03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32949     +      '12' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.017950888;
32950     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
32951     +      END;
MPRINT(EM_DIAGRAM):   END;
32952     +
MPRINT(EM_DIAGRAM):   END;
32953     +    IF _BRANCH_ GT 0 THEN DO;
32954     +       _ARB_F_ + -0.017950888;
MPRINT(EM_DIAGRAM):   ********** LEAF 32 NODE 357 ***************;
32955     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32956     +    END;
32957     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32958     +
32959     +********** LEAF    32  NODE   357 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
32960     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
32961     +
MPRINT(EM_DIAGRAM):   END;
32962     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32963     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
32964     +                     3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
32965     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32966     +    END;
32967     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32968     +     IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32969     +  END;
32970     +  IF _BRANCH_ GT 0 THEN DO;
32971     +
32972     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
32973     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
32974     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32975     +      IF _ARBFMT_2 IN ('25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
32976     +      '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
32977     +      '51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
32978     +       _BRANCH_ =    2;
32979     +      END;
32980     +    IF _BRANCH_ LT 0 THEN DO;
32981     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
32982     +      ELSE IF _ARBFMT_2 NOTIN (
32983     +        '.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' , '03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,'12' , '33' ,'06' ,'25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' , '46'
,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
32984     +        '03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,'12' ,
MPRINT(EM_DIAGRAM):   END;
32985     +        '33' ,'06' ,'25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
32986     +        '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0033652918;
32987     +        '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
32988     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
32989     +    END;
MPRINT(EM_DIAGRAM):   END;
32990     +    IF _BRANCH_ GT 0 THEN DO;
32991     +       _ARB_F_ + 0.0033652918;
MPRINT(EM_DIAGRAM):   ********** LEAF 33 NODE 361 ***************;
32992     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
32993     +    END;
32994     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
32995     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
32996     +********** LEAF    33  NODE   361 ***************;
32997     +IF _ARB_BADF_ EQ 0 THEN DO;
32998     +
32999     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33000     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33001     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 1;
33002     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
33003     +     _BRANCH_ =    1;
33004     +    END;
33005     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 1;
33006     +     IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33007     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33008     +      '1' ,'0'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33009     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33010     +  END;
33011     +  IF _BRANCH_ GT 0 THEN DO;
33012     +
33013     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33014     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33015     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' , '40' ,'13' ,'28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' , '36' ,'12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33016     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33017     +      '40' ,'13' ,'28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33018     +      '36' ,'12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ) THEN DO;
33019     +       _BRANCH_ =    1;
33020     +      END;
33021     +    IF _BRANCH_ LT 0 THEN DO;
33022     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33023     +      ELSE IF _ARBFMT_2 NOTIN (
33024     +        '.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' , '28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,'36' , '12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ,'42' ,'01' ,'17' ,'47' , '03'
,'50' ,'43' ,'46' ,'45' ,'20' ,'07' ,'23' ,'41' ,'18' ,'24' , '08' ,'19' ,'26' ,'21' ,'44' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 1;
33025     +        '28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,'36' ,
MPRINT(EM_DIAGRAM):   END;
33026     +        '12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ,'42' ,'01' ,'17' ,'47' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33027     +        '03' ,'50' ,'43' ,'46' ,'45' ,'20' ,'07' ,'23' ,'41' ,'18' ,'24' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.0178167;
33028     +        '08' ,'19' ,'26' ,'21' ,'44' ,'39' ,'33' ,'22' ,'06' ,'10'
MPRINT(EM_DIAGRAM):   END;
33029     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33030     +    END;
MPRINT(EM_DIAGRAM):   END;
33031     +    IF _BRANCH_ GT 0 THEN DO;
33032     +       _ARB_F_ + -0.0178167;
MPRINT(EM_DIAGRAM):   ********** LEAF 34 NODE 362 ***************;
33033     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33034     +    END;
33035     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33036     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33037     +********** LEAF    34  NODE   362 ***************;
33038     +IF _ARB_BADF_ EQ 0 THEN DO;
33039     +
33040     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33041     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33042     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 1;
33043     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
33044     +     _BRANCH_ =    1;
33045     +    END;
33046     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 1;
33047     +     IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33048     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33049     +      '1' ,'0'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33050     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33051     +  END;
33052     +  IF _BRANCH_ GT 0 THEN DO;
33053     +
33054     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33055     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33056     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'01' ,'17' ,'47' ,'03' ,'50' ,'43' ,'46' ,'45' , '20' ,'07' ,'23' ,'41' ,'18' ,'24' ,'08' ,'19' ,'26' ,'21' ,'44' ,'39' , '33' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33057     +      IF _ARBFMT_2 IN ('42' ,'01' ,'17' ,'47' ,'03' ,'50' ,'43' ,'46' ,'45' ,
33058     +      '20' ,'07' ,'23' ,'41' ,'18' ,'24' ,'08' ,'19' ,'26' ,'21' ,'44' ,'39' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33059     +      '33' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0047639306;
33060     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33061     +      END;
MPRINT(EM_DIAGRAM):   END;
33062     +
MPRINT(EM_DIAGRAM):   END;
33063     +    IF _BRANCH_ GT 0 THEN DO;
33064     +       _ARB_F_ + 0.0047639306;
MPRINT(EM_DIAGRAM):   ********** LEAF 35 NODE 363 ***************;
33065     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33066     +    END;
33067     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33068     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33069     +********** LEAF    35  NODE   363 ***************;
33070     +IF _ARB_BADF_ EQ 0 THEN DO;
33071     +
33072     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33073     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33074     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33075     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
33076     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33077     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33078     +
33079     +  IF _BRANCH_ GT 0 THEN DO;
33080     +
33081     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33082     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33083     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' , '13' ,'28' ,'17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' , '21' ,'44' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33084     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,
33085     +      '13' ,'28' ,'17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33086     +      '21' ,'44' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003534761;
33087     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33088     +      END;
MPRINT(EM_DIAGRAM):   END;
33089     +
MPRINT(EM_DIAGRAM):   END;
33090     +    IF _BRANCH_ GT 0 THEN DO;
33091     +       _ARB_F_ + -0.003534761;
MPRINT(EM_DIAGRAM):   ********** LEAF 36 NODE 364 ***************;
33092     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33093     +    END;
33094     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33095     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33096     +********** LEAF    36  NODE   364 ***************;
33097     +IF _ARB_BADF_ EQ 0 THEN DO;
33098     +
33099     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33100     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33101     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33102     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
33103     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33104     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33105     +
33106     +  IF _BRANCH_ GT 0 THEN DO;
33107     +
33108     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33109     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33110     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,'16' , '30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,'27' ,'26' , '51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33111     +      IF _ARBFMT_2 IN ('42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,'16' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33112     +      '30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33113     +      '51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
33114     +       _BRANCH_ =    2;
33115     +      END;
33116     +    IF _BRANCH_ LT 0 THEN DO;
33117     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33118     +      ELSE IF _ARBFMT_2 NOTIN (
33119     +        '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,'21' , '44' ,'33' ,'06' ,'42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' , '16'
,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' , '27' ,'26' ,'51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
33120     +        '17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,'21' ,
MPRINT(EM_DIAGRAM):   END;
33121     +        '44' ,'33' ,'06' ,'42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33122     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.021702235;
33123     +        '27' ,'26' ,'51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
33124     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33125     +    END;
MPRINT(EM_DIAGRAM):   END;
33126     +    IF _BRANCH_ GT 0 THEN DO;
33127     +       _ARB_F_ + 0.021702235;
MPRINT(EM_DIAGRAM):   ********** LEAF 37 NODE 368 ***************;
33128     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33129     +    END;
33130     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33131     +
33132     +********** LEAF    37  NODE   368 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
33133     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33134     +
MPRINT(EM_DIAGRAM):   END;
33135     +  _BRANCH_ = -1;
33136     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33137     +    FILE_AVG_GIFT  <                10.07 THEN DO;
33138     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33139     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33140     +
33141     +  IF _BRANCH_ GT 0 THEN DO;
33142     +
33143     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33144     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33145     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' , '17' ,'11' ,'20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' , '51' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33146     +      IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,
33147     +      '17' ,'11' ,'20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33148     +      '51' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.019900574;
33149     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33150     +      END;
MPRINT(EM_DIAGRAM):   END;
33151     +
MPRINT(EM_DIAGRAM):   END;
33152     +    IF _BRANCH_ GT 0 THEN DO;
33153     +       _ARB_F_ + -0.019900574;
MPRINT(EM_DIAGRAM):   ********** LEAF 38 NODE 369 ***************;
33154     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33155     +    END;
33156     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33157     +
33158     +********** LEAF    38  NODE   369 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
33159     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33160     +
MPRINT(EM_DIAGRAM):   END;
33161     +  _BRANCH_ = -1;
33162     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33163     +    FILE_AVG_GIFT  <                10.07 THEN DO;
33164     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33165     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33166     +
33167     +  IF _BRANCH_ GT 0 THEN DO;
33168     +
33169     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33170     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33171     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' , '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,'27' , '21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33172     +      IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33173     +      '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,'27' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33174     +      '21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
33175     +       _BRANCH_ =    2;
33176     +      END;
33177     +    IF _BRANCH_ LT 0 THEN DO;
33178     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33179     +      ELSE IF _ARBFMT_2 NOTIN (
33180     +        '.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' , '20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,'51' , '33' ,'06' ,'53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' , '50'
,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' , '27' ,'21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
33181     +        '20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,'51' ,
MPRINT(EM_DIAGRAM):   END;
33182     +        '33' ,'06' ,'53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33183     +        '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.002170327;
33184     +        '27' ,'21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
33185     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33186     +    END;
MPRINT(EM_DIAGRAM):   END;
33187     +    IF _BRANCH_ GT 0 THEN DO;
33188     +       _ARB_F_ + 0.002170327;
MPRINT(EM_DIAGRAM):   ********** LEAF 39 NODE 370 ***************;
33189     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33190     +    END;
33191     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33192     +
33193     +********** LEAF    39  NODE   370 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
33194     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33195     +
MPRINT(EM_DIAGRAM):   END;
33196     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33197     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
33198     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
33199     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33200     +    END;
33201     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33202     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33203     +  END;
33204     +  IF _BRANCH_ GT 0 THEN DO;
33205     +
33206     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33207     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33208     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '17' ,'03' ,'20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33209     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
33210     +      '17' ,'03' ,'20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' )
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33211     +       THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005304668;
33212     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33213     +      END;
MPRINT(EM_DIAGRAM):   END;
33214     +
MPRINT(EM_DIAGRAM):   END;
33215     +    IF _BRANCH_ GT 0 THEN DO;
33216     +       _ARB_F_ + -0.005304668;
MPRINT(EM_DIAGRAM):   ********** LEAF 40 NODE 371 ***************;
33217     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33218     +    END;
33219     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33220     +
33221     +********** LEAF    40  NODE   371 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
33222     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33223     +
MPRINT(EM_DIAGRAM):   END;
33224     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33225     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
33226     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
33227     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33228     +    END;
33229     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33230     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33231     +  END;
33232     +  IF _BRANCH_ GT 0 THEN DO;
33233     +
33234     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33235     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33236     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' , '24' ,'08' ,'19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33237     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,
MPRINT(EM_DIAGRAM):   END;
33238     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33239     +      '24' ,'08' ,'19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' )
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33240     +       THEN DO;
33241     +       _BRANCH_ =    2;
33242     +      END;
33243     +    IF _BRANCH_ LT 0 THEN DO;
33244     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33245     +      ELSE IF _ARBFMT_2 NOTIN (
33246     +        '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'17' ,'03' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'17' ,'03' , '20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ,'04' , '53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'46' , '45'
,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,'24' ,'08' , '19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 2;
33247     +        '20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ,'04' ,
MPRINT(EM_DIAGRAM):   END;
33248     +        '53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'46' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33249     +        '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,'24' ,'08' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0161763175;
33250     +        '19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10'
MPRINT(EM_DIAGRAM):   END;
33251     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33252     +    END;
MPRINT(EM_DIAGRAM):   END;
33253     +    IF _BRANCH_ GT 0 THEN DO;
33254     +       _ARB_F_ + 0.0161763175;
MPRINT(EM_DIAGRAM):   ********** LEAF 41 NODE 375 ***************;
33255     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33256     +    END;
33257     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33258     +
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33259     +********** LEAF    41  NODE   375 ***************;
33260     +IF _ARB_BADF_ EQ 0 THEN DO;
33261     +
33262     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
33263     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33264     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENCY_STATUS_96NK ) THEN _BRANCH_ = 1;
33265     +    IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
33266     +     _BRANCH_ =    1;
33267     +    END;
33268     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_5 NOTIN ( 'A' ,'N' ,'F' ,'S' ,'E' ,'L' ) THEN _BRANCH_ = 1;
33269     +     IF MISSING( RECENCY_STATUS_96NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33270     +    ELSE IF _ARBFMT_5 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33271     +      'A' ,'N' ,'F' ,'S' ,'E' ,'L'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33272     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33273     +  END;
33274     +  IF _BRANCH_ GT 0 THEN DO;
33275     +
33276     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33277     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33278     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' , '03' ,'46' ,'07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33279     +      IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33280     +      '03' ,'46' ,'07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008412039;
33281     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33282     +      END;
MPRINT(EM_DIAGRAM):   END;
33283     +
MPRINT(EM_DIAGRAM):   END;
33284     +    IF _BRANCH_ GT 0 THEN DO;
33285     +       _ARB_F_ + -0.008412039;
MPRINT(EM_DIAGRAM):   ********** LEAF 42 NODE 376 ***************;
33286     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33287     +    END;
33288     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33289     +
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33290     +********** LEAF    42  NODE   376 ***************;
33291     +IF _ARB_BADF_ EQ 0 THEN DO;
33292     +
33293     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
33294     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33295     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENCY_STATUS_96NK ) THEN _BRANCH_ = 1;
33296     +    IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
33297     +     _BRANCH_ =    1;
33298     +    END;
33299     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_5 NOTIN ( 'A' ,'N' ,'F' ,'S' ,'E' ,'L' ) THEN _BRANCH_ = 1;
33300     +     IF MISSING( RECENCY_STATUS_96NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33301     +    ELSE IF _ARBFMT_5 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33302     +      'A' ,'N' ,'F' ,'S' ,'E' ,'L'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33303     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33304     +  END;
33305     +  IF _BRANCH_ GT 0 THEN DO;
33306     +
33307     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33308     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33309     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'38' ,'31' ,'35' ,'40' ,'17' ,'11' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' , '15' ,'18' ,'08' ,'12' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' , '52' ,'10' )
THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33310     +      IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'38' ,'31' ,'35' ,'40' ,'17' ,'11' ,
MPRINT(EM_DIAGRAM):   END;
33311     +      '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33312     +      '15' ,'18' ,'08' ,'12' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33313     +      '52' ,'10' ) THEN DO;
33314     +       _BRANCH_ =    2;
33315     +      END;
33316     +    IF _BRANCH_ LT 0 THEN DO;
33317     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33318     +      ELSE IF _ARBFMT_2 NOTIN (
33319     +        '.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,'03' ,'46' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,'03' ,'46' , '07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ,'04' ,'53' ,'37' , '38' ,'31' ,'35' ,'40' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' , '16'
,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'08' ,'12' , '27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
33320     +        '07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ,'04' ,'53' ,'37' ,
MPRINT(EM_DIAGRAM):   END;
33321     +        '38' ,'31' ,'35' ,'40' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33322     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0111794738;
33323     +        '27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
33324     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33325     +    END;
MPRINT(EM_DIAGRAM):   END;
33326     +    IF _BRANCH_ GT 0 THEN DO;
33327     +       _ARB_F_ + 0.0111794738;
MPRINT(EM_DIAGRAM):   ********** LEAF 43 NODE 374 ***************;
33328     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33329     +    END;
33330     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33331     +
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33332     +********** LEAF    43  NODE   374 ***************;
33333     +IF _ARB_BADF_ EQ 0 THEN DO;
33334     +
33335     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
33336     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
33337     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('S' ,'E' ,'L' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33338     +    IF _ARBFMT_5 IN ('S' ,'E' ,'L' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013118767;
33339     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33340     +    END;
MPRINT(EM_DIAGRAM):   END;
33341     +
33342     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 44 NODE 380 ***************;
33343     +     _ARB_F_ + -0.013118767;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33344     +    END;
33345     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33346     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33347     +********** LEAF    44  NODE   380 ***************;
33348     +IF _ARB_BADF_ EQ 0 THEN DO;
33349     +
33350     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33351     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33352     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' , '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33353     +    IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33354     +    '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
33355     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33356     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
33357     +
33358     +  IF _BRANCH_ GT 0 THEN DO;
33359     +
33360     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33361     +    _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
33362     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( INCOME_GROUP ) THEN _BRANCH_ = 1;
33363     +      IF _ARBFMT_12 IN ('4' ,'1' ) THEN DO;
33364     +       _BRANCH_ =    1;
33365     +      END;
33366     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'1' ,'2' ,'6' ,'5' ,'3' ,'7' ) THEN _BRANCH_ = 1;
33367     +       IF MISSING( INCOME_GROUP  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33368     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0165772427;
33369     +        '4' ,'1' ,'2' ,'6' ,'5' ,'3' ,'7'
MPRINT(EM_DIAGRAM):   END;
33370     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33371     +    END;
MPRINT(EM_DIAGRAM):   END;
33372     +    IF _BRANCH_ GT 0 THEN DO;
33373     +       _ARB_F_ + 0.0165772427;
MPRINT(EM_DIAGRAM):   ********** LEAF 45 NODE 381 ***************;
33374     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33375     +    END;
33376     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33377     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33378     +********** LEAF    45  NODE   381 ***************;
33379     +IF _ARB_BADF_ EQ 0 THEN DO;
33380     +
33381     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33382     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33383     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' , '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33384     +    IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33385     +    '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
33386     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33387     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
33388     +
33389     +  IF _BRANCH_ GT 0 THEN DO;
33390     +
33391     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33392     +    _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
33393     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'6' ,'5' ,'3' ,'7' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33394     +      IF _ARBFMT_12 IN ('2' ,'6' ,'5' ,'3' ,'7' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034625412;
33395     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33396     +      END;
MPRINT(EM_DIAGRAM):   END;
33397     +
MPRINT(EM_DIAGRAM):   END;
33398     +    IF _BRANCH_ GT 0 THEN DO;
33399     +       _ARB_F_ + 0.0034625412;
MPRINT(EM_DIAGRAM):   ********** LEAF 46 NODE 382 ***************;
33400     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33401     +    END;
33402     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33403     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33404     +********** LEAF    46  NODE   382 ***************;
33405     +IF _ARB_BADF_ EQ 0 THEN DO;
33406     +
33407     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33408     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33409     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' , '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' , '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' , '22' ,'06' )
THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33410     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' ,
MPRINT(EM_DIAGRAM):   END;
33411     +    '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33412     +    '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33413     +    '22' ,'06' ) THEN DO;
33414     +     _BRANCH_ =    2;
33415     +    END;
33416     +  IF _BRANCH_ LT 0 THEN DO;
33417     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33418     +    ELSE IF _ARBFMT_2 NOTIN (
33419     +      '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' , '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' , '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03'
,'50' ,'43' , '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 2;
33420     +      '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' ,
MPRINT(EM_DIAGRAM):   END;
33421     +      '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33422     +      '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,
33423     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33424     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33425     +  END;
33426     +  IF _BRANCH_ GT 0 THEN DO;
33427     +
33428     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33429     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33430     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33431     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.012680533;
33432     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33433     +      END;
MPRINT(EM_DIAGRAM):   END;
33434     +
MPRINT(EM_DIAGRAM):   END;
33435     +    IF _BRANCH_ GT 0 THEN DO;
33436     +       _ARB_F_ + -0.012680533;
MPRINT(EM_DIAGRAM):   ********** LEAF 47 NODE 383 ***************;
33437     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33438     +    END;
33439     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33440     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33441     +********** LEAF    47  NODE   383 ***************;
33442     +IF _ARB_BADF_ EQ 0 THEN DO;
33443     +
33444     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33445     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33446     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' , '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' , '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' , '22' ,'06' )
THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33447     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' ,
MPRINT(EM_DIAGRAM):   END;
33448     +    '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33449     +    '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33450     +    '22' ,'06' ) THEN DO;
33451     +     _BRANCH_ =    2;
33452     +    END;
33453     +  IF _BRANCH_ LT 0 THEN DO;
33454     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33455     +    ELSE IF _ARBFMT_2 NOTIN (
33456     +      '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' , '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' , '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03'
,'50' ,'43' , '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 2;
33457     +      '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' ,
MPRINT(EM_DIAGRAM):   END;
33458     +      '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33459     +      '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,
33460     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33461     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33462     +  END;
33463     +  IF _BRANCH_ GT 0 THEN DO;
33464     +
33465     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33466     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33467     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
33468     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
33469     +       _BRANCH_ =    2;
33470     +      END;
33471     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
33472     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33473     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0025950247;
33474     +        '1' ,'0'
MPRINT(EM_DIAGRAM):   END;
33475     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33476     +    END;
MPRINT(EM_DIAGRAM):   END;
33477     +    IF _BRANCH_ GT 0 THEN DO;
33478     +       _ARB_F_ + 0.0025950247;
MPRINT(EM_DIAGRAM):   ********** LEAF 48 NODE 387 ***************;
33479     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33480     +    END;
33481     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33482     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33483     +********** LEAF    48  NODE   387 ***************;
33484     +IF _ARB_BADF_ EQ 0 THEN DO;
33485     +
33486     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33487     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33488     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' , '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33489     +    IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,
MPRINT(EM_DIAGRAM):   END;
33490     +    '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33491     +    '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33492     +        DO;
33493     +     _BRANCH_ =    1;
33494     +    END;
33495     +  IF _BRANCH_ LT 0 THEN DO;
33496     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33497     +    ELSE IF _ARBFMT_2 NOTIN (
33498     +      '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' , '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' , '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53'
,'42' ,'25' , '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' , '18' ,'19' ,'27' ,'44' ,'05' ,'22' ) THEN _BRANCH_ = 1;
33499     +      '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   END;
33500     +      '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'25' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33501     +      '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,
33502     +      '18' ,'19' ,'27' ,'44' ,'05' ,'22'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33503     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33504     +  END;
33505     +  IF _BRANCH_ GT 0 THEN DO;
33506     +
33507     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33508     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33509     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'4' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
33510     +      IF _ARBFMT_12 IN ('1' ,'4' ,'0' ) THEN DO;
33511     +       _BRANCH_ =    1;
33512     +      END;
33513     +    IF _BRANCH_ LT 0 THEN DO;
33514     +       IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'4' ,'0' ,'2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
33515     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33516     +        '1' ,'4' ,'0' ,'2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0170315773;
33517     +        '13'
MPRINT(EM_DIAGRAM):   END;
33518     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33519     +    END;
MPRINT(EM_DIAGRAM):   END;
33520     +    IF _BRANCH_ GT 0 THEN DO;
33521     +       _ARB_F_ + 0.0170315773;
MPRINT(EM_DIAGRAM):   ********** LEAF 49 NODE 388 ***************;
33522     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33523     +    END;
33524     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33525     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33526     +********** LEAF    49  NODE   388 ***************;
33527     +IF _ARB_BADF_ EQ 0 THEN DO;
33528     +
33529     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33530     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33531     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' , '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33532     +    IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,
MPRINT(EM_DIAGRAM):   END;
33533     +    '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33534     +    '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33535     +        DO;
33536     +     _BRANCH_ =    1;
33537     +    END;
33538     +  IF _BRANCH_ LT 0 THEN DO;
33539     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33540     +    ELSE IF _ARBFMT_2 NOTIN (
33541     +      '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' , '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' , '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53'
,'42' ,'25' , '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' , '18' ,'19' ,'27' ,'44' ,'05' ,'22' ) THEN _BRANCH_ = 1;
33542     +      '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,
MPRINT(EM_DIAGRAM):   END;
33543     +      '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'25' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33544     +      '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,
33545     +      '18' ,'19' ,'27' ,'44' ,'05' ,'22'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33546     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33547     +  END;
33548     +  IF _BRANCH_ GT 0 THEN DO;
33549     +
33550     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33551     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33552     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33553     +      IF _ARBFMT_12 IN ('2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33554     +      '13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0003581064;
33555     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33556     +      END;
MPRINT(EM_DIAGRAM):   END;
33557     +
MPRINT(EM_DIAGRAM):   END;
33558     +    IF _BRANCH_ GT 0 THEN DO;
33559     +       _ARB_F_ + 0.0003581064;
MPRINT(EM_DIAGRAM):   ********** LEAF 50 NODE 389 ***************;
33560     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33561     +    END;
33562     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33563     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33564     +********** LEAF    50  NODE   389 ***************;
33565     +IF _ARB_BADF_ EQ 0 THEN DO;
33566     +
33567     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33568     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33569     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' , '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' , '22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33570     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' ,
33571     +    '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33572     +    '22' ) THEN DO;
33573     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33574     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33575     +
33576     +  IF _BRANCH_ GT 0 THEN DO;
33577     +
33578     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33579     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33580     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33581     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.015417243;
33582     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33583     +      END;
MPRINT(EM_DIAGRAM):   END;
33584     +
MPRINT(EM_DIAGRAM):   END;
33585     +    IF _BRANCH_ GT 0 THEN DO;
33586     +       _ARB_F_ + -0.015417243;
MPRINT(EM_DIAGRAM):   ********** LEAF 51 NODE 390 ***************;
33587     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33588     +    END;
33589     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33590     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33591     +********** LEAF    51  NODE   390 ***************;
33592     +IF _ARB_BADF_ EQ 0 THEN DO;
33593     +
33594     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33595     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33596     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' , '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' , '22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33597     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' ,
33598     +    '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33599     +    '22' ) THEN DO;
33600     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33601     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33602     +
33603     +  IF _BRANCH_ GT 0 THEN DO;
33604     +
33605     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33606     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
33607     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
33608     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
33609     +       _BRANCH_ =    2;
33610     +      END;
33611     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
33612     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33613     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000399174;
33614     +        '1' ,'0'
MPRINT(EM_DIAGRAM):   END;
33615     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33616     +    END;
MPRINT(EM_DIAGRAM):   END;
33617     +    IF _BRANCH_ GT 0 THEN DO;
33618     +       _ARB_F_ + -0.000399174;
MPRINT(EM_DIAGRAM):   ********** LEAF 52 NODE 394 ***************;
33619     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33620     +    END;
33621     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33622     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33623     +********** LEAF    52  NODE   394 ***************;
33624     +IF _ARB_BADF_ EQ 0 THEN DO;
33625     +
33626     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33627     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33628     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' , '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' , '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33629     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33630     +    '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33631     +    '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
33632     +     _BRANCH_ =    1;
33633     +    END;
33634     +  IF _BRANCH_ LT 0 THEN DO;
33635     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33636     +    ELSE IF _ARBFMT_2 NOTIN (
33637     +      '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' , '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40'
,'13' ,'28' , '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 1;
33638     +      '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' ,
MPRINT(EM_DIAGRAM):   END;
33639     +      '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33640     +      '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,
33641     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33642     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33643     +  END;
33644     +  IF _BRANCH_ GT 0 THEN DO;
33645     +
33646     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33647     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33648     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33649     +      IF _ARBFMT_12 IN ('1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0131102809;
33650     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33651     +      END;
MPRINT(EM_DIAGRAM):   END;
33652     +
MPRINT(EM_DIAGRAM):   END;
33653     +    IF _BRANCH_ GT 0 THEN DO;
33654     +       _ARB_F_ + 0.0131102809;
MPRINT(EM_DIAGRAM):   ********** LEAF 53 NODE 395 ***************;
33655     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33656     +    END;
33657     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33658     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33659     +********** LEAF    53  NODE   395 ***************;
33660     +IF _ARB_BADF_ EQ 0 THEN DO;
33661     +
33662     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33663     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33664     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' , '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' , '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33665     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33666     +    '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33667     +    '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
33668     +     _BRANCH_ =    1;
33669     +    END;
33670     +  IF _BRANCH_ LT 0 THEN DO;
33671     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33672     +    ELSE IF _ARBFMT_2 NOTIN (
33673     +      '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' , '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40'
,'13' ,'28' , '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 1;
33674     +      '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' ,
MPRINT(EM_DIAGRAM):   END;
33675     +      '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33676     +      '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,
33677     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33678     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33679     +  END;
33680     +  IF _BRANCH_ GT 0 THEN DO;
33681     +
33682     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33683     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
33684     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 2;
33685     +      IF _ARBFMT_12 IN ('3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN DO;
33686     +       _BRANCH_ =    2;
33687     +      END;
33688     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ,'3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN _BRANCH_ = 2;
33689     +       IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33690     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005602028;
33691     +        '1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ,'3' ,'11' ,'12' ,'7' ,'5' ,'8'
MPRINT(EM_DIAGRAM):   END;
33692     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33693     +    END;
MPRINT(EM_DIAGRAM):   END;
33694     +    IF _BRANCH_ GT 0 THEN DO;
33695     +       _ARB_F_ + -0.005602028;
MPRINT(EM_DIAGRAM):   ********** LEAF 54 NODE 396 ***************;
33696     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33697     +    END;
33698     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33699     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33700     +********** LEAF    54  NODE   396 ***************;
33701     +IF _ARB_BADF_ EQ 0 THEN DO;
33702     +
33703     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33704     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33705     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' , '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' , '29' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33706     +    IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' ,
33707     +    '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33708     +    '29' ,'05' ,'22' ,'06' ) THEN DO;
33709     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33710     +    END;
33711     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 15.5 THEN DO;
33712     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33713     +
MPRINT(EM_DIAGRAM):   END;
33714     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33715     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 1;
33716     +      LAST_GIFT_AMT  <                 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
33717     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33718     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013335318;
33719     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
33720     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33721     +    END;
MPRINT(EM_DIAGRAM):   END;
33722     +    IF _BRANCH_ GT 0 THEN DO;
33723     +       _ARB_F_ + -0.013335318;
MPRINT(EM_DIAGRAM):   ********** LEAF 55 NODE 397 ***************;
33724     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33725     +    END;
33726     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33727     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33728     +********** LEAF    55  NODE   397 ***************;
33729     +IF _ARB_BADF_ EQ 0 THEN DO;
33730     +
33731     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33732     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33733     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' , '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' , '29' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33734     +    IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' ,
33735     +    '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33736     +    '29' ,'05' ,'22' ,'06' ) THEN DO;
33737     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33738     +    END;
33739     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 15.5 <= LAST_GIFT_AMT THEN DO;
33740     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33741     +
MPRINT(EM_DIAGRAM):   END;
33742     +    _BRANCH_ = -1;
33743     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33744     +                      15.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0030101028;
33745     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33746     +      END;
MPRINT(EM_DIAGRAM):   END;
33747     +
MPRINT(EM_DIAGRAM):   END;
33748     +    IF _BRANCH_ GT 0 THEN DO;
33749     +       _ARB_F_ + 0.0030101028;
MPRINT(EM_DIAGRAM):   ********** LEAF 56 NODE 401 ***************;
33750     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33751     +    END;
33752     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33753     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33754     +********** LEAF    56  NODE   401 ***************;
33755     +IF _ARB_BADF_ EQ 0 THEN DO;
33756     +
33757     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33758     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33759     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
33760     +    IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
33761     +     _BRANCH_ =    1;
33762     +    END;
33763     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
33764     +     IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33765     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33766     +      '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33767     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33768     +  END;
33769     +  IF _BRANCH_ GT 0 THEN DO;
33770     +
33771     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33772     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33773     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' , '40' ,'28' ,'14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' , '18' ,'36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33774     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33775     +      '40' ,'28' ,'14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33776     +      '18' ,'36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ) THEN DO;
33777     +       _BRANCH_ =    1;
33778     +      END;
33779     +    IF _BRANCH_ LT 0 THEN DO;
33780     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33781     +      ELSE IF _ARBFMT_2 NOTIN (
33782     +        '.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,'40' ,'28' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,'40' ,'28' , '14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' , '36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ,'25' ,'38' ,'13' , '17'
,'47' ,'03' ,'49' ,'50' ,'43' ,'46' ,'16' ,'30' ,'41' ,'08' , '27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 1;
33783     +        '14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   END;
33784     +        '36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ,'25' ,'38' ,'13' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33785     +        '17' ,'47' ,'03' ,'49' ,'50' ,'43' ,'46' ,'16' ,'30' ,'41' ,'08' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.016465268;
33786     +        '27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
33787     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33788     +    END;
MPRINT(EM_DIAGRAM):   END;
33789     +    IF _BRANCH_ GT 0 THEN DO;
33790     +       _ARB_F_ + -0.016465268;
MPRINT(EM_DIAGRAM):   ********** LEAF 57 NODE 402 ***************;
33791     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33792     +    END;
33793     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33794     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33795     +********** LEAF    57  NODE   402 ***************;
33796     +IF _ARB_BADF_ EQ 0 THEN DO;
33797     +
33798     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33799     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33800     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
33801     +    IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
33802     +     _BRANCH_ =    1;
33803     +    END;
33804     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
33805     +     IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33806     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33807     +      '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33808     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33809     +  END;
33810     +  IF _BRANCH_ GT 0 THEN DO;
33811     +
33812     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33813     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33814     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'38' ,'13' ,'17' ,'47' ,'03' ,'49' ,'50' ,'43' , '46' ,'16' ,'30' ,'41' ,'08' ,'27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' , '32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33815     +      IF _ARBFMT_2 IN ('25' ,'38' ,'13' ,'17' ,'47' ,'03' ,'49' ,'50' ,'43' ,
33816     +      '46' ,'16' ,'30' ,'41' ,'08' ,'27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33817     +      '32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0047913722;
33818     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
33819     +      END;
MPRINT(EM_DIAGRAM):   END;
33820     +
MPRINT(EM_DIAGRAM):   END;
33821     +    IF _BRANCH_ GT 0 THEN DO;
33822     +       _ARB_F_ + 0.0047913722;
MPRINT(EM_DIAGRAM):   ********** LEAF 58 NODE 403 ***************;
33823     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33824     +    END;
33825     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33826     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33827     +********** LEAF    58  NODE   403 ***************;
33828     +IF _ARB_BADF_ EQ 0 THEN DO;
33829     +
33830     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33831     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33832     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33833     +    IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
33834     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33835     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33836     +
33837     +  IF _BRANCH_ GT 0 THEN DO;
33838     +
33839     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33840     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33841     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' , '30' ,'23' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' , '22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
33842     +      IF _ARBFMT_2 IN ('.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,
33843     +      '30' ,'23' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33844     +      '22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0170419009;
33845     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33846     +      END;
MPRINT(EM_DIAGRAM):   END;
33847     +
MPRINT(EM_DIAGRAM):   END;
33848     +    IF _BRANCH_ GT 0 THEN DO;
33849     +       _ARB_F_ + 0.0170419009;
MPRINT(EM_DIAGRAM):   ********** LEAF 59 NODE 404 ***************;
33850     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33851     +    END;
33852     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33853     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33854     +********** LEAF    59  NODE   404 ***************;
33855     +IF _ARB_BADF_ EQ 0 THEN DO;
33856     +
33857     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
33858     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
33859     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33860     +    IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
33861     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33862     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33863     +
33864     +  IF _BRANCH_ GT 0 THEN DO;
33865     +
33866     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33867     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33868     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' , '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,'41' , '18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33869     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33870     +      '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,'41' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
33871     +      '18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN DO;
33872     +       _BRANCH_ =    2;
33873     +      END;
33874     +    IF _BRANCH_ LT 0 THEN DO;
33875     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
33876     +      ELSE IF _ARBFMT_2 NOTIN (
33877     +        '.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,'30' ,'23' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,'30' ,'23' , '09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,'22' , '06' ,'10' ,'04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' , '28'
,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' , '41' ,'18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN _BRANCH_ = 2;
33878     +        '09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,'22' ,
MPRINT(EM_DIAGRAM):   END;
33879     +        '06' ,'10' ,'04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33880     +        '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000805551;
33881     +        '41' ,'18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52'
MPRINT(EM_DIAGRAM):   END;
33882     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33883     +    END;
MPRINT(EM_DIAGRAM):   END;
33884     +    IF _BRANCH_ GT 0 THEN DO;
33885     +       _ARB_F_ + -0.000805551;
MPRINT(EM_DIAGRAM):   ********** LEAF 60 NODE 408 ***************;
33886     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33887     +    END;
33888     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33889     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33890     +********** LEAF    60  NODE   408 ***************;
33891     +IF _ARB_BADF_ EQ 0 THEN DO;
33892     +
33893     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33894     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33895     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' , '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' , '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33896     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,
MPRINT(EM_DIAGRAM):   END;
33897     +    '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33898     +    '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33899     +        DO;
33900     +     _BRANCH_ =    1;
33901     +    END;
33902     +  IF _BRANCH_ LT 0 THEN DO;
33903     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33904     +    ELSE IF _ARBFMT_2 NOTIN (
33905     +      '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' , '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' , '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31'
,'35' ,'14' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' , '27' ,'29' ,'05' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 1;
33906     +      '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' ,
MPRINT(EM_DIAGRAM):   END;
33907     +      '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31' ,'35' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33908     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,
33909     +      '27' ,'29' ,'05' ,'06' ,'32' ,'10'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33910     +       ) THEN _BRANCH_ = 1;
33911     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
33912     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33913     +
MPRINT(EM_DIAGRAM):   END;
33914     +    _BRANCH_ = -1;
33915     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33916     +      FILE_CARD_GIFT  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034237854;
33917     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33918     +      END;
MPRINT(EM_DIAGRAM):   END;
33919     +
MPRINT(EM_DIAGRAM):   END;
33920     +    IF _BRANCH_ GT 0 THEN DO;
33921     +       _ARB_F_ + 0.0034237854;
MPRINT(EM_DIAGRAM):   ********** LEAF 61 NODE 409 ***************;
33922     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33923     +    END;
33924     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33925     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33926     +********** LEAF    61  NODE   409 ***************;
33927     +IF _ARB_BADF_ EQ 0 THEN DO;
33928     +
33929     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33930     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33931     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' , '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' , '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33932     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,
MPRINT(EM_DIAGRAM):   END;
33933     +    '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33934     +    '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
33935     +        DO;
33936     +     _BRANCH_ =    1;
33937     +    END;
33938     +  IF _BRANCH_ LT 0 THEN DO;
33939     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
33940     +    ELSE IF _ARBFMT_2 NOTIN (
33941     +      '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' , '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' , '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31'
,'35' ,'14' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' , '27' ,'29' ,'05' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 1;
33942     +      '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' ,
MPRINT(EM_DIAGRAM):   END;
33943     +      '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31' ,'35' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33944     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,
33945     +      '27' ,'29' ,'05' ,'06' ,'32' ,'10'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33946     +       ) THEN _BRANCH_ = 1;
33947     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
33948     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
33949     +
MPRINT(EM_DIAGRAM):   END;
33950     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
33951     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
33952     +                       3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
33953     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33954     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.011715717;
33955     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
33956     +       IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33957     +    END;
MPRINT(EM_DIAGRAM):   END;
33958     +    IF _BRANCH_ GT 0 THEN DO;
33959     +       _ARB_F_ + -0.011715717;
MPRINT(EM_DIAGRAM):   ********** LEAF 62 NODE 410 ***************;
33960     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33961     +    END;
33962     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33963     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33964     +********** LEAF    62  NODE   410 ***************;
33965     +IF _ARB_BADF_ EQ 0 THEN DO;
33966     +
33967     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33968     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33969     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' , '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33970     +    IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' ,
33971     +    '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33972     +    '10' ) THEN DO;
33973     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33974     +    END;
33975     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 14.5 THEN DO;
33976     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
33977     +
MPRINT(EM_DIAGRAM):   END;
33978     +    _BRANCH_ = -1;
33979     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33980     +      LAST_GIFT_AMT  <                 14.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001082103;
33981     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
33982     +      END;
MPRINT(EM_DIAGRAM):   END;
33983     +
MPRINT(EM_DIAGRAM):   END;
33984     +    IF _BRANCH_ GT 0 THEN DO;
33985     +       _ARB_F_ + -0.001082103;
MPRINT(EM_DIAGRAM):   ********** LEAF 63 NODE 411 ***************;
33986     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
33987     +    END;
33988     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
33989     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33990     +********** LEAF    63  NODE   411 ***************;
33991     +IF _ARB_BADF_ EQ 0 THEN DO;
33992     +
33993     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
33994     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
33995     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' , '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
33996     +    IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' ,
33997     +    '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
33998     +    '10' ) THEN DO;
33999     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34000     +    END;
34001     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 14.5 <= LAST_GIFT_AMT THEN DO;
34002     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34003     +
MPRINT(EM_DIAGRAM):   END;
34004     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34005     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 2;
34006     +                      14.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34007     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34008     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0141158976;
34009     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34010     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34011     +    END;
MPRINT(EM_DIAGRAM):   END;
34012     +    IF _BRANCH_ GT 0 THEN DO;
34013     +       _ARB_F_ + 0.0141158976;
MPRINT(EM_DIAGRAM):   ********** LEAF 64 NODE 415 ***************;
34014     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34015     +    END;
34016     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34017     +
34018     +********** LEAF    64  NODE   415 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
34019     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34020     +
MPRINT(EM_DIAGRAM):   END;
34021     +  _BRANCH_ = -1;
34022     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34023     +    FILE_AVG_GIFT  <                10.07 THEN DO;
34024     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34025     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34026     +
34027     +  IF _BRANCH_ GT 0 THEN DO;
34028     +
34029     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34030     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34031     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' , '43' ,'45' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' , '21' ,'51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34032     +      IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,
34033     +      '43' ,'45' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34034     +      '21' ,'51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0046891133;
34035     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34036     +      END;
MPRINT(EM_DIAGRAM):   END;
34037     +
MPRINT(EM_DIAGRAM):   END;
34038     +    IF _BRANCH_ GT 0 THEN DO;
34039     +       _ARB_F_ + 0.0046891133;
MPRINT(EM_DIAGRAM):   ********** LEAF 65 NODE 416 ***************;
34040     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34041     +    END;
34042     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34043     +
34044     +********** LEAF    65  NODE   416 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
34045     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34046     +
MPRINT(EM_DIAGRAM):   END;
34047     +  _BRANCH_ = -1;
34048     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34049     +    FILE_AVG_GIFT  <                10.07 THEN DO;
34050     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34051     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34052     +
34053     +  IF _BRANCH_ GT 0 THEN DO;
34054     +
34055     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34056     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34057     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' , '47' ,'03' ,'49' ,'46' ,'20' ,'30' ,'23' ,'41' ,'36' ,'24' ,'27' ,'26' , '39' ,'33' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34058     +      IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34059     +      '47' ,'03' ,'49' ,'46' ,'20' ,'30' ,'23' ,'41' ,'36' ,'24' ,'27' ,'26' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34060     +      '39' ,'33' ,'06' ,'52' ) THEN DO;
34061     +       _BRANCH_ =    2;
34062     +      END;
34063     +    IF _BRANCH_ LT 0 THEN DO;
34064     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34065     +      ELSE IF _ARBFMT_2 NOTIN (
34066     +        '.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,'43' ,'45' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,'43' ,'45' , '16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' , '51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ,'04' ,'53' ,'37' ,'35' , '40'
,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'46' ,'20' ,'30' , '23' ,'41' ,'36' ,'24' ,'27' ,'26' ,'39' ,'33' ,'06' ,'52' ) THEN _BRANCH_ = 2;
34067     +        '16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,
MPRINT(EM_DIAGRAM):   END;
34068     +        '51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ,'04' ,'53' ,'37' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34069     +        '40' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'46' ,'20' ,'30' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.017613613;
34070     +        '23' ,'41' ,'36' ,'24' ,'27' ,'26' ,'39' ,'33' ,'06' ,'52'
MPRINT(EM_DIAGRAM):   END;
34071     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34072     +    END;
MPRINT(EM_DIAGRAM):   END;
34073     +    IF _BRANCH_ GT 0 THEN DO;
34074     +       _ARB_F_ + -0.017613613;
MPRINT(EM_DIAGRAM):   ********** LEAF 66 NODE 417 ***************;
34075     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34076     +    END;
34077     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34078     +
34079     +********** LEAF    66  NODE   417 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
34080     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34081     +
MPRINT(EM_DIAGRAM):   END;
34082     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34083     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
34084     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34085     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34086     +    END;
34087     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34088     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34089     +  END;
34090     +  IF _BRANCH_ GT 0 THEN DO;
34091     +
34092     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34093     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34094     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' , '20' ,'16' ,'30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' , '29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34095     +      IF _ARBFMT_2 IN ('.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34096     +      '20' ,'16' ,'30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
34097     +      '29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
34098     +       _BRANCH_ =    1;
34099     +      END;
34100     +    IF _BRANCH_ LT 0 THEN DO;
34101     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
34102     +      ELSE IF _ARBFMT_2 NOTIN (
34103     +        '.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,'20' ,'16' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,'20' ,'16' , '30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,'29' , '39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'25' ,'01' ,'37' ,'38' , '31'
,'35' ,'40' ,'13' ,'14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' , '34' ,'09' ,'02' ,'15' ,'24' ,'12' ,'21' ,'51' ,'05' ,'22' ) THEN _BRANCH_ = 1;
34104     +        '30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,'29' ,
MPRINT(EM_DIAGRAM):   END;
34105     +        '39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'25' ,'01' ,'37' ,'38' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34106     +        '31' ,'35' ,'40' ,'13' ,'14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0158227432;
34107     +        '34' ,'09' ,'02' ,'15' ,'24' ,'12' ,'21' ,'51' ,'05' ,'22'
MPRINT(EM_DIAGRAM):   END;
34108     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34109     +    END;
MPRINT(EM_DIAGRAM):   END;
34110     +    IF _BRANCH_ GT 0 THEN DO;
34111     +       _ARB_F_ + 0.0158227432;
MPRINT(EM_DIAGRAM):   ********** LEAF 67 NODE 418 ***************;
34112     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34113     +    END;
34114     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34115     +
34116     +********** LEAF    67  NODE   418 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
34117     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34118     +
MPRINT(EM_DIAGRAM):   END;
34119     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34120     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
34121     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34122     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34123     +    END;
34124     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34125     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34126     +  END;
34127     +  IF _BRANCH_ GT 0 THEN DO;
34128     +
34129     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34130     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34131     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'25' ,'01' ,'37' ,'38' ,'31' ,'35' ,'40' ,'13' , '14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,'34' ,'09' ,'02' ,'15' ,'24' , '12' ,'21' ,'51' ,'05' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34132     +      IF _ARBFMT_2 IN ('04' ,'25' ,'01' ,'37' ,'38' ,'31' ,'35' ,'40' ,'13' ,
34133     +      '14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,'34' ,'09' ,'02' ,'15' ,'24' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34134     +      '12' ,'21' ,'51' ,'05' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003022749;
34135     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34136     +      END;
MPRINT(EM_DIAGRAM):   END;
34137     +
MPRINT(EM_DIAGRAM):   END;
34138     +    IF _BRANCH_ GT 0 THEN DO;
34139     +       _ARB_F_ + -0.003022749;
MPRINT(EM_DIAGRAM):   ********** LEAF 68 NODE 422 ***************;
34140     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34141     +    END;
34142     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34143     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34144     +********** LEAF    68  NODE   422 ***************;
34145     +IF _ARB_BADF_ EQ 0 THEN DO;
34146     +
34147     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34148     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34149     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' , '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34150     +    IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,
34151     +    '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34152     +    '10' ) THEN DO;
34153     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34154     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
34155     +
34156     +  IF _BRANCH_ GT 0 THEN DO;
34157     +
34158     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34159     +    _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
34160     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
34161     +      IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
34162     +       _BRANCH_ =    1;
34163     +      END;
34164     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
34165     +       IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34166     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0013638799;
34167     +        '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
MPRINT(EM_DIAGRAM):   END;
34168     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34169     +    END;
MPRINT(EM_DIAGRAM):   END;
34170     +    IF _BRANCH_ GT 0 THEN DO;
34171     +       _ARB_F_ + 0.0013638799;
MPRINT(EM_DIAGRAM):   ********** LEAF 69 NODE 423 ***************;
34172     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34173     +    END;
34174     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34175     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34176     +********** LEAF    69  NODE   423 ***************;
34177     +IF _ARB_BADF_ EQ 0 THEN DO;
34178     +
34179     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34180     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34181     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' , '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34182     +    IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,
34183     +    '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34184     +    '10' ) THEN DO;
34185     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34186     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
34187     +
34188     +  IF _BRANCH_ GT 0 THEN DO;
34189     +
34190     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34191     +    _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
34192     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34193     +      IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0166912836;
34194     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34195     +      END;
MPRINT(EM_DIAGRAM):   END;
34196     +
MPRINT(EM_DIAGRAM):   END;
34197     +    IF _BRANCH_ GT 0 THEN DO;
34198     +       _ARB_F_ + 0.0166912836;
MPRINT(EM_DIAGRAM):   ********** LEAF 70 NODE 424 ***************;
34199     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34200     +    END;
34201     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34202     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34203     +********** LEAF    70  NODE   424 ***************;
34204     +IF _ARB_BADF_ EQ 0 THEN DO;
34205     +
34206     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34207     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34208     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' , '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' , '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34209     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   END;
34210     +    '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34211     +    '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34212     +        DO;
34213     +     _BRANCH_ =    2;
34214     +    END;
34215     +  IF _BRANCH_ LT 0 THEN DO;
34216     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34217     +    ELSE IF _ARBFMT_2 NOTIN (
34218     +      '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' , '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' , '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17'
,'11' ,'03' , '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' , '19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN _BRANCH_ = 2;
34219     +      '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' ,
MPRINT(EM_DIAGRAM):   END;
34220     +      '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'03' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34221     +      '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' ,
34222     +      '19' ,'26' ,'39' ,'22' ,'06' ,'52'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34223     +       ) THEN _BRANCH_ = 2;
34224     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 19.5 THEN DO;
34225     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34226     +
MPRINT(EM_DIAGRAM):   END;
34227     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34228     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 1;
34229     +      LAST_GIFT_AMT  <                 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34230     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34231     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.010705433;
34232     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34233     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34234     +    END;
MPRINT(EM_DIAGRAM):   END;
34235     +    IF _BRANCH_ GT 0 THEN DO;
34236     +       _ARB_F_ + -0.010705433;
MPRINT(EM_DIAGRAM):   ********** LEAF 71 NODE 425 ***************;
34237     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34238     +    END;
34239     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34240     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34241     +********** LEAF    71  NODE   425 ***************;
34242     +IF _ARB_BADF_ EQ 0 THEN DO;
34243     +
34244     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34245     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34246     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' , '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' , '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34247     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,
MPRINT(EM_DIAGRAM):   END;
34248     +    '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34249     +    '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34250     +        DO;
34251     +     _BRANCH_ =    2;
34252     +    END;
34253     +  IF _BRANCH_ LT 0 THEN DO;
34254     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34255     +    ELSE IF _ARBFMT_2 NOTIN (
34256     +      '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' , '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' , '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17'
,'11' ,'03' , '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' , '19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN _BRANCH_ = 2;
34257     +      '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' ,
MPRINT(EM_DIAGRAM):   END;
34258     +      '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'03' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34259     +      '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' ,
34260     +      '19' ,'26' ,'39' ,'22' ,'06' ,'52'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34261     +       ) THEN _BRANCH_ = 2;
34262     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 19.5 <= LAST_GIFT_AMT THEN DO;
34263     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34264     +
MPRINT(EM_DIAGRAM):   END;
34265     +    _BRANCH_ = -1;
34266     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34267     +                      19.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0057892462;
34268     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34269     +      END;
MPRINT(EM_DIAGRAM):   END;
34270     +
MPRINT(EM_DIAGRAM):   END;
34271     +    IF _BRANCH_ GT 0 THEN DO;
34272     +       _ARB_F_ + 0.0057892462;
MPRINT(EM_DIAGRAM):   ********** LEAF 72 NODE 429 ***************;
34273     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34274     +    END;
34275     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34276     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34277     +********** LEAF    72  NODE   429 ***************;
34278     +IF _ARB_BADF_ EQ 0 THEN DO;
34279     +
34280     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34281     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34282     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' , '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' , '22' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34283     +    IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,
34284     +    '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34285     +    '22' ,'06' ,'32' ,'10' ) THEN DO;
34286     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34287     +    END;
34288     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 802 THEN DO;
34289     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34290     +
MPRINT(EM_DIAGRAM):   END;
34291     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34292     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
34293     +      MEDIAN_HOME_VALUE  <                  802 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34294     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34295     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0121951614;
34296     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34297     +       IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34298     +    END;
MPRINT(EM_DIAGRAM):   END;
34299     +    IF _BRANCH_ GT 0 THEN DO;
34300     +       _ARB_F_ + 0.0121951614;
MPRINT(EM_DIAGRAM):   ********** LEAF 73 NODE 430 ***************;
34301     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34302     +    END;
34303     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34304     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34305     +********** LEAF    73  NODE   430 ***************;
34306     +IF _ARB_BADF_ EQ 0 THEN DO;
34307     +
34308     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34309     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34310     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' , '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' , '22' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34311     +    IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,
34312     +    '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34313     +    '22' ,'06' ,'32' ,'10' ) THEN DO;
34314     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34315     +    END;
34316     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 802 <= MEDIAN_HOME_VALUE THEN DO;
34317     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34318     +
MPRINT(EM_DIAGRAM):   END;
34319     +    _BRANCH_ = -1;
34320     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34321     +                       802 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001072422;
34322     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34323     +      END;
MPRINT(EM_DIAGRAM):   END;
34324     +
MPRINT(EM_DIAGRAM):   END;
34325     +    IF _BRANCH_ GT 0 THEN DO;
34326     +       _ARB_F_ + -0.001072422;
MPRINT(EM_DIAGRAM):   ********** LEAF 74 NODE 431 ***************;
34327     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34328     +    END;
34329     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34330     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34331     +********** LEAF    74  NODE   431 ***************;
34332     +IF _ARB_BADF_ EQ 0 THEN DO;
34333     +
34334     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34335     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34336     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' , '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' , '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34337     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34338     +    '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34339     +    '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
34340     +     _BRANCH_ =    2;
34341     +    END;
34342     +  IF _BRANCH_ LT 0 THEN DO;
34343     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34344     +    ELSE IF _ARBFMT_2 NOTIN (
34345     +      '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' , '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35'
,'28' ,'14' , '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' , '19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN _BRANCH_ = 2;
34346     +      '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   END;
34347     +      '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'28' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34348     +      '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' ,
34349     +      '19' ,'21' ,'51' ,'29' ,'05' ,'52'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34350     +       ) THEN _BRANCH_ = 2;
34351     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 11.5 THEN DO;
34352     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34353     +
MPRINT(EM_DIAGRAM):   END;
34354     +    _BRANCH_ = -1;
34355     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34356     +      LAST_GIFT_AMT  <                 11.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.014968345;
34357     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34358     +      END;
MPRINT(EM_DIAGRAM):   END;
34359     +
MPRINT(EM_DIAGRAM):   END;
34360     +    IF _BRANCH_ GT 0 THEN DO;
34361     +       _ARB_F_ + -0.014968345;
MPRINT(EM_DIAGRAM):   ********** LEAF 75 NODE 432 ***************;
34362     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34363     +    END;
34364     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34365     +
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34366     +********** LEAF    75  NODE   432 ***************;
34367     +IF _ARB_BADF_ EQ 0 THEN DO;
34368     +
34369     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34370     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34371     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' , '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' , '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34372     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34373     +    '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34374     +    '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
34375     +     _BRANCH_ =    2;
34376     +    END;
34377     +  IF _BRANCH_ LT 0 THEN DO;
34378     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34379     +    ELSE IF _ARBFMT_2 NOTIN (
34380     +      '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' , '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35'
,'28' ,'14' , '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' , '19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN _BRANCH_ = 2;
34381     +      '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   END;
34382     +      '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'28' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34383     +      '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' ,
34384     +      '19' ,'21' ,'51' ,'29' ,'05' ,'52'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34385     +       ) THEN _BRANCH_ = 2;
34386     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 11.5 <= LAST_GIFT_AMT THEN DO;
34387     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34388     +
MPRINT(EM_DIAGRAM):   END;
34389     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34390     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 2;
34391     +                      11.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34392     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34393     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001491597;
34394     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34395     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34396     +    END;
MPRINT(EM_DIAGRAM):   END;
34397     +    IF _BRANCH_ GT 0 THEN DO;
34398     +       _ARB_F_ + -0.001491597;
MPRINT(EM_DIAGRAM):   ********** LEAF 76 NODE 436 ***************;
34399     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34400     +    END;
34401     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34402     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34403     +********** LEAF    76  NODE   436 ***************;
34404     +IF _ARB_BADF_ EQ 0 THEN DO;
34405     +
34406     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34407     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34408     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
34409     +    IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
34410     +     _BRANCH_ =    1;
34411     +    END;
34412     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
34413     +     IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34414     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34415     +      '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34416     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34417     +  END;
34418     +  IF _BRANCH_ GT 0 THEN DO;
34419     +
34420     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34421     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34422     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' , '17' ,'03' ,'46' ,'16' ,'09' ,'26' ,'44' ,'39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34423     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34424     +      '17' ,'03' ,'46' ,'16' ,'09' ,'26' ,'44' ,'39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008380753;
34425     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34426     +      END;
MPRINT(EM_DIAGRAM):   END;
34427     +
MPRINT(EM_DIAGRAM):   END;
34428     +    IF _BRANCH_ GT 0 THEN DO;
34429     +       _ARB_F_ + -0.008380753;
MPRINT(EM_DIAGRAM):   ********** LEAF 77 NODE 437 ***************;
34430     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34431     +    END;
34432     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34433     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34434     +********** LEAF    77  NODE   437 ***************;
34435     +IF _ARB_BADF_ EQ 0 THEN DO;
34436     +
34437     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34438     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34439     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
34440     +    IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
34441     +     _BRANCH_ =    1;
34442     +    END;
34443     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
34444     +     IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34445     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34446     +      '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34447     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34448     +  END;
34449     +  IF _BRANCH_ GT 0 THEN DO;
34450     +
34451     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34452     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34453     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'37' ,'31' ,'35' ,'40' ,'14' ,'11' ,'47' ,'49' , '50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,'23' ,'02' ,'41' ,'15' ,'18' , '36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'21' ,'51' ,'29' ,'05' ,'33' ,'22' , '06' ,'32'
,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34454     +      IF _ARBFMT_2 IN ('42' ,'37' ,'31' ,'35' ,'40' ,'14' ,'11' ,'47' ,'49' ,
MPRINT(EM_DIAGRAM):   END;
34455     +      '50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,'23' ,'02' ,'41' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34456     +      '36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'21' ,'51' ,'29' ,'05' ,'33' ,'22' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34457     +      '06' ,'32' ,'52' ,'10' ) THEN DO;
34458     +       _BRANCH_ =    2;
34459     +      END;
34460     +    IF _BRANCH_ LT 0 THEN DO;
34461     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34462     +      ELSE IF _ARBFMT_2 NOTIN (
34463     +        '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,'17' ,'03' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,'17' ,'03' , '46' ,'16' ,'09' ,'26' ,'44' ,'39' ,'42' ,'37' ,'31' ,'35' ,'40' , '14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' , '23'
,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' , '21' ,'51' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
34464     +        '46' ,'16' ,'09' ,'26' ,'44' ,'39' ,'42' ,'37' ,'31' ,'35' ,'40' ,
MPRINT(EM_DIAGRAM):   END;
34465     +        '14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34466     +        '23' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0087719007;
34467     +        '21' ,'51' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
MPRINT(EM_DIAGRAM):   END;
34468     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34469     +    END;
MPRINT(EM_DIAGRAM):   END;
34470     +    IF _BRANCH_ GT 0 THEN DO;
34471     +       _ARB_F_ + 0.0087719007;
MPRINT(EM_DIAGRAM):   ********** LEAF 78 NODE 435 ***************;
34472     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34473     +    END;
34474     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34475     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34476     +********** LEAF    78  NODE   435 ***************;
34477     +IF _ARB_BADF_ EQ 0 THEN DO;
34478     +
34479     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34480     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34481     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'7' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34482     +    IF _ARBFMT_12 IN ('4' ,'7' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.009577512;
34483     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34484     +    END;
MPRINT(EM_DIAGRAM):   END;
34485     +
34486     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 79 NODE 439 ***************;
34487     +     _ARB_F_ + -0.009577512;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34488     +    END;
34489     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34490     +
34491     +********** LEAF    79  NODE   439 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 9.475 THEN DO;
34492     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34493     +
MPRINT(EM_DIAGRAM):   END;
34494     +  _BRANCH_ = -1;
34495     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34496     +    RECENT_AVG_GIFT_AMT  <                9.475 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.01145818;
34497     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34498     +    END;
MPRINT(EM_DIAGRAM):   END;
34499     +
34500     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 80 NODE 441 ***************;
34501     +     _ARB_F_ + -0.01145818;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34502     +    END;
34503     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34504     +
34505     +********** LEAF    80  NODE   441 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 9.475 <= RECENT_AVG_GIFT_AMT THEN DO;
34506     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34507     +
MPRINT(EM_DIAGRAM):   END;
34508     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34509     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
34510     +                   9.475 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34511     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34512     +    END;
34513     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34514     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34515     +  END;
34516     +  IF _BRANCH_ GT 0 THEN DO;
34517     +
34518     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34519     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34520     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' , '17' ,'11' ,'47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' , '27' ,'26' ,'21' ,'05' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34521     +      IF _ARBFMT_2 IN ('.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34522     +      '17' ,'11' ,'47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
34523     +      '27' ,'26' ,'21' ,'05' ,'06' ,'52' ) THEN DO;
34524     +       _BRANCH_ =    1;
34525     +      END;
34526     +    IF _BRANCH_ LT 0 THEN DO;
34527     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
34528     +      ELSE IF _ARBFMT_2 NOTIN (
34529     +        '.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,'17' ,'11' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,'17' ,'11' , '47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,'27' , '26' ,'21' ,'05' ,'06' ,'52' ,'53' ,'42' ,'25' ,'37' ,'35' ,'14' , '03'
,'50' ,'46' ,'45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' , '08' ,'12' ,'51' ,'44' ,'29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN _BRANCH_ = 1;
34530     +        '47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,'27' ,
MPRINT(EM_DIAGRAM):   END;
34531     +        '26' ,'21' ,'05' ,'06' ,'52' ,'53' ,'42' ,'25' ,'37' ,'35' ,'14' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34532     +        '03' ,'50' ,'46' ,'45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.002026914;
34533     +        '08' ,'12' ,'51' ,'44' ,'29' ,'39' ,'33' ,'22' ,'32' ,'10'
MPRINT(EM_DIAGRAM):   END;
34534     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34535     +    END;
MPRINT(EM_DIAGRAM):   END;
34536     +    IF _BRANCH_ GT 0 THEN DO;
34537     +       _ARB_F_ + -0.002026914;
MPRINT(EM_DIAGRAM):   ********** LEAF 81 NODE 442 ***************;
34538     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34539     +    END;
34540     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34541     +
34542     +********** LEAF    81  NODE   442 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 9.475 <= RECENT_AVG_GIFT_AMT THEN DO;
34543     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34544     +
MPRINT(EM_DIAGRAM):   END;
34545     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34546     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
34547     +                   9.475 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34548     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34549     +    END;
34550     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34551     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34552     +  END;
34553     +  IF _BRANCH_ GT 0 THEN DO;
34554     +
34555     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34556     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34557     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'25' ,'37' ,'35' ,'14' ,'03' ,'50' ,'46' , '45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,'08' ,'12' ,'51' ,'44' , '29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34558     +      IF _ARBFMT_2 IN ('53' ,'42' ,'25' ,'37' ,'35' ,'14' ,'03' ,'50' ,'46' ,
34559     +      '45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,'08' ,'12' ,'51' ,'44' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34560     +      '29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.01107595;
34561     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34562     +      END;
MPRINT(EM_DIAGRAM):   END;
34563     +
MPRINT(EM_DIAGRAM):   END;
34564     +    IF _BRANCH_ GT 0 THEN DO;
34565     +       _ARB_F_ + 0.01107595;
MPRINT(EM_DIAGRAM):   ********** LEAF 82 NODE 444 ***************;
34566     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34567     +    END;
34568     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34569     +
34570     +********** LEAF    82  NODE   444 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 8.845 THEN DO;
34571     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34572     +
MPRINT(EM_DIAGRAM):   END;
34573     +  _BRANCH_ = -1;
34574     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34575     +    RECENT_AVG_GIFT_AMT  <                8.845 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.011656018;
34576     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34577     +    END;
MPRINT(EM_DIAGRAM):   END;
34578     +
34579     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 83 NODE 446 ***************;
34580     +     _ARB_F_ + -0.011656018;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34581     +    END;
34582     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34583     +
34584     +********** LEAF    83  NODE   446 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 8.845 <= RECENT_AVG_GIFT_AMT THEN DO;
34585     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34586     +
MPRINT(EM_DIAGRAM):   END;
34587     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34588     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
34589     +                   8.845 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34590     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34591     +    END;
34592     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34593     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34594     +  END;
34595     +  IF _BRANCH_ GT 0 THEN DO;
34596     +
34597     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34598     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34599     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '14' ,'17' ,'11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34600     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
34601     +      '14' ,'17' ,'11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ) THEN
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34602     +        DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005667742;
34603     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34604     +      END;
MPRINT(EM_DIAGRAM):   END;
34605     +
MPRINT(EM_DIAGRAM):   END;
34606     +    IF _BRANCH_ GT 0 THEN DO;
34607     +       _ARB_F_ + -0.005667742;
MPRINT(EM_DIAGRAM):   ********** LEAF 84 NODE 447 ***************;
34608     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34609     +    END;
34610     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34611     +
34612     +********** LEAF    84  NODE   447 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 8.845 <= RECENT_AVG_GIFT_AMT THEN DO;
34613     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34614     +
MPRINT(EM_DIAGRAM):   END;
34615     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34616     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
34617     +                   8.845 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   END;
34618     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34619     +    END;
34620     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34621     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34622     +  END;
34623     +  IF _BRANCH_ GT 0 THEN DO;
34624     +
34625     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34626     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34627     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' , '46' ,'45' ,'20' ,'16' ,'30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' , '08' ,'12' ,'19' ,'27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34628     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,
MPRINT(EM_DIAGRAM):   END;
34629     +      '46' ,'45' ,'20' ,'16' ,'30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34630     +      '08' ,'12' ,'19' ,'27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34631     +      '10' ) THEN DO;
34632     +       _BRANCH_ =    2;
34633     +      END;
34634     +    IF _BRANCH_ LT 0 THEN DO;
34635     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34636     +      ELSE IF _ARBFMT_2 NOTIN (
34637     +        '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' , '11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ,'04' ,'53' , '25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,'46' ,'45' ,'20' ,'16' , '30'
,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'08' ,'12' ,'19' , '27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 2;
34638     +        '11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ,'04' ,'53' ,
MPRINT(EM_DIAGRAM):   END;
34639     +        '25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,'46' ,'45' ,'20' ,'16' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34640     +        '30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'08' ,'12' ,'19' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0104797097;
34641     +        '27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'10'
MPRINT(EM_DIAGRAM):   END;
34642     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34643     +    END;
MPRINT(EM_DIAGRAM):   END;
34644     +    IF _BRANCH_ GT 0 THEN DO;
34645     +       _ARB_F_ + 0.0104797097;
MPRINT(EM_DIAGRAM):   ********** LEAF 85 NODE 451 ***************;
34646     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34647     +    END;
34648     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34649     +
34650     +********** LEAF    85  NODE   451 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1026.5 THEN DO;
34651     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34652     +
MPRINT(EM_DIAGRAM):   END;
34653     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34654     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
34655     +    MEDIAN_HOME_VALUE  <               1026.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34656     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34657     +    END;
34658     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34659     +     IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34660     +  END;
34661     +  IF _BRANCH_ GT 0 THEN DO;
34662     +
34663     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34664     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34665     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '11' ,'47' ,'50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' , '27' ,'26' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34666     +      IF _ARBFMT_2 IN ('.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
34667     +      '11' ,'47' ,'50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34668     +      '27' ,'26' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0105795572;
34669     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
34670     +      END;
MPRINT(EM_DIAGRAM):   END;
34671     +
MPRINT(EM_DIAGRAM):   END;
34672     +    IF _BRANCH_ GT 0 THEN DO;
34673     +       _ARB_F_ + 0.0105795572;
MPRINT(EM_DIAGRAM):   ********** LEAF 86 NODE 452 ***************;
34674     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34675     +    END;
34676     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34677     +
34678     +********** LEAF    86  NODE   452 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1026.5 THEN DO;
34679     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34680     +
MPRINT(EM_DIAGRAM):   END;
34681     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34682     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
34683     +    MEDIAN_HOME_VALUE  <               1026.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
34684     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34685     +    END;
34686     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34687     +     IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34688     +  END;
34689     +  IF _BRANCH_ GT 0 THEN DO;
34690     +
34691     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
34692     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34693     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'37' ,'48' ,'14' ,'17' ,'03' ,'49' , '43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,'51' , '44' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34694     +      IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'37' ,'48' ,'14' ,'17' ,'03' ,'49' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
34695     +      '43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,'51' ,
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
34696     +      '44' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
34697     +       _BRANCH_ =    2;
34698     +      END;
34699     +    IF _BRANCH_ LT 0 THEN DO;
34700     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
34701     +      ELSE IF _ARBFMT_2 NOTIN (
34702     +        '.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'11' ,'47' ,
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'11' ,'47' , '50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,'27' , '26' ,'29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'42' ,'37' ,'48' , '14'
,'17' ,'03' ,'49' ,'43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' , '08' ,'12' ,'19' ,'21' ,'51' ,'44' ,'05' ,'39' ,'22' ,'52' ) THEN _BRANCH_ = 2;
34703     +        '50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,'27' ,
MPRINT(EM_DIAGRAM):   END;
34704     +        '26' ,'29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'42' ,'37' ,'48' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34705     +        '14' ,'17' ,'03' ,'49' ,'43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000750604;
34706     +        '08' ,'12' ,'19' ,'21' ,'51' ,'44' ,'05' ,'39' ,'22' ,'52'
MPRINT(EM_DIAGRAM):   END;
34707     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
34708     +    END;
MPRINT(EM_DIAGRAM):   END;
34709     +    IF _BRANCH_ GT 0 THEN DO;
34710     +       _ARB_F_ + -0.000750604;
MPRINT(EM_DIAGRAM):   ********** LEAF 87 NODE 450 ***************;
34711     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34712     +    END;
34713     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34714     +
34715     +********** LEAF    87  NODE   450 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1026.5 <= MEDIAN_HOME_VALUE THEN DO;
34716     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34717     +
MPRINT(EM_DIAGRAM):   END;
34718     +  _BRANCH_ = -1;
34719     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34720     +                  1026.5 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008670773;
34721     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34722     +    END;
MPRINT(EM_DIAGRAM):   END;
34723     +
34724     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 88 NODE 454 ***************;
34725     +     _ARB_F_ + -0.008670773;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34726     +    END;
34727     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34728     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34729     +********** LEAF    88  NODE   454 ***************;
34730     +IF _ARB_BADF_ EQ 0 THEN DO;
34731     +
34732     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34733     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34734     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( CARD_PROM_12 ) THEN _BRANCH_ = 1;
34735     +    IF _ARBFMT_12 IN ('11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ) THEN DO;
34736     +     _BRANCH_ =    1;
34737     +    END;
34738     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ,'5' ,'6' ,'10' ,'3' ) THEN _BRANCH_ = 1;
34739     +     IF MISSING( CARD_PROM_12  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34740     +    ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.012852737;
34741     +      '11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ,'5' ,'6' ,'10' ,'3'
MPRINT(EM_DIAGRAM):   END;
34742     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34743     +  END;
34744     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 89 NODE 456 ***************;
34745     +     _ARB_F_ + -0.012852737;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34746     +    END;
34747     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34748     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34749     +********** LEAF    89  NODE   456 ***************;
34750     +IF _ARB_BADF_ EQ 0 THEN DO;
34751     +
34752     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34753     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34754     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34755     +    IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
34756     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34757     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34758     +
34759     +  IF _BRANCH_ GT 0 THEN DO;
34760     +
34761     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34762     +    _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34763     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'7' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
34764     +      IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'7' ) THEN DO;
34765     +       _BRANCH_ =    1;
34766     +      END;
34767     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'7' ,'3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
34768     +       IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34769     +      ELSE IF _ARBFMT_12 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0081630751;
34770     +        '5' ,'2' ,'1' ,'7' ,'3' ,'9' ,'4' ,'6' ,'8' ,'0'
MPRINT(EM_DIAGRAM):   END;
34771     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
34772     +    END;
MPRINT(EM_DIAGRAM):   END;
34773     +    IF _BRANCH_ GT 0 THEN DO;
34774     +       _ARB_F_ + 0.0081630751;
MPRINT(EM_DIAGRAM):   ********** LEAF 90 NODE 457 ***************;
34775     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
34776     +    END;
34777     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34778     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34779     +********** LEAF    90  NODE   457 ***************;
34780     +IF _ARB_BADF_ EQ 0 THEN DO;
34781     +
34782     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34783     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
34784     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34785     +    IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
34786     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34787     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34788     +
34789     +  IF _BRANCH_ GT 0 THEN DO;
34790     +
34791     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
34792     +    _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34793     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
34794     +      IF _ARBFMT_12 IN ('3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004029855;
34795     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
34796     +      END;
MPRINT(EM_DIAGRAM):   END;
34797     +
MPRINT(EM_DIAGRAM):   END;
34798     +    IF _BRANCH_ GT 0 THEN DO;
34799     +       _ARB_F_ + -0.004029855;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 2.0 * _ARB_F_;
34800     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ NE 0 THEN P_TARGET_B0 = 0.7499530693;
34801     +    END;
34802     +  END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARB_F_ > 45.0 THEN P_TARGET_B0 = 1.0;
34803     +
34804     +_ARB_F_ = 2.0 * _ARB_F_;
MPRINT(EM_DIAGRAM):   ELSE IF _ARB_F_ < -45.0 THEN P_TARGET_B0 = 0.0;
34805     +IF _ARB_BADF_ NE 0 THEN P_TARGET_B0  = 0.7499530693;
34806     +ELSE IF _ARB_F_ > 45.0 THEN P_TARGET_B0  = 1.0;
MPRINT(EM_DIAGRAM):   ELSE P_TARGET_B0 = 1.0/(1.0 + EXP( - _ARB_F_));
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 1.0 - P_TARGET_B0 ;
34807     +ELSE IF _ARB_F_ < -45.0 THEN P_TARGET_B0  = 0.0;
MPRINT(EM_DIAGRAM):   ***** CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = P_TARGET_B1 ;
34808     +ELSE P_TARGET_B0  = 1.0/(1.0 + EXP( - _ARB_F_));
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = P_TARGET_B0 ;
34809     +P_TARGET_B1  = 1.0 - P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   ***** ADJUST POSTERIOR PROBILITIES WITH PRIORS ****;
34810     +*****  CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
34811     +Q_TARGET_B1  = P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = P_TARGET_B1 * 0.1999624625;
34812     +Q_TARGET_B0  = P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   _ARB_P_ + P_TARGET_B1 ;
34813     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = P_TARGET_B0 * 1.2667459324;
34814     +*****  ADJUST POSTERIOR  PROBILITIES WITH PRIORS ****;
MPRINT(EM_DIAGRAM):   _ARB_P_ + P_TARGET_B0 ;
34815     + _ARB_P_   = 0;
MPRINT(EM_DIAGRAM):   IF _ARB_P_ > 0 THEN DO;
34816     +P_TARGET_B1  = P_TARGET_B1  * 0.1999624625;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = P_TARGET_B1 / _ARB_P_;
34817     + _ARB_P_ + P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = P_TARGET_B0 / _ARB_P_;
34818     +P_TARGET_B0  = P_TARGET_B0  * 1.2667459324;
MPRINT(EM_DIAGRAM):   END;
34819     + _ARB_P_ + P_TARGET_B0 ;
34820     +IF _ARB_P_ > 0 THEN DO;
MPRINT(EM_DIAGRAM):   ***** I_ AND U_ VARIABLES *******************;
34821     +  P_TARGET_B1  = P_TARGET_B1  / _ARB_P_;
MPRINT(EM_DIAGRAM):   DROP _ARB_I_ _ARB_IP_;
34822     +  P_TARGET_B0  = P_TARGET_B0  / _ARB_P_;
MPRINT(EM_DIAGRAM):   _ARB_IP_ = -1.0;
34823     +END;
MPRINT(EM_DIAGRAM):   IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B1 THEN DO;
34824     +
MPRINT(EM_DIAGRAM):   _ARB_IP_ = P_TARGET_B1 ;
34825     +*****  I_ AND U_ VARIABLES *******************;
MPRINT(EM_DIAGRAM):   _ARB_I_ = 1;
34826     + DROP _ARB_I_ _ARB_IP_;
MPRINT(EM_DIAGRAM):   END;
34827     + _ARB_IP_ = -1.0;
MPRINT(EM_DIAGRAM):   IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B0 THEN DO;
34828     + IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B1 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_IP_ = P_TARGET_B0 ;
34829     +   _ARB_IP_ = P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   _ARB_I_ = 2;
34830     +   _ARB_I_  = 1;
MPRINT(EM_DIAGRAM):   END;
34831     +   END;
MPRINT(EM_DIAGRAM):   SELECT( _ARB_I_);
34832     + IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B0 THEN DO;
MPRINT(EM_DIAGRAM):   WHEN( 1) DO;
34833     +   _ARB_IP_ = P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '1' ;
34834     +   _ARB_I_  = 2;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 1;
34835     +   END;
MPRINT(EM_DIAGRAM):   END;
34836     + SELECT( _ARB_I_);
MPRINT(EM_DIAGRAM):   WHEN( 2) DO;
34837     +  WHEN( 1) DO;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
34838     +    I_TARGET_B  = '1' ;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
34839     +    U_TARGET_B  =  1;
MPRINT(EM_DIAGRAM):   END;
34840     +     END;
MPRINT(EM_DIAGRAM):   END;
34841     +  WHEN( 2) DO;
34842     +    I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
34843     +    U_TARGET_B  =  0;
34844     +     END;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
34845     +   END;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
34846     +
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
34847     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   END;
34848     +IF  F_TARGET_B  NE '1'
34849     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34850     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
34851     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
34852     + END;
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
34853     + ELSE DO;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
34854     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   END;
34855     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   END;
34856     +       SELECT( F_TARGET_B  );
34857     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
34858     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
34859     +       END;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
34860     + END;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
34861     +
34862     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
34863     +
34864     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
34865     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
34866     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
34867     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 1;
34868     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
34869     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
34870     +length D_TARGET_B $ 1;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
34871     +
34872     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
34873     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
34874     +BP_TARGET_B = .;
34875     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
34876     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
34877     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   drop _sum;
34878     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
34879     +
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 4.547474E-13 then do;
34880     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
34881     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
34882     +drop _sum;
MPRINT(EM_DIAGRAM):   end;
34883     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
34884     +if _sum > EP_TARGET_B + 4.547474E-13 then do;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
34885     +   EP_TARGET_B = _sum; _decnum = 2;
34886     +   D_TARGET_B = '0' ;
34887     +end;
34888     +
MPRINT(EM_DIAGRAM):   array BOOSTdema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
34889     +*** Decision Matrix;
34890     +array BOOSTdema [2,2] _temporary_ (
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
34891     +/* row 1 */  14.5 0
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
34892     +/* row 2 */  -0.5 0
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
34893     +);
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
34894     +
34895     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
34896     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   end;
34897     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto BOOSTdeex;
34898     +   when('0' ) _tarnum = 2;
34899     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = BOOSTdema [_tarnum,_decnum];
34900     +end;
34901     +if _tarnum <= 0 then goto BOOSTdeex;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
34902     +
MPRINT(EM_DIAGRAM):   array BOOSTdebe [2] _temporary_ ( 14.5 0);
34903     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = BOOSTdebe [_tarnum];
34904     +CP_TARGET_B = BOOSTdema [_tarnum,_decnum];
34905     +
34906     +*** Best Possible Consequence of Any Decision without Cost;
34907     +array BOOSTdebe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   BOOSTdeex:;
34908     +BP_TARGET_B = BOOSTdebe [_tarnum];
34909     +
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
34910     +
34911     +BOOSTdeex:;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
34912     +
MPRINT(EM_DIAGRAM):   ****************************************************************;
34913     +*** End Decision Processing ;
34914     +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34915     +****************************************************************;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
34916     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34917     +****************************************************************;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
34918     +
34919     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
34920     +*Computing Unadjusted Residual Vars: TARGET_B;
34921     +*------------------------------------------------------------*;
34922     +Label R_TARGET_B1='Residual: TARGET_B=1';
34923     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
34924     +if
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
34925     + F_TARGET_B ne '1'
MPRINT(EM_DIAGRAM):   end;
34926     +and F_TARGET_B ne '0'
34927     + then do;
MPRINT(EM_DIAGRAM):   else do;
34928     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
34929     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
34930     +end;
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
34931     +else do;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
34932     +R_TARGET_B1= - Q_TARGET_B1;
34933     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   otherwise;
34934     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   end;
34935     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   end;
34936     +when('0')R_TARGET_B0= R_TARGET_B0+1;
34937     +otherwise;
34938     +end;
34939     +end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
34940      run;
 
NOTE: DATA STEP view saved on file EMWS1.BOOST_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.42 seconds
      cpu time            0.39 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
34941      quit;
34942      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
34943      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34944      *------------------------------------------------------------*;
34945      * Boost: Scoring VALIDATE data;
34946      *------------------------------------------------------------*;
34947      data EMWS1.Boost_VALIDATE
34948      / view=EMWS1.Boost_VALIDATE
34949      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_VALIDATE / view=EMWS1.Boost_VALIDATE ;
34950      set EMWS1.Repl_VALIDATE
34951      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_VALIDATE ;
34952      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas.
34953     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34954     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
34955     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34956     +
34957     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
34958     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
34959     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
34960     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
34961     +
34962     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
34963     +LABEL P_TARGET_B1  = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
34964     +      P_TARGET_B1  = 0;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0;
34965     +LABEL P_TARGET_B0  = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
34966     +      P_TARGET_B0  = 0;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0;
34967     +LABEL Q_TARGET_B1  = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
34968     +      Q_TARGET_B1  = 0;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0;
34969     +LABEL Q_TARGET_B0  = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
34970     +      Q_TARGET_B0  = 0;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0;
34971     +LABEL R_TARGET_B1  = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B1 = 'Residual: TARGET_B=1' ;
34972     +LABEL R_TARGET_B0  = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_TARGET_B0 = 'Residual: TARGET_B=0' ;
34973     +LABEL F_TARGET_B  = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL F_TARGET_B = 'From: TARGET_B' ;
34974     +LABEL I_TARGET_B  = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL I_TARGET_B = 'Into: TARGET_B' ;
34975     +LABEL U_TARGET_B  = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   LABEL U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
34976     +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
34977     +
34978     +
34979     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
34980     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
34981     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
34982     +LENGTH _ARBFMT_2 $      2; DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
34983     +_ARBFMT_2 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
34984     +LENGTH _ARBFMT_5 $      5; DROP _ARBFMT_5;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_5 $ 5;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_5;
34985     +_ARBFMT_5 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = ' ';
34986     +
34987     +
34988     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
34989     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
34990     +
34991     + DROP _ARB_F_;
MPRINT(EM_DIAGRAM):   DROP _ARB_F_;
34992     + DROP _ARB_BADF_;
MPRINT(EM_DIAGRAM):   DROP _ARB_BADF_;
34993     +     _ARB_F_ = 0.5491810036;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 0.5491810036;
34994     +     _ARB_BADF_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_BADF_ = 0;
34995     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
34996     + DROP _ARB_P_;
MPRINT(EM_DIAGRAM):   DROP _ARB_P_;
34997     + _ARB_P_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
34998     + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
MPRINT(EM_DIAGRAM):   DROP _ARB_PPATH_;
MPRINT(EM_DIAGRAM):   _ARB_PPATH_ = 1;
34999     +
35000     +********** LEAF     1  NODE   306 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 1 NODE 306 ***************;
35001     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35002     +
35003     +   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
35004     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35005     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35006     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35007     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
35008     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35009     +    END;
MPRINT(EM_DIAGRAM):   END;
35010     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35011     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
35012     +    ELSE IF _ARBFMT_12 NOTIN (
35013     +      '1' ,'2' ,'3' ,'4'
35014     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
35015     +  END;
MPRINT(EM_DIAGRAM):   END;
35016     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35017     +
35018     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35019     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35020     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35021     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,
35022     +      '31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' , '31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ) THEN DO;
35023     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35024     +      END;
MPRINT(EM_DIAGRAM):   END;
35025     +
35026     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35027     +       _ARB_F_ + -0.004132905;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004132905;
35028     +      END;
MPRINT(EM_DIAGRAM):   END;
35029     +    END;
MPRINT(EM_DIAGRAM):   END;
35030     +  END;
MPRINT(EM_DIAGRAM):   END;
35031     +
35032     +********** LEAF     2  NODE   307 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 2 NODE 307 ***************;
35033     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35034     +
35035     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35036     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35037     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35038     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
35039     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35040     +    END;
MPRINT(EM_DIAGRAM):   END;
35041     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35042     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
35043     +    ELSE IF _ARBFMT_12 NOTIN (
35044     +      '1' ,'2' ,'3' ,'4'
35045     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
35046     +  END;
MPRINT(EM_DIAGRAM):   END;
35047     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35048     +
35049     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35050     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35051     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35052     +      IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'46' ,'45' ,'20' ,'16' ,'30' ,'07' ,
35053     +      '34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,
35054     +      '27' ,'26' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,
35055     +      '52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'46' ,'45' ,'20' ,'16' ,'30' ,'07' , '34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' , '52' ,'10' )
THEN DO;
35056     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35057     +      END;
MPRINT(EM_DIAGRAM):   END;
35058     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35059     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35060     +      ELSE IF _ARBFMT_2 NOTIN (
35061     +        '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,'31' ,'35' ,
35062     +        '40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'50' ,'43' ,
35063     +        '46' ,'45' ,'20' ,'16' ,'30' ,'07' ,'34' ,'23' ,'09' ,'02' ,'41' ,
35064     +        '15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'21' ,'51' ,
35065     +        '44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
35066     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'37' ,'38' ,'48' ,'31' ,'35' , '40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'50' ,'43' , '46' ,'45' ,'20' ,'16' ,'30' ,'07' ,'34' ,'23' ,'09' ,'02' ,'41' , '15'
,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'21' ,'51' , '44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
35067     +    END;
MPRINT(EM_DIAGRAM):   END;
35068     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35069     +       _ARB_F_ + 0.019567829;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.019567829;
35070     +      END;
MPRINT(EM_DIAGRAM):   END;
35071     +    END;
MPRINT(EM_DIAGRAM):   END;
35072     +  END;
MPRINT(EM_DIAGRAM):   END;
35073     +
35074     +********** LEAF     3  NODE   305 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 3 NODE 305 ***************;
35075     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35076     +
35077     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35078     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35079     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35080     +    IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
35081     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35082     +    END;
MPRINT(EM_DIAGRAM):   END;
35083     +
35084     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35085     +     _ARB_F_ + -0.024649371;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.024649371;
35086     +    END;
MPRINT(EM_DIAGRAM):   END;
35087     +  END;
MPRINT(EM_DIAGRAM):   END;
35088     +
35089     +********** LEAF     4  NODE   311 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 4 NODE 311 ***************;
35090     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35091     +
35092     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35093     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
35094     +    FILE_AVG_GIFT  <               10.195 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.195 THEN DO;
35095     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35096     +    END;
MPRINT(EM_DIAGRAM):   END;
35097     +
35098     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35099     +
35100     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35101     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35102     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35103     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,
35104     +      '43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,
35105     +      '44' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' , '43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' , '44' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
35106     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35107     +      END;
MPRINT(EM_DIAGRAM):   END;
35108     +
35109     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35110     +       _ARB_F_ + -0.000924504;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000924504;
35111     +      END;
MPRINT(EM_DIAGRAM):   END;
35112     +    END;
MPRINT(EM_DIAGRAM):   END;
35113     +  END;
MPRINT(EM_DIAGRAM):   END;
35114     +
35115     +********** LEAF     5  NODE   312 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 5 NODE 312 ***************;
35116     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35117     +
35118     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35119     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
35120     +    FILE_AVG_GIFT  <               10.195 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.195 THEN DO;
35121     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35122     +    END;
MPRINT(EM_DIAGRAM):   END;
35123     +
35124     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35125     +
35126     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35127     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35128     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35129     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'38' ,'48' ,'35' ,'40' ,'28' ,'14' ,
35130     +      '11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,'36' ,'24' ,'08' ,'12' ,
35131     +      '27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'38' ,'48' ,'35' ,'40' ,'28' ,'14' , '11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,'36' ,'24' ,'08' ,'12' , '27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
35132     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35133     +      END;
MPRINT(EM_DIAGRAM):   END;
35134     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35135     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35136     +      ELSE IF _ARBFMT_2 NOTIN (
35137     +        '.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,'43' ,'46' ,
35138     +        '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,'44' ,
35139     +        '29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'25' ,'38' ,'48' ,'35' ,
35140     +        '40' ,'28' ,'14' ,'11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' ,
35141     +        '36' ,'24' ,'08' ,'12' ,'27' ,'51' ,'05' ,'39' ,'22' ,'52'
35142     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'37' ,'31' ,'13' ,'17' ,'47' ,'50' ,'43' ,'46' , '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'15' ,'19' ,'26' ,'21' ,'44' , '29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'25' ,'38' ,'48' ,'35' , '40'
,'28' ,'14' ,'11' ,'03' ,'49' ,'20' ,'16' ,'23' ,'41' ,'18' , '36' ,'24' ,'08' ,'12' ,'27' ,'51' ,'05' ,'39' ,'22' ,'52' ) THEN _BRANCH_ = 2;
35143     +    END;
MPRINT(EM_DIAGRAM):   END;
35144     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35145     +       _ARB_F_ + -0.024904351;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.024904351;
35146     +      END;
MPRINT(EM_DIAGRAM):   END;
35147     +    END;
MPRINT(EM_DIAGRAM):   END;
35148     +  END;
MPRINT(EM_DIAGRAM):   END;
35149     +
35150     +********** LEAF     6  NODE   313 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 6 NODE 313 ***************;
35151     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35152     +
35153     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35154     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
35155     +                  10.195 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.195 <= FILE_AVG_GIFT THEN DO;
35156     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35157     +    END;
MPRINT(EM_DIAGRAM):   END;
35158     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35159     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
35160     +  END;
MPRINT(EM_DIAGRAM):   END;
35161     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35162     +
35163     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35164     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
35165     +      MEDIAN_HOME_VALUE  <                678.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 678.5 THEN DO;
35166     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35167     +      END;
MPRINT(EM_DIAGRAM):   END;
35168     +
35169     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35170     +       _ARB_F_ + 0.0253072226;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0253072226;
35171     +      END;
MPRINT(EM_DIAGRAM):   END;
35172     +    END;
MPRINT(EM_DIAGRAM):   END;
35173     +  END;
MPRINT(EM_DIAGRAM):   END;
35174     +
35175     +********** LEAF     7  NODE   314 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 7 NODE 314 ***************;
35176     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35177     +
35178     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35179     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
35180     +                  10.195 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.195 <= FILE_AVG_GIFT THEN DO;
35181     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35182     +    END;
MPRINT(EM_DIAGRAM):   END;
35183     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35184     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
35185     +  END;
MPRINT(EM_DIAGRAM):   END;
35186     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35187     +
35188     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35189     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
35190     +                     678.5 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 678.5 <= MEDIAN_HOME_VALUE THEN DO;
35191     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35192     +      END;
MPRINT(EM_DIAGRAM):   END;
35193     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35194     +       IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 2;
35195     +    END;
MPRINT(EM_DIAGRAM):   END;
35196     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35197     +       _ARB_F_ + 0.0034517842;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034517842;
35198     +      END;
MPRINT(EM_DIAGRAM):   END;
35199     +    END;
MPRINT(EM_DIAGRAM):   END;
35200     +  END;
MPRINT(EM_DIAGRAM):   END;
35201     +
35202     +********** LEAF     8  NODE   318 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 8 NODE 318 ***************;
35203     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35204     +
35205     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35206     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35207     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35208     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
35209     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35210     +    END;
MPRINT(EM_DIAGRAM):   END;
35211     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35212     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35213     +    ELSE IF _ARBFMT_12 NOTIN (
35214     +      '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
35215     +      '13'
35216     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
35217     +  END;
MPRINT(EM_DIAGRAM):   END;
35218     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35219     +
35220     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35221     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
35222     +      FILE_CARD_GIFT  <                  1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 1.5 THEN DO;
35223     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35224     +      END;
MPRINT(EM_DIAGRAM):   END;
35225     +
35226     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35227     +       _ARB_F_ + 0.0220779529;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0220779529;
35228     +      END;
MPRINT(EM_DIAGRAM):   END;
35229     +    END;
MPRINT(EM_DIAGRAM):   END;
35230     +  END;
MPRINT(EM_DIAGRAM):   END;
35231     +
35232     +********** LEAF     9  NODE   319 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 9 NODE 319 ***************;
35233     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35234     +
35235     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35236     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35237     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35238     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ) THEN DO;
35239     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35240     +    END;
MPRINT(EM_DIAGRAM):   END;
35241     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35242     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35243     +    ELSE IF _ARBFMT_12 NOTIN (
35244     +      '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
35245     +      '13'
35246     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'11' ,'4' ,'12' ,'0' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
35247     +  END;
MPRINT(EM_DIAGRAM):   END;
35248     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35249     +
35250     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35251     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
35252     +                       1.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 1.5 <= FILE_CARD_GIFT THEN DO;
35253     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35254     +      END;
MPRINT(EM_DIAGRAM):   END;
35255     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35256     +       IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
35257     +    END;
MPRINT(EM_DIAGRAM):   END;
35258     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35259     +       _ARB_F_ + 0.0011250563;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0011250563;
35260     +      END;
MPRINT(EM_DIAGRAM):   END;
35261     +    END;
MPRINT(EM_DIAGRAM):   END;
35262     +  END;
MPRINT(EM_DIAGRAM):   END;
35263     +
35264     +********** LEAF    10  NODE   317 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 10 NODE 317 ***************;
35265     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35266     +
35267     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35268     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35269     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35270     +    IF _ARBFMT_12 IN ('9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
35271     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35272     +    END;
MPRINT(EM_DIAGRAM):   END;
35273     +
35274     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35275     +     _ARB_F_ + -0.028358292;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.028358292;
35276     +    END;
MPRINT(EM_DIAGRAM):   END;
35277     +  END;
MPRINT(EM_DIAGRAM):   END;
35278     +
35279     +********** LEAF    11  NODE   323 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 11 NODE 323 ***************;
35280     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35281     +
35282     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35283     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35284     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35285     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
35286     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35287     +    END;
MPRINT(EM_DIAGRAM):   END;
35288     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35289     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35290     +    ELSE IF _ARBFMT_12 NOTIN (
35291     +      '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
35292     +      '13'
35293     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
35294     +  END;
MPRINT(EM_DIAGRAM):   END;
35295     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35296     +
35297     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35298     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
35299     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35300     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35301     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35302     +      END;
MPRINT(EM_DIAGRAM):   END;
35303     +
35304     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35305     +       _ARB_F_ + -0.005138931;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005138931;
35306     +      END;
MPRINT(EM_DIAGRAM):   END;
35307     +    END;
MPRINT(EM_DIAGRAM):   END;
35308     +  END;
MPRINT(EM_DIAGRAM):   END;
35309     +
35310     +********** LEAF    12  NODE   324 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 12 NODE 324 ***************;
35311     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35312     +
35313     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35314     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35315     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35316     +    IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'4' ,'12' ,'0' ) THEN DO;
35317     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35318     +    END;
MPRINT(EM_DIAGRAM):   END;
35319     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35320     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35321     +    ELSE IF _ARBFMT_12 NOTIN (
35322     +      '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
35323     +      '13'
35324     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ,'12' ,'0' ,'11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
35325     +  END;
MPRINT(EM_DIAGRAM):   END;
35326     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35327     +
35328     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35329     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
35330     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35331     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
35332     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35333     +      END;
MPRINT(EM_DIAGRAM):   END;
35334     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35335     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
35336     +      ELSE IF _ARBFMT_12 NOTIN (
35337     +        '1' ,'0'
35338     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
35339     +    END;
MPRINT(EM_DIAGRAM):   END;
35340     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35341     +       _ARB_F_ + 0.0153891406;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0153891406;
35342     +      END;
MPRINT(EM_DIAGRAM):   END;
35343     +    END;
MPRINT(EM_DIAGRAM):   END;
35344     +  END;
MPRINT(EM_DIAGRAM):   END;
35345     +
35346     +********** LEAF    13  NODE   322 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 13 NODE 322 ***************;
35347     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35348     +
35349     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35350     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35351     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35352     +    IF _ARBFMT_12 IN ('11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('11' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
35353     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35354     +    END;
MPRINT(EM_DIAGRAM):   END;
35355     +
35356     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35357     +     _ARB_F_ + -0.026431605;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.026431605;
35358     +    END;
MPRINT(EM_DIAGRAM):   END;
35359     +  END;
MPRINT(EM_DIAGRAM):   END;
35360     +
35361     +********** LEAF    14  NODE   328 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 14 NODE 328 ***************;
35362     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35363     +
35364     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35365     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35366     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35367     +    IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
35368     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35369     +    END;
MPRINT(EM_DIAGRAM):   END;
35370     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35371     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35372     +    ELSE IF _ARBFMT_12 NOTIN (
35373     +      '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10'
35374     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN _BRANCH_ = 1;
35375     +  END;
MPRINT(EM_DIAGRAM):   END;
35376     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35377     +
35378     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35379     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35380     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35381     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,
35382     +      '35' ,'40' ,'13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,
35383     +      '26' ,'21' ,'51' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' , '35' ,'40' ,'13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' , '26' ,'21' ,'51' ,'05' ,'22' ,'06' ) THEN DO;
35384     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35385     +      END;
MPRINT(EM_DIAGRAM):   END;
35386     +
35387     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35388     +       _ARB_F_ + 0.0001994945;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0001994945;
35389     +      END;
MPRINT(EM_DIAGRAM):   END;
35390     +    END;
MPRINT(EM_DIAGRAM):   END;
35391     +  END;
MPRINT(EM_DIAGRAM):   END;
35392     +
35393     +********** LEAF    15  NODE   329 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 15 NODE 329 ***************;
35394     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35395     +
35396     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35397     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35398     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35399     +    IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'12' ,'0' ) THEN DO;
35400     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35401     +    END;
MPRINT(EM_DIAGRAM):   END;
35402     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35403     +     IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
35404     +    ELSE IF _ARBFMT_12 NOTIN (
35405     +      '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10'
35406     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'12' ,'0' ,'3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN _BRANCH_ = 1;
35407     +  END;
MPRINT(EM_DIAGRAM):   END;
35408     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35409     +
35410     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35411     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35412     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35413     +      IF _ARBFMT_2 IN ('37' ,'14' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' ,
35414     +      '16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,'24' ,'08' ,'27' ,'44' ,
35415     +      '29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('37' ,'14' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' , '16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,'24' ,'08' ,'27' ,'44' , '29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
35416     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35417     +      END;
MPRINT(EM_DIAGRAM):   END;
35418     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35419     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35420     +      ELSE IF _ARBFMT_2 NOTIN (
35421     +        '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,
35422     +        '13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,'26' ,
35423     +        '21' ,'51' ,'05' ,'22' ,'06' ,'37' ,'14' ,'17' ,'11' ,'49' ,'50' ,
35424     +        '43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' ,
35425     +        '24' ,'08' ,'27' ,'44' ,'29' ,'39' ,'33' ,'32' ,'52' ,'10'
35426     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'47' ,'03' ,'46' ,'07' ,'02' ,'18' ,'12' ,'19' ,'26' , '21' ,'51' ,'05' ,'22' ,'06' ,'37' ,'14' ,'17' ,'11' ,'49' ,'50' , '43'
,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'41' ,'15' ,'36' , '24' ,'08' ,'27' ,'44' ,'29' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
35427     +    END;
MPRINT(EM_DIAGRAM):   END;
35428     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35429     +       _ARB_F_ + 0.0242020752;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0242020752;
35430     +      END;
MPRINT(EM_DIAGRAM):   END;
35431     +    END;
MPRINT(EM_DIAGRAM):   END;
35432     +  END;
MPRINT(EM_DIAGRAM):   END;
35433     +
35434     +********** LEAF    16  NODE   330 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 16 NODE 330 ***************;
35435     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35436     +
35437     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35438     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35439     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35440     +    IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
35441     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35442     +    END;
MPRINT(EM_DIAGRAM):   END;
35443     +
35444     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35445     +
35446     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35447     +      IF  NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND
35448     +      MONTHS_SINCE_LAST_GIFT  <                 16.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND MONTHS_SINCE_LAST_GIFT < 16.5 THEN DO;
35449     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35450     +      END;
MPRINT(EM_DIAGRAM):   END;
35451     +
35452     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35453     +       _ARB_F_ + -0.026813126;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.026813126;
35454     +      END;
MPRINT(EM_DIAGRAM):   END;
35455     +    END;
MPRINT(EM_DIAGRAM):   END;
35456     +  END;
MPRINT(EM_DIAGRAM):   END;
35457     +
35458     +********** LEAF    17  NODE   331 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 17 NODE 331 ***************;
35459     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35460     +
35461     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35462     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
35463     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35464     +    IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'4' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ) THEN DO;
35465     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35466     +    END;
MPRINT(EM_DIAGRAM):   END;
35467     +
35468     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35469     +
35470     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35471     +      IF  NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND
35472     +                      16.5 <= MONTHS_SINCE_LAST_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_LAST_GIFT ) AND 16.5 <= MONTHS_SINCE_LAST_GIFT THEN DO;
35473     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35474     +      END;
MPRINT(EM_DIAGRAM):   END;
35475     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35476     +       IF MISSING( MONTHS_SINCE_LAST_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( MONTHS_SINCE_LAST_GIFT ) THEN _BRANCH_ = 2;
35477     +    END;
MPRINT(EM_DIAGRAM):   END;
35478     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35479     +       _ARB_F_ + -0.004459446;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004459446;
35480     +      END;
MPRINT(EM_DIAGRAM):   END;
35481     +    END;
MPRINT(EM_DIAGRAM):   END;
35482     +  END;
MPRINT(EM_DIAGRAM):   END;
35483     +
35484     +********** LEAF    18  NODE   335 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 18 NODE 335 ***************;
35485     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35486     +
35487     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35488     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35489     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35490     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35491     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35492     +    END;
MPRINT(EM_DIAGRAM):   END;
35493     +
35494     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35495     +
35496     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35497     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35498     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35499     +      IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,
35500     +      '45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,
35501     +      '27' ,'51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' , '45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' , '27' ,'51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
35502     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35503     +      END;
MPRINT(EM_DIAGRAM):   END;
35504     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35505     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
35506     +      ELSE IF _ARBFMT_2 NOTIN (
35507     +        '.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,'45' ,'20' ,
35508     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,'27' ,
35509     +        '51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'42' ,'25' ,'01' ,
35510     +        '37' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'49' ,'50' ,'46' ,'07' ,
35511     +        '15' ,'18' ,'08' ,'12' ,'26' ,'21' ,'29' ,'05' ,'39' ,'22'
35512     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'38' ,'35' ,'17' ,'11' ,'47' ,'03' ,'43' ,'45' ,'20' , '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'24' ,'19' ,'27' , '51' ,'44' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'42' ,'25' ,'01' , '37'
,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'49' ,'50' ,'46' ,'07' , '15' ,'18' ,'08' ,'12' ,'26' ,'21' ,'29' ,'05' ,'39' ,'22' ) THEN _BRANCH_ = 1;
35513     +    END;
MPRINT(EM_DIAGRAM):   END;
35514     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35515     +       _ARB_F_ + 0.0223101739;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0223101739;
35516     +      END;
MPRINT(EM_DIAGRAM):   END;
35517     +    END;
MPRINT(EM_DIAGRAM):   END;
35518     +  END;
MPRINT(EM_DIAGRAM):   END;
35519     +
35520     +********** LEAF    19  NODE   336 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 19 NODE 336 ***************;
35521     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35522     +
35523     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35524     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35525     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35526     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35527     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35528     +    END;
MPRINT(EM_DIAGRAM):   END;
35529     +
35530     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35531     +
35532     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35533     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35534     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35535     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'31' ,'40' ,'13' ,
35536     +      '28' ,'14' ,'49' ,'50' ,'46' ,'07' ,'15' ,'18' ,'08' ,'12' ,'26' ,'21' ,
35537     +      '29' ,'05' ,'39' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'31' ,'40' ,'13' , '28' ,'14' ,'49' ,'50' ,'46' ,'07' ,'15' ,'18' ,'08' ,'12' ,'26' ,'21' , '29' ,'05' ,'39' ,'22' ) THEN DO;
35538     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35539     +      END;
MPRINT(EM_DIAGRAM):   END;
35540     +
35541     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35542     +       _ARB_F_ + -0.001097654;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001097654;
35543     +      END;
MPRINT(EM_DIAGRAM):   END;
35544     +    END;
MPRINT(EM_DIAGRAM):   END;
35545     +  END;
MPRINT(EM_DIAGRAM):   END;
35546     +
35547     +********** LEAF    20  NODE   337 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 20 NODE 337 ***************;
35548     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35549     +
35550     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35551     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35552     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35553     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
35554     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35555     +    END;
MPRINT(EM_DIAGRAM):   END;
35556     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35557     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
35558     +    ELSE IF _ARBFMT_12 NOTIN (
35559     +      '1' ,'2' ,'3' ,'4'
35560     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
35561     +  END;
MPRINT(EM_DIAGRAM):   END;
35562     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35563     +
35564     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35565     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35566     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35567     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,
35568     +      '11' ,'03' ,'43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,
35569     +      '39' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' , '11' ,'03' ,'43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' , '39' ) THEN DO;
35570     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35571     +      END;
MPRINT(EM_DIAGRAM):   END;
35572     +
35573     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35574     +       _ARB_F_ + -0.023508015;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.023508015;
35575     +      END;
MPRINT(EM_DIAGRAM):   END;
35576     +    END;
MPRINT(EM_DIAGRAM):   END;
35577     +  END;
MPRINT(EM_DIAGRAM):   END;
35578     +
35579     +********** LEAF    21  NODE   338 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 21 NODE 338 ***************;
35580     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35581     +
35582     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35583     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35584     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35585     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
35586     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35587     +    END;
MPRINT(EM_DIAGRAM):   END;
35588     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35589     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
35590     +    ELSE IF _ARBFMT_12 NOTIN (
35591     +      '1' ,'2' ,'3' ,'4'
35592     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
35593     +  END;
MPRINT(EM_DIAGRAM):   END;
35594     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35595     +
35596     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35597     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35598     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35599     +      IF _ARBFMT_2 IN ('42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,
35600     +      '50' ,'46' ,'45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,
35601     +      '21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN
35602     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' , '50' ,'46' ,'45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
35603     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35604     +      END;
MPRINT(EM_DIAGRAM):   END;
35605     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35606     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35607     +      ELSE IF _ARBFMT_2 NOTIN (
35608     +        '.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' ,
35609     +        '43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,'39' ,
35610     +        '42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,'50' ,'46' ,
35611     +        '45' ,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,'21' ,
35612     +        '51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
35613     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'01' ,'38' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' , '43' ,'20' ,'34' ,'09' ,'41' ,'15' ,'36' ,'24' ,'19' ,'27' ,'39' , '42' ,'25' ,'37' ,'48' ,'31' ,'35' ,'17' ,'47' ,'49' ,'50' ,'46' , '45'
,'16' ,'30' ,'07' ,'23' ,'02' ,'18' ,'08' ,'12' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
35614     +    END;
MPRINT(EM_DIAGRAM):   END;
35615     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35616     +       _ARB_F_ + 0.0026901648;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0026901648;
35617     +      END;
MPRINT(EM_DIAGRAM):   END;
35618     +    END;
MPRINT(EM_DIAGRAM):   END;
35619     +  END;
MPRINT(EM_DIAGRAM):   END;
35620     +
35621     +********** LEAF    22  NODE   342 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 22 NODE 342 ***************;
35622     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35623     +
35624     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35625     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35626     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35627     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35628     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35629     +    END;
MPRINT(EM_DIAGRAM):   END;
35630     +
35631     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35632     +
35633     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35634     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35635     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35636     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,
35637     +      '45' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,
35638     +      '39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' , '45' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' , '39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
35639     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35640     +      END;
MPRINT(EM_DIAGRAM):   END;
35641     +
35642     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35643     +       _ARB_F_ + 0.0233229454;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0233229454;
35644     +      END;
MPRINT(EM_DIAGRAM):   END;
35645     +    END;
MPRINT(EM_DIAGRAM):   END;
35646     +  END;
MPRINT(EM_DIAGRAM):   END;
35647     +
35648     +********** LEAF    23  NODE   343 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 23 NODE 343 ***************;
35649     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35650     +
35651     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35652     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35653     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35654     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35655     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35656     +    END;
MPRINT(EM_DIAGRAM):   END;
35657     +
35658     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35659     +
35660     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35661     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35662     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35663     +      IF _ARBFMT_2 IN ('42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,
35664     +      '28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'15' ,'18' ,'24' ,'08' ,
35665     +      '12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' , '28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'15' ,'18' ,'24' ,'08' , '12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN DO;
35666     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35667     +      END;
MPRINT(EM_DIAGRAM):   END;
35668     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35669     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35670     +      ELSE IF _ARBFMT_2 NOTIN (
35671     +        '.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,'45' ,'30' ,
35672     +        '34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,'39' ,
35673     +        '33' ,'06' ,'32' ,'52' ,'10' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,
35674     +        '35' ,'40' ,'13' ,'28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,
35675     +        '15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'44' ,'22'
35676     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'37' ,'14' ,'11' ,'49' ,'50' ,'43' ,'45' ,'30' , '34' ,'23' ,'09' ,'02' ,'41' ,'36' ,'21' ,'51' ,'29' ,'05' ,'39' , '33' ,'06' ,'32' ,'52' ,'10' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' , '35'
,'40' ,'13' ,'28' ,'17' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' , '15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'44' ,'22' ) THEN _BRANCH_ = 2;
35677     +    END;
MPRINT(EM_DIAGRAM):   END;
35678     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35679     +       _ARB_F_ + -0.001726972;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001726972;
35680     +      END;
MPRINT(EM_DIAGRAM):   END;
35681     +    END;
MPRINT(EM_DIAGRAM):   END;
35682     +  END;
MPRINT(EM_DIAGRAM):   END;
35683     +
35684     +********** LEAF    24  NODE   344 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 24 NODE 344 ***************;
35685     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35686     +
35687     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35688     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35689     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35690     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
35691     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35692     +    END;
MPRINT(EM_DIAGRAM):   END;
35693     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35694     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
35695     +    ELSE IF _ARBFMT_12 NOTIN (
35696     +      '1' ,'2' ,'3' ,'4'
35697     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
35698     +  END;
MPRINT(EM_DIAGRAM):   END;
35699     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35700     +
35701     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35702     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35703     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35704     +      IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,
35705     +      '11' ,'03' ,'43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,
35706     +      '27' ,'26' ,'51' ,'29' ,'05' ,'39' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' , '11' ,'03' ,'43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' , '27' ,'26' ,'51' ,'29' ,'05' ,'39' ) THEN DO;
35707     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35708     +      END;
MPRINT(EM_DIAGRAM):   END;
35709     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35710     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
35711     +      ELSE IF _ARBFMT_2 NOTIN (
35712     +        '.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' ,
35713     +        '43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,'27' ,
35714     +        '26' ,'51' ,'29' ,'05' ,'39' ,'04' ,'42' ,'25' ,'01' ,'37' ,'48' ,
35715     +        '17' ,'47' ,'49' ,'50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,
35716     +        '12' ,'19' ,'21' ,'44' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
35717     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'03' , '43' ,'20' ,'16' ,'07' ,'34' ,'09' ,'15' ,'18' ,'36' ,'24' ,'27' , '26' ,'51' ,'29' ,'05' ,'39' ,'04' ,'42' ,'25' ,'01' ,'37' ,'48' , '17'
,'47' ,'49' ,'50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' , '12' ,'19' ,'21' ,'44' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 1;
35718     +    END;
MPRINT(EM_DIAGRAM):   END;
35719     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35720     +       _ARB_F_ + -0.016584144;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.016584144;
35721     +      END;
MPRINT(EM_DIAGRAM):   END;
35722     +    END;
MPRINT(EM_DIAGRAM):   END;
35723     +  END;
MPRINT(EM_DIAGRAM):   END;
35724     +
35725     +********** LEAF    25  NODE   345 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 25 NODE 345 ***************;
35726     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35727     +
35728     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35729     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35730     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35731     +    IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'4' ) THEN DO;
35732     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35733     +    END;
MPRINT(EM_DIAGRAM):   END;
35734     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35735     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 2;
35736     +    ELSE IF _ARBFMT_12 NOTIN (
35737     +      '1' ,'2' ,'3' ,'4'
35738     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 2;
35739     +  END;
MPRINT(EM_DIAGRAM):   END;
35740     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35741     +
35742     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35743     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35744     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35745     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'17' ,'47' ,'49' ,
35746     +      '50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,'12' ,'19' ,'21' ,'44' ,
35747     +      '33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'37' ,'48' ,'17' ,'47' ,'49' , '50' ,'46' ,'45' ,'30' ,'23' ,'02' ,'41' ,'08' ,'12' ,'19' ,'21' ,'44' , '33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
35748     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35749     +      END;
MPRINT(EM_DIAGRAM):   END;
35750     +
35751     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35752     +       _ARB_F_ + 0.0055738909;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0055738909;
35753     +      END;
MPRINT(EM_DIAGRAM):   END;
35754     +    END;
MPRINT(EM_DIAGRAM):   END;
35755     +  END;
MPRINT(EM_DIAGRAM):   END;
35756     +
35757     +********** LEAF    26  NODE   349 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 26 NODE 349 ***************;
35758     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35759     +
35760     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35761     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35762     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35763     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
35764     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35765     +    END;
MPRINT(EM_DIAGRAM):   END;
35766     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35767     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
35768     +    ELSE IF _ARBFMT_12 NOTIN (
35769     +      '1' ,'2' ,'3' ,'4'
35770     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
35771     +  END;
MPRINT(EM_DIAGRAM):   END;
35772     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35773     +
35774     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35775     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35776     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35777     +      IF _ARBFMT_2 IN ('.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,
35778     +      '13' ,'28' ,'14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,
35779     +      '19' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' , '19' ,'32' ,'52' ) THEN DO;
35780     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35781     +      END;
MPRINT(EM_DIAGRAM):   END;
35782     +
35783     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35784     +       _ARB_F_ + -0.003266764;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003266764;
35785     +      END;
MPRINT(EM_DIAGRAM):   END;
35786     +    END;
MPRINT(EM_DIAGRAM):   END;
35787     +  END;
MPRINT(EM_DIAGRAM):   END;
35788     +
35789     +********** LEAF    27  NODE   350 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 27 NODE 350 ***************;
35790     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35791     +
35792     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35793     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35794     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35795     +    IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
35796     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35797     +    END;
MPRINT(EM_DIAGRAM):   END;
35798     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35799     +     IF MISSING( FREQUENCY_STATUS_97NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( FREQUENCY_STATUS_97NK ) THEN _BRANCH_ = 1;
35800     +    ELSE IF _ARBFMT_12 NOTIN (
35801     +      '1' ,'2' ,'3' ,'4'
35802     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'3' ,'4' ) THEN _BRANCH_ = 1;
35803     +  END;
MPRINT(EM_DIAGRAM):   END;
35804     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35805     +
35806     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35807     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35808     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35809     +      IF _ARBFMT_2 IN ('53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' ,
35810     +      '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,'21' ,
35811     +      '51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' , '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN DO;
35812     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35813     +      END;
MPRINT(EM_DIAGRAM):   END;
35814     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35815     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35816     +      ELSE IF _ARBFMT_2 NOTIN (
35817     +        '.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' ,
35818     +        '14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,'19' ,
35819     +        '32' ,'52' ,'53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' ,
35820     +        '20' ,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' ,
35821     +        '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10'
35822     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'42' ,'01' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' , '14' ,'17' ,'11' ,'03' ,'16' ,'07' ,'41' ,'24' ,'08' ,'12' ,'19' , '32' ,'52' ,'53' ,'25' ,'37' ,'47' ,'49' ,'50' ,'43' ,'46' ,'45' , '20'
,'30' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,'36' ,'27' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 2;
35823     +    END;
MPRINT(EM_DIAGRAM):   END;
35824     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35825     +       _ARB_F_ + 0.0163449098;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0163449098;
35826     +      END;
MPRINT(EM_DIAGRAM):   END;
35827     +    END;
MPRINT(EM_DIAGRAM):   END;
35828     +  END;
MPRINT(EM_DIAGRAM):   END;
35829     +
35830     +********** LEAF    28  NODE   348 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 28 NODE 348 ***************;
35831     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35832     +
35833     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35834     +  _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
35835     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35836     +    IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
35837     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35838     +    END;
MPRINT(EM_DIAGRAM):   END;
35839     +
35840     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35841     +     _ARB_F_ + -0.013155494;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013155494;
35842     +    END;
MPRINT(EM_DIAGRAM):   END;
35843     +  END;
MPRINT(EM_DIAGRAM):   END;
35844     +
35845     +********** LEAF    29  NODE   354 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 29 NODE 354 ***************;
35846     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35847     +
35848     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35849     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
35850     +    FILE_CARD_GIFT  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
35851     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35852     +    END;
MPRINT(EM_DIAGRAM):   END;
35853     +
35854     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35855     +
35856     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35857     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35858     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35859     +      IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,
35860     +      '45' ,'16' ,'30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,
35861     +      '05' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' , '45' ,'16' ,'30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' , '05' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
35862     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35863     +      END;
MPRINT(EM_DIAGRAM):   END;
35864     +
35865     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35866     +       _ARB_F_ + 0.02222169;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.02222169;
35867     +      END;
MPRINT(EM_DIAGRAM):   END;
35868     +    END;
MPRINT(EM_DIAGRAM):   END;
35869     +  END;
MPRINT(EM_DIAGRAM):   END;
35870     +
35871     +********** LEAF    30  NODE   355 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 30 NODE 355 ***************;
35872     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35873     +
35874     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35875     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
35876     +    FILE_CARD_GIFT  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
35877     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35878     +    END;
MPRINT(EM_DIAGRAM):   END;
35879     +
35880     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35881     +
35882     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35883     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35884     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35885     +      IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,'28' ,'14' ,
35886     +      '17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,'15' ,'24' ,'12' ,
35887     +      '27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,'28' ,'14' , '17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,'15' ,'24' ,'12' , '27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN DO;
35888     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35889     +      END;
MPRINT(EM_DIAGRAM):   END;
35890     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35891     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35892     +      ELSE IF _ARBFMT_2 NOTIN (
35893     +        '.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,'45' ,'16' ,
35894     +        '30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,'05' ,
35895     +        '33' ,'32' ,'52' ,'10' ,'53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' ,
35896     +        '28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' ,
35897     +        '15' ,'24' ,'12' ,'27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06'
35898     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'25' ,'48' ,'31' ,'35' ,'49' ,'50' ,'43' ,'45' ,'16' , '30' ,'34' ,'09' ,'41' ,'18' ,'36' ,'08' ,'19' ,'21' ,'51' ,'05' , '33' ,'32' ,'52' ,'10' ,'53' ,'42' ,'01' ,'37' ,'38' ,'40' ,'13' , '28'
,'14' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'07' ,'23' ,'02' , '15' ,'24' ,'12' ,'27' ,'26' ,'44' ,'29' ,'39' ,'22' ,'06' ) THEN _BRANCH_ = 2;
35899     +    END;
MPRINT(EM_DIAGRAM):   END;
35900     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35901     +       _ARB_F_ + -0.00106465;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.00106465;
35902     +      END;
MPRINT(EM_DIAGRAM):   END;
35903     +    END;
MPRINT(EM_DIAGRAM):   END;
35904     +  END;
MPRINT(EM_DIAGRAM):   END;
35905     +
35906     +********** LEAF    31  NODE   356 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 31 NODE 356 ***************;
35907     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35908     +
35909     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35910     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
35911     +                     3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
35912     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35913     +    END;
MPRINT(EM_DIAGRAM):   END;
35914     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35915     +     IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
35916     +  END;
MPRINT(EM_DIAGRAM):   END;
35917     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35918     +
35919     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35920     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35921     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35922     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,
35923     +      '13' ,'28' ,'03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,
35924     +      '12' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' , '13' ,'28' ,'03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' , '12' ,'33' ,'06' ) THEN DO;
35925     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35926     +      END;
MPRINT(EM_DIAGRAM):   END;
35927     +
35928     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35929     +       _ARB_F_ + -0.017950888;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.017950888;
35930     +      END;
MPRINT(EM_DIAGRAM):   END;
35931     +    END;
MPRINT(EM_DIAGRAM):   END;
35932     +  END;
MPRINT(EM_DIAGRAM):   END;
35933     +
35934     +********** LEAF    32  NODE   357 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 32 NODE 357 ***************;
35935     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35936     +
35937     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35938     +    IF  NOT MISSING(FILE_CARD_GIFT ) AND
35939     +                     3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
35940     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35941     +    END;
MPRINT(EM_DIAGRAM):   END;
35942     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35943     +     IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
35944     +  END;
MPRINT(EM_DIAGRAM):   END;
35945     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35946     +
35947     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35948     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35949     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35950     +      IF _ARBFMT_2 IN ('25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' ,
35951     +      '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,'21' ,
35952     +      '51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,'21' , '51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
35953     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35954     +      END;
MPRINT(EM_DIAGRAM):   END;
35955     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35956     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
35957     +      ELSE IF _ARBFMT_2 NOTIN (
35958     +        '.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' ,
35959     +        '03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,'12' ,
35960     +        '33' ,'06' ,'25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' ,
35961     +        '46' ,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' ,
35962     +        '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
35963     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'01' ,'48' ,'31' ,'35' ,'40' ,'13' ,'28' , '03' ,'49' ,'20' ,'16' ,'23' ,'09' ,'02' ,'18' ,'36' ,'24' ,'12' , '33' ,'06' ,'25' ,'37' ,'38' ,'14' ,'17' ,'11' ,'47' ,'50' ,'43' , '46'
,'45' ,'30' ,'07' ,'34' ,'41' ,'15' ,'08' ,'19' ,'27' ,'26' , '21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
35964     +    END;
MPRINT(EM_DIAGRAM):   END;
35965     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35966     +       _ARB_F_ + 0.0033652918;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0033652918;
35967     +      END;
MPRINT(EM_DIAGRAM):   END;
35968     +    END;
MPRINT(EM_DIAGRAM):   END;
35969     +  END;
MPRINT(EM_DIAGRAM):   END;
35970     +
35971     +********** LEAF    33  NODE   361 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 33 NODE 361 ***************;
35972     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
35973     +
35974     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35975     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
35976     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35977     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
35978     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35979     +    END;
MPRINT(EM_DIAGRAM):   END;
35980     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35981     +     IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 1;
35982     +    ELSE IF _ARBFMT_12 NOTIN (
35983     +      '1' ,'0'
35984     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 1;
35985     +  END;
MPRINT(EM_DIAGRAM):   END;
35986     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
35987     +
35988     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35989     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35990     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35991     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,
35992     +      '40' ,'13' ,'28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,
35993     +      '36' ,'12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' , '40' ,'13' ,'28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' , '36' ,'12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ) THEN DO;
35994     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35995     +      END;
MPRINT(EM_DIAGRAM):   END;
35996     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
35997     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
35998     +      ELSE IF _ARBFMT_2 NOTIN (
35999     +        '.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' ,
36000     +        '28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,'36' ,
36001     +        '12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ,'42' ,'01' ,'17' ,'47' ,
36002     +        '03' ,'50' ,'43' ,'46' ,'45' ,'20' ,'07' ,'23' ,'41' ,'18' ,'24' ,
36003     +        '08' ,'19' ,'26' ,'21' ,'44' ,'39' ,'33' ,'22' ,'06' ,'10'
36004     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'37' ,'38' ,'48' ,'31' ,'35' ,'40' ,'13' , '28' ,'14' ,'11' ,'49' ,'16' ,'30' ,'34' ,'09' ,'02' ,'15' ,'36' , '12' ,'27' ,'51' ,'29' ,'05' ,'32' ,'52' ,'42' ,'01' ,'17' ,'47' , '03'
,'50' ,'43' ,'46' ,'45' ,'20' ,'07' ,'23' ,'41' ,'18' ,'24' , '08' ,'19' ,'26' ,'21' ,'44' ,'39' ,'33' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 1;
36005     +    END;
MPRINT(EM_DIAGRAM):   END;
36006     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36007     +       _ARB_F_ + -0.0178167;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.0178167;
36008     +      END;
MPRINT(EM_DIAGRAM):   END;
36009     +    END;
MPRINT(EM_DIAGRAM):   END;
36010     +  END;
MPRINT(EM_DIAGRAM):   END;
36011     +
36012     +********** LEAF    34  NODE   362 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 34 NODE 362 ***************;
36013     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36014     +
36015     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36016     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36017     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36018     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
36019     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36020     +    END;
MPRINT(EM_DIAGRAM):   END;
36021     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36022     +     IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 1;
36023     +    ELSE IF _ARBFMT_12 NOTIN (
36024     +      '1' ,'0'
36025     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 1;
36026     +  END;
MPRINT(EM_DIAGRAM):   END;
36027     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36028     +
36029     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36030     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36031     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36032     +      IF _ARBFMT_2 IN ('42' ,'01' ,'17' ,'47' ,'03' ,'50' ,'43' ,'46' ,'45' ,
36033     +      '20' ,'07' ,'23' ,'41' ,'18' ,'24' ,'08' ,'19' ,'26' ,'21' ,'44' ,'39' ,
36034     +      '33' ,'22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'01' ,'17' ,'47' ,'03' ,'50' ,'43' ,'46' ,'45' , '20' ,'07' ,'23' ,'41' ,'18' ,'24' ,'08' ,'19' ,'26' ,'21' ,'44' ,'39' , '33' ,'22' ,'06' ,'10' ) THEN DO;
36035     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36036     +      END;
MPRINT(EM_DIAGRAM):   END;
36037     +
36038     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36039     +       _ARB_F_ + 0.0047639306;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0047639306;
36040     +      END;
MPRINT(EM_DIAGRAM):   END;
36041     +    END;
MPRINT(EM_DIAGRAM):   END;
36042     +  END;
MPRINT(EM_DIAGRAM):   END;
36043     +
36044     +********** LEAF    35  NODE   363 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 35 NODE 363 ***************;
36045     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36046     +
36047     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36048     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36049     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36050     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
36051     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36052     +    END;
MPRINT(EM_DIAGRAM):   END;
36053     +
36054     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36055     +
36056     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36057     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36058     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36059     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,
36060     +      '13' ,'28' ,'17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,
36061     +      '21' ,'44' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' , '13' ,'28' ,'17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' , '21' ,'44' ,'33' ,'06' ) THEN DO;
36062     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36063     +      END;
MPRINT(EM_DIAGRAM):   END;
36064     +
36065     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36066     +       _ARB_F_ + -0.003534761;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003534761;
36067     +      END;
MPRINT(EM_DIAGRAM):   END;
36068     +    END;
MPRINT(EM_DIAGRAM):   END;
36069     +  END;
MPRINT(EM_DIAGRAM):   END;
36070     +
36071     +********** LEAF    36  NODE   364 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 36 NODE 364 ***************;
36072     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36073     +
36074     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36075     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36076     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36077     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
36078     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36079     +    END;
MPRINT(EM_DIAGRAM):   END;
36080     +
36081     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36082     +
36083     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36084     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36085     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36086     +      IF _ARBFMT_2 IN ('42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,'16' ,
36087     +      '30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,'27' ,'26' ,
36088     +      '51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,'16' , '30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,'27' ,'26' , '51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
36089     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36090     +      END;
MPRINT(EM_DIAGRAM):   END;
36091     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36092     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36093     +      ELSE IF _ARBFMT_2 NOTIN (
36094     +        '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
36095     +        '17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,'21' ,
36096     +        '44' ,'33' ,'06' ,'42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' ,
36097     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' ,
36098     +        '27' ,'26' ,'51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
36099     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '17' ,'11' ,'03' ,'43' ,'46' ,'20' ,'07' ,'15' ,'24' ,'19' ,'21' , '44' ,'33' ,'06' ,'42' ,'37' ,'48' ,'14' ,'47' ,'49' ,'50' ,'45' , '16'
,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'18' ,'36' ,'08' ,'12' , '27' ,'26' ,'51' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
36100     +    END;
MPRINT(EM_DIAGRAM):   END;
36101     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36102     +       _ARB_F_ + 0.021702235;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.021702235;
36103     +      END;
MPRINT(EM_DIAGRAM):   END;
36104     +    END;
MPRINT(EM_DIAGRAM):   END;
36105     +  END;
MPRINT(EM_DIAGRAM):   END;
36106     +
36107     +********** LEAF    37  NODE   368 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 37 NODE 368 ***************;
36108     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36109     +
36110     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36111     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
36112     +    FILE_AVG_GIFT  <                10.07 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
36113     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36114     +    END;
MPRINT(EM_DIAGRAM):   END;
36115     +
36116     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36117     +
36118     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36119     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36120     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36121     +      IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,
36122     +      '17' ,'11' ,'20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,
36123     +      '51' ,'33' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' , '17' ,'11' ,'20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' , '51' ,'33' ,'06' ) THEN DO;
36124     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36125     +      END;
MPRINT(EM_DIAGRAM):   END;
36126     +
36127     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36128     +       _ARB_F_ + -0.019900574;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.019900574;
36129     +      END;
MPRINT(EM_DIAGRAM):   END;
36130     +    END;
MPRINT(EM_DIAGRAM):   END;
36131     +  END;
MPRINT(EM_DIAGRAM):   END;
36132     +
36133     +********** LEAF    38  NODE   369 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 38 NODE 369 ***************;
36134     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36135     +
36136     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36137     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
36138     +    FILE_AVG_GIFT  <                10.07 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
36139     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36140     +    END;
MPRINT(EM_DIAGRAM):   END;
36141     +
36142     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36143     +
36144     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36145     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36146     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36147     +      IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' ,
36148     +      '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,'27' ,
36149     +      '21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' , '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,'27' , '21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN DO;
36150     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36151     +      END;
MPRINT(EM_DIAGRAM):   END;
36152     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36153     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36154     +      ELSE IF _ARBFMT_2 NOTIN (
36155     +        '.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' ,
36156     +        '20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,'51' ,
36157     +        '33' ,'06' ,'53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' ,
36158     +        '50' ,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' ,
36159     +        '27' ,'21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10'
36160     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'25' ,'37' ,'48' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' , '20' ,'16' ,'30' ,'09' ,'41' ,'36' ,'24' ,'12' ,'19' ,'26' ,'51' , '33' ,'06' ,'53' ,'42' ,'01' ,'38' ,'31' ,'13' ,'47' ,'03' ,'49' , '50'
,'43' ,'46' ,'45' ,'07' ,'34' ,'23' ,'02' ,'15' ,'18' ,'08' , '27' ,'21' ,'44' ,'29' ,'05' ,'39' ,'22' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
36161     +    END;
MPRINT(EM_DIAGRAM):   END;
36162     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36163     +       _ARB_F_ + 0.002170327;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.002170327;
36164     +      END;
MPRINT(EM_DIAGRAM):   END;
36165     +    END;
MPRINT(EM_DIAGRAM):   END;
36166     +  END;
MPRINT(EM_DIAGRAM):   END;
36167     +
36168     +********** LEAF    39  NODE   370 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 39 NODE 370 ***************;
36169     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36170     +
36171     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36172     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
36173     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
36174     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36175     +    END;
MPRINT(EM_DIAGRAM):   END;
36176     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36177     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
36178     +  END;
MPRINT(EM_DIAGRAM):   END;
36179     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36180     +
36181     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36182     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36183     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36184     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
36185     +      '17' ,'03' ,'20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' )
36186     +       THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '17' ,'03' ,'20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ) THEN DO;
36187     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36188     +      END;
MPRINT(EM_DIAGRAM):   END;
36189     +
36190     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36191     +       _ARB_F_ + -0.005304668;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005304668;
36192     +      END;
MPRINT(EM_DIAGRAM):   END;
36193     +    END;
MPRINT(EM_DIAGRAM):   END;
36194     +  END;
MPRINT(EM_DIAGRAM):   END;
36195     +
36196     +********** LEAF    40  NODE   371 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 40 NODE 371 ***************;
36197     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36198     +
36199     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36200     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
36201     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
36202     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36203     +    END;
MPRINT(EM_DIAGRAM):   END;
36204     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36205     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
36206     +  END;
MPRINT(EM_DIAGRAM):   END;
36207     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36208     +
36209     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36210     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36211     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36212     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,
36213     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,
36214     +      '24' ,'08' ,'19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' )
36215     +       THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' , '24' ,'08' ,'19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' ) THEN DO;
36216     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36217     +      END;
MPRINT(EM_DIAGRAM):   END;
36218     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36219     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36220     +      ELSE IF _ARBFMT_2 NOTIN (
36221     +        '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'17' ,'03' ,
36222     +        '20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ,'04' ,
36223     +        '53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'46' ,
36224     +        '45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,'24' ,'08' ,
36225     +        '19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10'
36226     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'17' ,'03' , '20' ,'16' ,'23' ,'15' ,'12' ,'29' ,'05' ,'33' ,'32' ,'52' ,'04' , '53' ,'25' ,'37' ,'48' ,'14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'46' , '45'
,'30' ,'07' ,'34' ,'09' ,'02' ,'41' ,'18' ,'36' ,'24' ,'08' , '19' ,'27' ,'26' ,'21' ,'51' ,'44' ,'39' ,'22' ,'06' ,'10' ) THEN _BRANCH_ = 2;
36227     +    END;
MPRINT(EM_DIAGRAM):   END;
36228     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36229     +       _ARB_F_ + 0.0161763175;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0161763175;
36230     +      END;
MPRINT(EM_DIAGRAM):   END;
36231     +    END;
MPRINT(EM_DIAGRAM):   END;
36232     +  END;
MPRINT(EM_DIAGRAM):   END;
36233     +
36234     +********** LEAF    41  NODE   375 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 41 NODE 375 ***************;
36235     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36236     +
36237     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36238     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
36239     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36240     +    IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
36241     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36242     +    END;
MPRINT(EM_DIAGRAM):   END;
36243     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36244     +     IF MISSING( RECENCY_STATUS_96NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENCY_STATUS_96NK ) THEN _BRANCH_ = 1;
36245     +    ELSE IF _ARBFMT_5 NOTIN (
36246     +      'A' ,'N' ,'F' ,'S' ,'E' ,'L'
36247     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_5 NOTIN ( 'A' ,'N' ,'F' ,'S' ,'E' ,'L' ) THEN _BRANCH_ = 1;
36248     +  END;
MPRINT(EM_DIAGRAM):   END;
36249     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36250     +
36251     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36252     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36253     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36254     +      IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,
36255     +      '03' ,'46' ,'07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' , '03' ,'46' ,'07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ) THEN DO;
36256     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36257     +      END;
MPRINT(EM_DIAGRAM):   END;
36258     +
36259     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36260     +       _ARB_F_ + -0.008412039;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008412039;
36261     +      END;
MPRINT(EM_DIAGRAM):   END;
36262     +    END;
MPRINT(EM_DIAGRAM):   END;
36263     +  END;
MPRINT(EM_DIAGRAM):   END;
36264     +
36265     +********** LEAF    42  NODE   376 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 42 NODE 376 ***************;
36266     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36267     +
36268     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36269     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
36270     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36271     +    IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('A' ,'N' ,'F' ) THEN DO;
36272     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36273     +    END;
MPRINT(EM_DIAGRAM):   END;
36274     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36275     +     IF MISSING( RECENCY_STATUS_96NK  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENCY_STATUS_96NK ) THEN _BRANCH_ = 1;
36276     +    ELSE IF _ARBFMT_5 NOTIN (
36277     +      'A' ,'N' ,'F' ,'S' ,'E' ,'L'
36278     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_5 NOTIN ( 'A' ,'N' ,'F' ,'S' ,'E' ,'L' ) THEN _BRANCH_ = 1;
36279     +  END;
MPRINT(EM_DIAGRAM):   END;
36280     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36281     +
36282     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36283     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36284     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36285     +      IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'38' ,'31' ,'35' ,'40' ,'17' ,'11' ,
36286     +      '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,
36287     +      '15' ,'18' ,'08' ,'12' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,
36288     +      '52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'38' ,'31' ,'35' ,'40' ,'17' ,'11' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' , '15' ,'18' ,'08' ,'12' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' , '52' ,'10' )
THEN DO;
36289     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36290     +      END;
MPRINT(EM_DIAGRAM):   END;
36291     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36292     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36293     +      ELSE IF _ARBFMT_2 NOTIN (
36294     +        '.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,'03' ,'46' ,
36295     +        '07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ,'04' ,'53' ,'37' ,
36296     +        '38' ,'31' ,'35' ,'40' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' ,
36297     +        '16' ,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'08' ,'12' ,
36298     +        '27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,'52' ,'10'
36299     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'25' ,'01' ,'48' ,'13' ,'28' ,'14' ,'47' ,'03' ,'46' , '07' ,'36' ,'24' ,'19' ,'26' ,'33' ,'22' ,'06' ,'04' ,'53' ,'37' , '38' ,'31' ,'35' ,'40' ,'17' ,'11' ,'49' ,'50' ,'43' ,'45' ,'20' , '16'
,'30' ,'34' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'08' ,'12' , '27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'39' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
36300     +    END;
MPRINT(EM_DIAGRAM):   END;
36301     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36302     +       _ARB_F_ + 0.0111794738;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0111794738;
36303     +      END;
MPRINT(EM_DIAGRAM):   END;
36304     +    END;
MPRINT(EM_DIAGRAM):   END;
36305     +  END;
MPRINT(EM_DIAGRAM):   END;
36306     +
36307     +********** LEAF    43  NODE   374 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 43 NODE 374 ***************;
36308     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36309     +
36310     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36311     +  _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
MPRINT(EM_DIAGRAM):   _ARBFMT_5 = PUT( RECENCY_STATUS_96NK , $5.);
36312     +   %DMNORMIP( _ARBFMT_5);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36313     +    IF _ARBFMT_5 IN ('S' ,'E' ,'L' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_5 IN ('S' ,'E' ,'L' ) THEN DO;
36314     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36315     +    END;
MPRINT(EM_DIAGRAM):   END;
36316     +
36317     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36318     +     _ARB_F_ + -0.013118767;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013118767;
36319     +    END;
MPRINT(EM_DIAGRAM):   END;
36320     +  END;
MPRINT(EM_DIAGRAM):   END;
36321     +
36322     +********** LEAF    44  NODE   380 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 44 NODE 380 ***************;
36323     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36324     +
36325     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36326     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36327     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36328     +    IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,
36329     +    '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' , '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
36330     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36331     +    END;
MPRINT(EM_DIAGRAM):   END;
36332     +
36333     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36334     +
36335     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36336     +    _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
36337     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36338     +      IF _ARBFMT_12 IN ('4' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'1' ) THEN DO;
36339     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36340     +      END;
MPRINT(EM_DIAGRAM):   END;
36341     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36342     +       IF MISSING( INCOME_GROUP  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( INCOME_GROUP ) THEN _BRANCH_ = 1;
36343     +      ELSE IF _ARBFMT_12 NOTIN (
36344     +        '4' ,'1' ,'2' ,'6' ,'5' ,'3' ,'7'
36345     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'1' ,'2' ,'6' ,'5' ,'3' ,'7' ) THEN _BRANCH_ = 1;
36346     +    END;
MPRINT(EM_DIAGRAM):   END;
36347     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36348     +       _ARB_F_ + 0.0165772427;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0165772427;
36349     +      END;
MPRINT(EM_DIAGRAM):   END;
36350     +    END;
MPRINT(EM_DIAGRAM):   END;
36351     +  END;
MPRINT(EM_DIAGRAM):   END;
36352     +
36353     +********** LEAF    45  NODE   381 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 45 NODE 381 ***************;
36354     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36355     +
36356     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36357     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36358     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36359     +    IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,
36360     +    '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' , '41' ,'36' ,'21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
36361     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36362     +    END;
MPRINT(EM_DIAGRAM):   END;
36363     +
36364     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36365     +
36366     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36367     +    _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
36368     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36369     +      IF _ARBFMT_12 IN ('2' ,'6' ,'5' ,'3' ,'7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'6' ,'5' ,'3' ,'7' ) THEN DO;
36370     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36371     +      END;
MPRINT(EM_DIAGRAM):   END;
36372     +
36373     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36374     +       _ARB_F_ + 0.0034625412;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034625412;
36375     +      END;
MPRINT(EM_DIAGRAM):   END;
36376     +    END;
MPRINT(EM_DIAGRAM):   END;
36377     +  END;
MPRINT(EM_DIAGRAM):   END;
36378     +
36379     +********** LEAF    46  NODE   382 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 46 NODE 382 ***************;
36380     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36381     +
36382     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36383     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36384     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36385     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' ,
36386     +    '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' ,
36387     +    '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' ,
36388     +    '22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' , '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' , '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' , '22' ,'06' )
THEN DO;
36389     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36390     +    END;
MPRINT(EM_DIAGRAM):   END;
36391     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36392     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36393     +    ELSE IF _ARBFMT_2 NOTIN (
36394     +      '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' ,
36395     +      '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' ,
36396     +      '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,
36397     +      '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,
36398     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
36399     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' , '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' , '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03'
,'50' ,'43' , '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 2;
36400     +  END;
MPRINT(EM_DIAGRAM):   END;
36401     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36402     +
36403     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36404     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36405     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36406     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
36407     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36408     +      END;
MPRINT(EM_DIAGRAM):   END;
36409     +
36410     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36411     +       _ARB_F_ + -0.012680533;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.012680533;
36412     +      END;
MPRINT(EM_DIAGRAM):   END;
36413     +    END;
MPRINT(EM_DIAGRAM):   END;
36414     +  END;
MPRINT(EM_DIAGRAM):   END;
36415     +
36416     +********** LEAF    47  NODE   383 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 47 NODE 383 ***************;
36417     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36418     +
36419     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36420     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36421     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36422     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' ,
36423     +    '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' ,
36424     +    '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' ,
36425     +    '22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'37' ,'38' ,'48' ,'35' ,'40' , '13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,'46' ,'20' ,'16' ,'34' , '09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,'27' ,'26' ,'29' ,'05' , '22' ,'06' )
THEN DO;
36426     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36427     +    END;
MPRINT(EM_DIAGRAM):   END;
36428     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36429     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36430     +    ELSE IF _ARBFMT_2 NOTIN (
36431     +      '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' ,
36432     +      '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' ,
36433     +      '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03' ,'50' ,'43' ,
36434     +      '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' ,
36435     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
36436     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'31' ,'17' ,'49' ,'45' ,'30' ,'07' ,'23' ,'41' ,'36' ,'21' , '51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'01' ,'37' , '38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'11' ,'47' ,'03'
,'50' ,'43' , '46' ,'20' ,'16' ,'34' ,'09' ,'02' ,'15' ,'18' ,'24' ,'08' ,'12' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 2;
36437     +  END;
MPRINT(EM_DIAGRAM):   END;
36438     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36439     +
36440     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36441     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36442     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36443     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
36444     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36445     +      END;
MPRINT(EM_DIAGRAM):   END;
36446     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36447     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
36448     +      ELSE IF _ARBFMT_12 NOTIN (
36449     +        '1' ,'0'
36450     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
36451     +    END;
MPRINT(EM_DIAGRAM):   END;
36452     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36453     +       _ARB_F_ + 0.0025950247;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0025950247;
36454     +      END;
MPRINT(EM_DIAGRAM):   END;
36455     +    END;
MPRINT(EM_DIAGRAM):   END;
36456     +  END;
MPRINT(EM_DIAGRAM):   END;
36457     +
36458     +********** LEAF    48  NODE   387 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 48 NODE 387 ***************;
36459     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36460     +
36461     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36462     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36463     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36464     +    IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,
36465     +    '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,
36466     +    '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN
36467     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' , '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
36468     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36469     +    END;
MPRINT(EM_DIAGRAM):   END;
36470     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36471     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36472     +    ELSE IF _ARBFMT_2 NOTIN (
36473     +      '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' ,
36474     +      '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,
36475     +      '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'25' ,
36476     +      '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,
36477     +      '18' ,'19' ,'27' ,'44' ,'05' ,'22'
36478     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' , '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' , '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53'
,'42' ,'25' , '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' , '18' ,'19' ,'27' ,'44' ,'05' ,'22' ) THEN _BRANCH_ = 1;
36479     +  END;
MPRINT(EM_DIAGRAM):   END;
36480     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36481     +
36482     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36483     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
36484     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36485     +      IF _ARBFMT_12 IN ('1' ,'4' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'4' ,'0' ) THEN DO;
36486     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36487     +      END;
MPRINT(EM_DIAGRAM):   END;
36488     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36489     +       IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
36490     +      ELSE IF _ARBFMT_12 NOTIN (
36491     +        '1' ,'4' ,'0' ,'2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
36492     +        '13'
36493     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'4' ,'0' ,'2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN _BRANCH_ = 1;
36494     +    END;
MPRINT(EM_DIAGRAM):   END;
36495     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36496     +       _ARB_F_ + 0.0170315773;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0170315773;
36497     +      END;
MPRINT(EM_DIAGRAM):   END;
36498     +    END;
MPRINT(EM_DIAGRAM):   END;
36499     +  END;
MPRINT(EM_DIAGRAM):   END;
36500     +
36501     +********** LEAF    49  NODE   388 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 49 NODE 388 ***************;
36502     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36503     +
36504     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36505     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36506     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36507     +    IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,
36508     +    '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,
36509     +    '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN
36510     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' , '49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' , '12' ,'26' ,'21' ,'51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
36511     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36512     +    END;
MPRINT(EM_DIAGRAM):   END;
36513     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36514     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36515     +    ELSE IF _ARBFMT_2 NOTIN (
36516     +      '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' ,
36517     +      '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,
36518     +      '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53' ,'42' ,'25' ,
36519     +      '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,
36520     +      '18' ,'19' ,'27' ,'44' ,'05' ,'22'
36521     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'01' ,'37' ,'31' ,'35' ,'28' ,'17' ,'11' ,'47' ,'49' ,'50' ,'43' , '45' ,'20' ,'16' ,'30' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' , '51' ,'29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'53'
,'42' ,'25' , '38' ,'48' ,'40' ,'13' ,'14' ,'03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' , '18' ,'19' ,'27' ,'44' ,'05' ,'22' ) THEN _BRANCH_ = 1;
36522     +  END;
MPRINT(EM_DIAGRAM):   END;
36523     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36524     +
36525     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36526     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
36527     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36528     +      IF _ARBFMT_12 IN ('2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' ,
36529     +      '13' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ,'3' ,'11' ,'12' ,'9' ,'7' ,'5' ,'8' ,'6' ,'10' , '13' ) THEN DO;
36530     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36531     +      END;
MPRINT(EM_DIAGRAM):   END;
36532     +
36533     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36534     +       _ARB_F_ + 0.0003581064;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0003581064;
36535     +      END;
MPRINT(EM_DIAGRAM):   END;
36536     +    END;
MPRINT(EM_DIAGRAM):   END;
36537     +  END;
MPRINT(EM_DIAGRAM):   END;
36538     +
36539     +********** LEAF    50  NODE   389 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 50 NODE 389 ***************;
36540     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36541     +
36542     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36543     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36544     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36545     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' ,
36546     +    '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' ,
36547     +    '22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' , '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' , '22' ) THEN DO;
36548     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36549     +    END;
MPRINT(EM_DIAGRAM):   END;
36550     +
36551     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36552     +
36553     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36554     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36555     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36556     +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
36557     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36558     +      END;
MPRINT(EM_DIAGRAM):   END;
36559     +
36560     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36561     +       _ARB_F_ + -0.015417243;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.015417243;
36562     +      END;
MPRINT(EM_DIAGRAM):   END;
36563     +    END;
MPRINT(EM_DIAGRAM):   END;
36564     +  END;
MPRINT(EM_DIAGRAM):   END;
36565     +
36566     +********** LEAF    51  NODE   390 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 51 NODE 390 ***************;
36567     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36568     +
36569     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36570     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36571     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36572     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' ,
36573     +    '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' ,
36574     +    '22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'38' ,'48' ,'40' ,'13' ,'14' , '03' ,'46' ,'07' ,'34' ,'23' ,'02' ,'41' ,'18' ,'19' ,'27' ,'44' ,'05' , '22' ) THEN DO;
36575     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36576     +    END;
MPRINT(EM_DIAGRAM):   END;
36577     +
36578     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36579     +
36580     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36581     +    _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
36582     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36583     +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
36584     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36585     +      END;
MPRINT(EM_DIAGRAM):   END;
36586     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36587     +       IF MISSING( PEP_STAR  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( PEP_STAR ) THEN _BRANCH_ = 2;
36588     +      ELSE IF _ARBFMT_12 NOTIN (
36589     +        '1' ,'0'
36590     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'0' ) THEN _BRANCH_ = 2;
36591     +    END;
MPRINT(EM_DIAGRAM):   END;
36592     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36593     +       _ARB_F_ + -0.000399174;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000399174;
36594     +      END;
MPRINT(EM_DIAGRAM):   END;
36595     +    END;
MPRINT(EM_DIAGRAM):   END;
36596     +  END;
MPRINT(EM_DIAGRAM):   END;
36597     +
36598     +********** LEAF    52  NODE   394 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 52 NODE 394 ***************;
36599     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36600     +
36601     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36602     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36603     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36604     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,
36605     +    '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,
36606     +    '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' , '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' , '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
36607     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36608     +    END;
MPRINT(EM_DIAGRAM):   END;
36609     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36610     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36611     +    ELSE IF _ARBFMT_2 NOTIN (
36612     +      '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' ,
36613     +      '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' ,
36614     +      '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,
36615     +      '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,
36616     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
36617     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' , '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40'
,'13' ,'28' , '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 1;
36618     +  END;
MPRINT(EM_DIAGRAM):   END;
36619     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36620     +
36621     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36622     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
36623     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36624     +      IF _ARBFMT_12 IN ('1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ) THEN DO;
36625     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36626     +      END;
MPRINT(EM_DIAGRAM):   END;
36627     +
36628     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36629     +       _ARB_F_ + 0.0131102809;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0131102809;
36630     +      END;
MPRINT(EM_DIAGRAM):   END;
36631     +    END;
MPRINT(EM_DIAGRAM):   END;
36632     +  END;
MPRINT(EM_DIAGRAM):   END;
36633     +
36634     +********** LEAF    53  NODE   395 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 53 NODE 395 ***************;
36635     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36636     +
36637     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36638     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36639     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36640     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,
36641     +    '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,
36642     +    '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' , '49' ,'50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' , '21' ,'51' ,'44' ,'39' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
36643     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36644     +    END;
MPRINT(EM_DIAGRAM):   END;
36645     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36646     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36647     +    ELSE IF _ARBFMT_2 NOTIN (
36648     +      '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' ,
36649     +      '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' ,
36650     +      '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,
36651     +      '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,
36652     +      '27' ,'26' ,'29' ,'05' ,'22' ,'06'
36653     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'37' ,'38' ,'35' ,'11' ,'47' ,'49' ,'50' ,'43' , '46' ,'45' ,'30' ,'07' ,'34' ,'09' ,'02' ,'08' ,'12' ,'21' ,'51' ,'44' , '39' ,'33' ,'32' ,'52' ,'10' ,'25' ,'01' ,'48' ,'31' ,'40'
,'13' ,'28' , '14' ,'17' ,'03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' , '27' ,'26' ,'29' ,'05' ,'22' ,'06' ) THEN _BRANCH_ = 1;
36654     +  END;
MPRINT(EM_DIAGRAM):   END;
36655     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36656     +
36657     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36658     +    _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
36659     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36660     +      IF _ARBFMT_12 IN ('3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN DO;
36661     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36662     +      END;
MPRINT(EM_DIAGRAM):   END;
36663     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36664     +       IF MISSING( RECENT_RESPONSE_COUNT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_RESPONSE_COUNT ) THEN _BRANCH_ = 2;
36665     +      ELSE IF _ARBFMT_12 NOTIN (
36666     +        '1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ,'3' ,'11' ,'12' ,'7' ,'5' ,'8'
36667     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '1' ,'2' ,'4' ,'0' ,'9' ,'6' ,'10' ,'3' ,'11' ,'12' ,'7' ,'5' ,'8' ) THEN _BRANCH_ = 2;
36668     +    END;
MPRINT(EM_DIAGRAM):   END;
36669     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36670     +       _ARB_F_ + -0.005602028;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005602028;
36671     +      END;
MPRINT(EM_DIAGRAM):   END;
36672     +    END;
MPRINT(EM_DIAGRAM):   END;
36673     +  END;
MPRINT(EM_DIAGRAM):   END;
36674     +
36675     +********** LEAF    54  NODE   396 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 54 NODE 396 ***************;
36676     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36677     +
36678     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36679     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36680     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36681     +    IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' ,
36682     +    '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' ,
36683     +    '29' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' , '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' , '29' ,'05' ,'22' ,'06' ) THEN DO;
36684     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36685     +    END;
MPRINT(EM_DIAGRAM):   END;
36686     +
36687     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36688     +
36689     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36690     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
36691     +      LAST_GIFT_AMT  <                 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 15.5 THEN DO;
36692     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36693     +      END;
MPRINT(EM_DIAGRAM):   END;
36694     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36695     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 1;
36696     +    END;
MPRINT(EM_DIAGRAM):   END;
36697     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36698     +       _ARB_F_ + -0.013335318;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.013335318;
36699     +      END;
MPRINT(EM_DIAGRAM):   END;
36700     +    END;
MPRINT(EM_DIAGRAM):   END;
36701     +  END;
MPRINT(EM_DIAGRAM):   END;
36702     +
36703     +********** LEAF    55  NODE   397 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 55 NODE 397 ***************;
36704     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36705     +
36706     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36707     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36708     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36709     +    IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' ,
36710     +    '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' ,
36711     +    '29' ,'05' ,'22' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'01' ,'48' ,'31' ,'40' ,'13' ,'28' ,'14' ,'17' , '03' ,'20' ,'16' ,'23' ,'41' ,'15' ,'18' ,'36' ,'24' ,'19' ,'27' ,'26' , '29' ,'05' ,'22' ,'06' ) THEN DO;
36712     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36713     +    END;
MPRINT(EM_DIAGRAM):   END;
36714     +
36715     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36716     +
36717     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36718     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
36719     +                      15.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 15.5 <= LAST_GIFT_AMT THEN DO;
36720     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36721     +      END;
MPRINT(EM_DIAGRAM):   END;
36722     +
36723     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36724     +       _ARB_F_ + 0.0030101028;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0030101028;
36725     +      END;
MPRINT(EM_DIAGRAM):   END;
36726     +    END;
MPRINT(EM_DIAGRAM):   END;
36727     +  END;
MPRINT(EM_DIAGRAM):   END;
36728     +
36729     +********** LEAF    56  NODE   401 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 56 NODE 401 ***************;
36730     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36731     +
36732     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36733     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
36734     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36735     +    IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
36736     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36737     +    END;
MPRINT(EM_DIAGRAM):   END;
36738     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36739     +     IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
36740     +    ELSE IF _ARBFMT_12 NOTIN (
36741     +      '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
36742     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
36743     +  END;
MPRINT(EM_DIAGRAM):   END;
36744     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36745     +
36746     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36747     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36748     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36749     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,
36750     +      '40' ,'28' ,'14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,
36751     +      '18' ,'36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' , '40' ,'28' ,'14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' , '18' ,'36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ) THEN DO;
36752     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36753     +      END;
MPRINT(EM_DIAGRAM):   END;
36754     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36755     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36756     +      ELSE IF _ARBFMT_2 NOTIN (
36757     +        '.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,'40' ,'28' ,
36758     +        '14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' ,
36759     +        '36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ,'25' ,'38' ,'13' ,
36760     +        '17' ,'47' ,'03' ,'49' ,'50' ,'43' ,'46' ,'16' ,'30' ,'41' ,'08' ,
36761     +        '27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,'32' ,'52' ,'10'
36762     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'42' ,'01' ,'37' ,'48' ,'31' ,'35' ,'40' ,'28' , '14' ,'11' ,'45' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'15' ,'18' , '36' ,'24' ,'12' ,'19' ,'51' ,'05' ,'33' ,'22' ,'25' ,'38' ,'13' , '17'
,'47' ,'03' ,'49' ,'50' ,'43' ,'46' ,'16' ,'30' ,'41' ,'08' , '27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 1;
36763     +    END;
MPRINT(EM_DIAGRAM):   END;
36764     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36765     +       _ARB_F_ + -0.016465268;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.016465268;
36766     +      END;
MPRINT(EM_DIAGRAM):   END;
36767     +    END;
MPRINT(EM_DIAGRAM):   END;
36768     +  END;
MPRINT(EM_DIAGRAM):   END;
36769     +
36770     +********** LEAF    57  NODE   402 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 57 NODE 402 ***************;
36771     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36772     +
36773     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36774     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
36775     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36776     +    IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
36777     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36778     +    END;
MPRINT(EM_DIAGRAM):   END;
36779     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36780     +     IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
36781     +    ELSE IF _ARBFMT_12 NOTIN (
36782     +      '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
36783     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
36784     +  END;
MPRINT(EM_DIAGRAM):   END;
36785     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36786     +
36787     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36788     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36789     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36790     +      IF _ARBFMT_2 IN ('25' ,'38' ,'13' ,'17' ,'47' ,'03' ,'49' ,'50' ,'43' ,
36791     +      '46' ,'16' ,'30' ,'41' ,'08' ,'27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' ,
36792     +      '32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('25' ,'38' ,'13' ,'17' ,'47' ,'03' ,'49' ,'50' ,'43' , '46' ,'16' ,'30' ,'41' ,'08' ,'27' ,'26' ,'21' ,'44' ,'29' ,'39' ,'06' , '32' ,'52' ,'10' ) THEN DO;
36793     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36794     +      END;
MPRINT(EM_DIAGRAM):   END;
36795     +
36796     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36797     +       _ARB_F_ + 0.0047913722;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0047913722;
36798     +      END;
MPRINT(EM_DIAGRAM):   END;
36799     +    END;
MPRINT(EM_DIAGRAM):   END;
36800     +  END;
MPRINT(EM_DIAGRAM):   END;
36801     +
36802     +********** LEAF    58  NODE   403 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 58 NODE 403 ***************;
36803     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36804     +
36805     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36806     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
36807     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36808     +    IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
36809     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36810     +    END;
MPRINT(EM_DIAGRAM):   END;
36811     +
36812     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36813     +
36814     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36815     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36816     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36817     +      IF _ARBFMT_2 IN ('.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,
36818     +      '30' ,'23' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,
36819     +      '22' ,'06' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' , '30' ,'23' ,'09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' , '22' ,'06' ,'10' ) THEN DO;
36820     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36821     +      END;
MPRINT(EM_DIAGRAM):   END;
36822     +
36823     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36824     +       _ARB_F_ + 0.0170419009;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0170419009;
36825     +      END;
MPRINT(EM_DIAGRAM):   END;
36826     +    END;
MPRINT(EM_DIAGRAM):   END;
36827     +  END;
MPRINT(EM_DIAGRAM):   END;
36828     +
36829     +********** LEAF    59  NODE   404 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 59 NODE 404 ***************;
36830     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36831     +
36832     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36833     +  _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
36834     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36835     +    IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
36836     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36837     +    END;
MPRINT(EM_DIAGRAM):   END;
36838     +
36839     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36840     +
36841     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36842     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36843     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36844     +      IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,
36845     +      '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,'41' ,
36846     +      '18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' , '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,'41' , '18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN DO;
36847     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36848     +      END;
MPRINT(EM_DIAGRAM):   END;
36849     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36850     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
36851     +      ELSE IF _ARBFMT_2 NOTIN (
36852     +        '.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,'30' ,'23' ,
36853     +        '09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,'22' ,
36854     +        '06' ,'10' ,'04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,
36855     +        '28' ,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' ,
36856     +        '41' ,'18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52'
36857     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'37' ,'48' ,'14' ,'49' ,'50' ,'43' ,'45' ,'30' ,'23' , '09' ,'15' ,'36' ,'24' ,'08' ,'12' ,'26' ,'21' ,'05' ,'33' ,'22' , '06' ,'10' ,'04' ,'42' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' , '28'
,'17' ,'11' ,'47' ,'03' ,'46' ,'20' ,'16' ,'07' ,'34' ,'02' , '41' ,'18' ,'19' ,'27' ,'51' ,'44' ,'29' ,'39' ,'32' ,'52' ) THEN _BRANCH_ = 2;
36858     +    END;
MPRINT(EM_DIAGRAM):   END;
36859     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36860     +       _ARB_F_ + -0.000805551;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000805551;
36861     +      END;
MPRINT(EM_DIAGRAM):   END;
36862     +    END;
MPRINT(EM_DIAGRAM):   END;
36863     +  END;
MPRINT(EM_DIAGRAM):   END;
36864     +
36865     +********** LEAF    60  NODE   408 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 60 NODE 408 ***************;
36866     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36867     +
36868     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36869     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36870     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36871     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,
36872     +    '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,
36873     +    '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN
36874     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' , '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' , '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN DO;
36875     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36876     +    END;
MPRINT(EM_DIAGRAM):   END;
36877     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36878     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36879     +    ELSE IF _ARBFMT_2 NOTIN (
36880     +      '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' ,
36881     +      '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' ,
36882     +      '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31' ,'35' ,'14' ,
36883     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,
36884     +      '27' ,'29' ,'05' ,'06' ,'32' ,'10'
36885     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' , '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' , '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31'
,'35' ,'14' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' , '27' ,'29' ,'05' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 1;
36886     +  END;
MPRINT(EM_DIAGRAM):   END;
36887     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36888     +
36889     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36890     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
36891     +      FILE_CARD_GIFT  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND FILE_CARD_GIFT < 3.5 THEN DO;
36892     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36893     +      END;
MPRINT(EM_DIAGRAM):   END;
36894     +
36895     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36896     +       _ARB_F_ + 0.0034237854;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0034237854;
36897     +      END;
MPRINT(EM_DIAGRAM):   END;
36898     +    END;
MPRINT(EM_DIAGRAM):   END;
36899     +  END;
MPRINT(EM_DIAGRAM):   END;
36900     +
36901     +********** LEAF    61  NODE   409 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 61 NODE 409 ***************;
36902     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36903     +
36904     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36905     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36906     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36907     +    IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,
36908     +    '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,
36909     +    '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN
36910     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' , '13' ,'28' ,'17' ,'11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' , '15' ,'18' ,'24' ,'26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ) THEN DO;
36911     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36912     +    END;
MPRINT(EM_DIAGRAM):   END;
36913     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36914     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
36915     +    ELSE IF _ARBFMT_2 NOTIN (
36916     +      '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' ,
36917     +      '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' ,
36918     +      '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31' ,'35' ,'14' ,
36919     +      '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,
36920     +      '27' ,'29' ,'05' ,'06' ,'32' ,'10'
36921     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'37' ,'38' ,'48' ,'40' ,'13' ,'28' ,'17' , '11' ,'47' ,'03' ,'49' ,'20' ,'16' ,'34' ,'23' ,'09' ,'15' ,'18' ,'24' , '26' ,'21' ,'51' ,'44' ,'39' ,'33' ,'22' ,'52' ,'42' ,'31'
,'35' ,'14' , '50' ,'43' ,'46' ,'45' ,'30' ,'07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' , '27' ,'29' ,'05' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 1;
36922     +  END;
MPRINT(EM_DIAGRAM):   END;
36923     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36924     +
36925     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36926     +      IF  NOT MISSING(FILE_CARD_GIFT ) AND
36927     +                       3.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_CARD_GIFT ) AND 3.5 <= FILE_CARD_GIFT THEN DO;
36928     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36929     +      END;
MPRINT(EM_DIAGRAM):   END;
36930     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36931     +       IF MISSING( FILE_CARD_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_CARD_GIFT ) THEN _BRANCH_ = 2;
36932     +    END;
MPRINT(EM_DIAGRAM):   END;
36933     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36934     +       _ARB_F_ + -0.011715717;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.011715717;
36935     +      END;
MPRINT(EM_DIAGRAM):   END;
36936     +    END;
MPRINT(EM_DIAGRAM):   END;
36937     +  END;
MPRINT(EM_DIAGRAM):   END;
36938     +
36939     +********** LEAF    62  NODE   410 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 62 NODE 410 ***************;
36940     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36941     +
36942     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36943     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36944     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36945     +    IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' ,
36946     +    '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' ,
36947     +    '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' , '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' , '10' ) THEN DO;
36948     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36949     +    END;
MPRINT(EM_DIAGRAM):   END;
36950     +
36951     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36952     +
36953     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36954     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
36955     +      LAST_GIFT_AMT  <                 14.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 14.5 THEN DO;
36956     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36957     +      END;
MPRINT(EM_DIAGRAM):   END;
36958     +
36959     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36960     +       _ARB_F_ + -0.001082103;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001082103;
36961     +      END;
MPRINT(EM_DIAGRAM):   END;
36962     +    END;
MPRINT(EM_DIAGRAM):   END;
36963     +  END;
MPRINT(EM_DIAGRAM):   END;
36964     +
36965     +********** LEAF    63  NODE   411 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 63 NODE 411 ***************;
36966     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36967     +
36968     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36969     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36970     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36971     +    IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' ,
36972     +    '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' ,
36973     +    '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'31' ,'35' ,'14' ,'50' ,'43' ,'46' ,'45' ,'30' , '07' ,'02' ,'41' ,'36' ,'08' ,'12' ,'19' ,'27' ,'29' ,'05' ,'06' ,'32' , '10' ) THEN DO;
36974     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36975     +    END;
MPRINT(EM_DIAGRAM):   END;
36976     +
36977     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36978     +
36979     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36980     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
36981     +                      14.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 14.5 <= LAST_GIFT_AMT THEN DO;
36982     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36983     +      END;
MPRINT(EM_DIAGRAM):   END;
36984     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
36985     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 2;
36986     +    END;
MPRINT(EM_DIAGRAM):   END;
36987     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
36988     +       _ARB_F_ + 0.0141158976;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0141158976;
36989     +      END;
MPRINT(EM_DIAGRAM):   END;
36990     +    END;
MPRINT(EM_DIAGRAM):   END;
36991     +  END;
MPRINT(EM_DIAGRAM):   END;
36992     +
36993     +********** LEAF    64  NODE   415 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 64 NODE 415 ***************;
36994     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
36995     +
36996     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36997     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
36998     +    FILE_AVG_GIFT  <                10.07 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
36999     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37000     +    END;
MPRINT(EM_DIAGRAM):   END;
37001     +
37002     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37003     +
37004     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37005     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37006     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37007     +      IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,
37008     +      '43' ,'45' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,
37009     +      '21' ,'51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' , '43' ,'45' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' , '21' ,'51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ) THEN DO;
37010     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37011     +      END;
MPRINT(EM_DIAGRAM):   END;
37012     +
37013     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37014     +       _ARB_F_ + 0.0046891133;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0046891133;
37015     +      END;
MPRINT(EM_DIAGRAM):   END;
37016     +    END;
MPRINT(EM_DIAGRAM):   END;
37017     +  END;
MPRINT(EM_DIAGRAM):   END;
37018     +
37019     +********** LEAF    65  NODE   416 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 65 NODE 416 ***************;
37020     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37021     +
37022     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37023     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
37024     +    FILE_AVG_GIFT  <                10.07 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 10.07 THEN DO;
37025     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37026     +    END;
MPRINT(EM_DIAGRAM):   END;
37027     +
37028     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37029     +
37030     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37031     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37032     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37033     +      IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' ,
37034     +      '47' ,'03' ,'49' ,'46' ,'20' ,'30' ,'23' ,'41' ,'36' ,'24' ,'27' ,'26' ,
37035     +      '39' ,'33' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'37' ,'35' ,'40' ,'28' ,'14' ,'17' ,'11' , '47' ,'03' ,'49' ,'46' ,'20' ,'30' ,'23' ,'41' ,'36' ,'24' ,'27' ,'26' , '39' ,'33' ,'06' ,'52' ) THEN DO;
37036     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37037     +      END;
MPRINT(EM_DIAGRAM):   END;
37038     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37039     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37040     +      ELSE IF _ARBFMT_2 NOTIN (
37041     +        '.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,'43' ,'45' ,
37042     +        '16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,
37043     +        '51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ,'04' ,'53' ,'37' ,'35' ,
37044     +        '40' ,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'46' ,'20' ,'30' ,
37045     +        '23' ,'41' ,'36' ,'24' ,'27' ,'26' ,'39' ,'33' ,'06' ,'52'
37046     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'13' ,'50' ,'43' ,'45' , '16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' , '51' ,'44' ,'29' ,'05' ,'22' ,'32' ,'10' ,'04' ,'53' ,'37' ,'35' , '40'
,'28' ,'14' ,'17' ,'11' ,'47' ,'03' ,'49' ,'46' ,'20' ,'30' , '23' ,'41' ,'36' ,'24' ,'27' ,'26' ,'39' ,'33' ,'06' ,'52' ) THEN _BRANCH_ = 2;
37047     +    END;
MPRINT(EM_DIAGRAM):   END;
37048     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37049     +       _ARB_F_ + -0.017613613;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.017613613;
37050     +      END;
MPRINT(EM_DIAGRAM):   END;
37051     +    END;
MPRINT(EM_DIAGRAM):   END;
37052     +  END;
MPRINT(EM_DIAGRAM):   END;
37053     +
37054     +********** LEAF    66  NODE   417 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 66 NODE 417 ***************;
37055     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37056     +
37057     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37058     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
37059     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
37060     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37061     +    END;
MPRINT(EM_DIAGRAM):   END;
37062     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37063     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
37064     +  END;
MPRINT(EM_DIAGRAM):   END;
37065     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37066     +
37067     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37068     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37069     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37070     +      IF _ARBFMT_2 IN ('.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,
37071     +      '20' ,'16' ,'30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,
37072     +      '29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' , '20' ,'16' ,'30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' , '29' ,'39' ,'33' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
37073     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37074     +      END;
MPRINT(EM_DIAGRAM):   END;
37075     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37076     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
37077     +      ELSE IF _ARBFMT_2 NOTIN (
37078     +        '.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,'20' ,'16' ,
37079     +        '30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,'29' ,
37080     +        '39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'25' ,'01' ,'37' ,'38' ,
37081     +        '31' ,'35' ,'40' ,'13' ,'14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,
37082     +        '34' ,'09' ,'02' ,'15' ,'24' ,'12' ,'21' ,'51' ,'05' ,'22'
37083     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'53' ,'42' ,'48' ,'28' ,'17' ,'11' ,'49' ,'45' ,'20' ,'16' , '30' ,'23' ,'41' ,'18' ,'36' ,'08' ,'19' ,'27' ,'26' ,'44' ,'29' , '39' ,'33' ,'06' ,'32' ,'52' ,'10' ,'04' ,'25' ,'01' ,'37' ,'38' , '31'
,'35' ,'40' ,'13' ,'14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' , '34' ,'09' ,'02' ,'15' ,'24' ,'12' ,'21' ,'51' ,'05' ,'22' ) THEN _BRANCH_ = 1;
37084     +    END;
MPRINT(EM_DIAGRAM):   END;
37085     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37086     +       _ARB_F_ + 0.0158227432;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0158227432;
37087     +      END;
MPRINT(EM_DIAGRAM):   END;
37088     +    END;
MPRINT(EM_DIAGRAM):   END;
37089     +  END;
MPRINT(EM_DIAGRAM):   END;
37090     +
37091     +********** LEAF    67  NODE   418 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 67 NODE 418 ***************;
37092     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37093     +
37094     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37095     +    IF  NOT MISSING(FILE_AVG_GIFT ) AND
37096     +                   10.07 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND 10.07 <= FILE_AVG_GIFT THEN DO;
37097     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37098     +    END;
MPRINT(EM_DIAGRAM):   END;
37099     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37100     +     IF MISSING( FILE_AVG_GIFT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( FILE_AVG_GIFT ) THEN _BRANCH_ = 2;
37101     +  END;
MPRINT(EM_DIAGRAM):   END;
37102     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37103     +
37104     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37105     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37106     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37107     +      IF _ARBFMT_2 IN ('04' ,'25' ,'01' ,'37' ,'38' ,'31' ,'35' ,'40' ,'13' ,
37108     +      '14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,'34' ,'09' ,'02' ,'15' ,'24' ,
37109     +      '12' ,'21' ,'51' ,'05' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'25' ,'01' ,'37' ,'38' ,'31' ,'35' ,'40' ,'13' , '14' ,'47' ,'03' ,'50' ,'43' ,'46' ,'07' ,'34' ,'09' ,'02' ,'15' ,'24' , '12' ,'21' ,'51' ,'05' ,'22' ) THEN DO;
37110     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37111     +      END;
MPRINT(EM_DIAGRAM):   END;
37112     +
37113     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37114     +       _ARB_F_ + -0.003022749;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.003022749;
37115     +      END;
MPRINT(EM_DIAGRAM):   END;
37116     +    END;
MPRINT(EM_DIAGRAM):   END;
37117     +  END;
MPRINT(EM_DIAGRAM):   END;
37118     +
37119     +********** LEAF    68  NODE   422 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 68 NODE 422 ***************;
37120     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37121     +
37122     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37123     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37124     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37125     +    IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,
37126     +    '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,
37127     +    '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' , '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' , '10' ) THEN DO;
37128     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37129     +    END;
MPRINT(EM_DIAGRAM):   END;
37130     +
37131     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37132     +
37133     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37134     +    _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
37135     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37136     +      IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'3' ,'2' ,'5' ,'8' ) THEN DO;
37137     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37138     +      END;
MPRINT(EM_DIAGRAM):   END;
37139     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37140     +       IF MISSING( RECENT_CARD_RESPONSE_COUNT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_CARD_RESPONSE_COUNT ) THEN _BRANCH_ = 1;
37141     +      ELSE IF _ARBFMT_12 NOTIN (
37142     +        '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6'
37143     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '4' ,'3' ,'2' ,'5' ,'8' ,'0' ,'1' ,'7' ,'6' ) THEN _BRANCH_ = 1;
37144     +    END;
MPRINT(EM_DIAGRAM):   END;
37145     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37146     +       _ARB_F_ + 0.0013638799;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0013638799;
37147     +      END;
MPRINT(EM_DIAGRAM):   END;
37148     +    END;
MPRINT(EM_DIAGRAM):   END;
37149     +  END;
MPRINT(EM_DIAGRAM):   END;
37150     +
37151     +********** LEAF    69  NODE   423 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 69 NODE 423 ***************;
37152     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37153     +
37154     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37155     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37156     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37157     +    IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,
37158     +    '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,
37159     +    '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' , '30' ,'23' ,'41' ,'18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' , '10' ) THEN DO;
37160     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37161     +    END;
MPRINT(EM_DIAGRAM):   END;
37162     +
37163     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37164     +
37165     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37166     +    _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_CARD_RESPONSE_COUNT , BEST12.);
37167     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37168     +      IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ,'7' ,'6' ) THEN DO;
37169     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37170     +      END;
MPRINT(EM_DIAGRAM):   END;
37171     +
37172     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37173     +       _ARB_F_ + 0.0166912836;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0166912836;
37174     +      END;
MPRINT(EM_DIAGRAM):   END;
37175     +    END;
MPRINT(EM_DIAGRAM):   END;
37176     +  END;
MPRINT(EM_DIAGRAM):   END;
37177     +
37178     +********** LEAF    70  NODE   424 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 70 NODE 424 ***************;
37179     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37180     +
37181     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37182     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37183     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37184     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,
37185     +    '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,
37186     +    '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN
37187     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' , '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' , '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN DO;
37188     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37189     +    END;
MPRINT(EM_DIAGRAM):   END;
37190     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37191     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37192     +    ELSE IF _ARBFMT_2 NOTIN (
37193     +      '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' ,
37194     +      '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' ,
37195     +      '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'03' ,
37196     +      '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' ,
37197     +      '19' ,'26' ,'39' ,'22' ,'06' ,'52'
37198     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' , '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' , '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17'
,'11' ,'03' , '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' , '19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN _BRANCH_ = 2;
37199     +  END;
MPRINT(EM_DIAGRAM):   END;
37200     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37201     +
37202     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37203     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
37204     +      LAST_GIFT_AMT  <                 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 19.5 THEN DO;
37205     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37206     +      END;
MPRINT(EM_DIAGRAM):   END;
37207     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37208     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 1;
37209     +    END;
MPRINT(EM_DIAGRAM):   END;
37210     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37211     +       _ARB_F_ + -0.010705433;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.010705433;
37212     +      END;
MPRINT(EM_DIAGRAM):   END;
37213     +    END;
MPRINT(EM_DIAGRAM):   END;
37214     +  END;
MPRINT(EM_DIAGRAM):   END;
37215     +
37216     +********** LEAF    71  NODE   425 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 71 NODE 425 ***************;
37217     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37218     +
37219     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37220     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37221     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37222     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,
37223     +    '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,
37224     +    '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN
37225     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' , '28' ,'14' ,'17' ,'11' ,'03' ,'49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' , '15' ,'36' ,'24' ,'08' ,'12' ,'19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN DO;
37226     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37227     +    END;
MPRINT(EM_DIAGRAM):   END;
37228     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37229     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37230     +    ELSE IF _ARBFMT_2 NOTIN (
37231     +      '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' ,
37232     +      '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' ,
37233     +      '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,'11' ,'03' ,
37234     +      '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' ,
37235     +      '19' ,'26' ,'39' ,'22' ,'06' ,'52'
37236     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'37' ,'31' ,'47' ,'50' ,'43' ,'45' ,'20' ,'30' ,'23' ,'41' , '18' ,'27' ,'21' ,'51' ,'44' ,'29' ,'05' ,'33' ,'32' ,'10' ,'04' ,'53' , '42' ,'01' ,'38' ,'48' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17'
,'11' ,'03' , '49' ,'46' ,'16' ,'07' ,'34' ,'09' ,'02' ,'15' ,'36' ,'24' ,'08' ,'12' , '19' ,'26' ,'39' ,'22' ,'06' ,'52' ) THEN _BRANCH_ = 2;
37237     +  END;
MPRINT(EM_DIAGRAM):   END;
37238     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37239     +
37240     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37241     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
37242     +                      19.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 19.5 <= LAST_GIFT_AMT THEN DO;
37243     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37244     +      END;
MPRINT(EM_DIAGRAM):   END;
37245     +
37246     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37247     +       _ARB_F_ + 0.0057892462;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0057892462;
37248     +      END;
MPRINT(EM_DIAGRAM):   END;
37249     +    END;
MPRINT(EM_DIAGRAM):   END;
37250     +  END;
MPRINT(EM_DIAGRAM):   END;
37251     +
37252     +********** LEAF    72  NODE   429 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 72 NODE 429 ***************;
37253     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37254     +
37255     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37256     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37257     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37258     +    IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,
37259     +    '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,
37260     +    '22' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' , '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' , '22' ,'06' ,'32' ,'10' ) THEN DO;
37261     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37262     +    END;
MPRINT(EM_DIAGRAM):   END;
37263     +
37264     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37265     +
37266     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37267     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
37268     +      MEDIAN_HOME_VALUE  <                  802 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 802 THEN DO;
37269     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37270     +      END;
MPRINT(EM_DIAGRAM):   END;
37271     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37272     +       IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
37273     +    END;
MPRINT(EM_DIAGRAM):   END;
37274     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37275     +       _ARB_F_ + 0.0121951614;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0121951614;
37276     +      END;
MPRINT(EM_DIAGRAM):   END;
37277     +    END;
MPRINT(EM_DIAGRAM):   END;
37278     +  END;
MPRINT(EM_DIAGRAM):   END;
37279     +
37280     +********** LEAF    73  NODE   430 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 73 NODE 430 ***************;
37281     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37282     +
37283     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37284     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37285     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37286     +    IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,
37287     +    '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,
37288     +    '22' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' , '16' ,'07' ,'34' ,'23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' , '22' ,'06' ,'32' ,'10' ) THEN DO;
37289     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37290     +    END;
MPRINT(EM_DIAGRAM):   END;
37291     +
37292     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37293     +
37294     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37295     +      IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
37296     +                       802 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 802 <= MEDIAN_HOME_VALUE THEN DO;
37297     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37298     +      END;
MPRINT(EM_DIAGRAM):   END;
37299     +
37300     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37301     +       _ARB_F_ + -0.001072422;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001072422;
37302     +      END;
MPRINT(EM_DIAGRAM):   END;
37303     +    END;
MPRINT(EM_DIAGRAM):   END;
37304     +  END;
MPRINT(EM_DIAGRAM):   END;
37305     +
37306     +********** LEAF    74  NODE   431 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 74 NODE 431 ***************;
37307     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37308     +
37309     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37310     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37311     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37312     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,
37313     +    '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,
37314     +    '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' , '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' , '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
37315     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37316     +    END;
MPRINT(EM_DIAGRAM):   END;
37317     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37318     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37319     +    ELSE IF _ARBFMT_2 NOTIN (
37320     +      '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' ,
37321     +      '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' ,
37322     +      '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'28' ,'14' ,
37323     +      '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' ,
37324     +      '19' ,'21' ,'51' ,'29' ,'05' ,'52'
37325     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' , '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35'
,'28' ,'14' , '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' , '19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN _BRANCH_ = 2;
37326     +  END;
MPRINT(EM_DIAGRAM):   END;
37327     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37328     +
37329     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37330     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
37331     +      LAST_GIFT_AMT  <                 11.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND LAST_GIFT_AMT < 11.5 THEN DO;
37332     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37333     +      END;
MPRINT(EM_DIAGRAM):   END;
37334     +
37335     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37336     +       _ARB_F_ + -0.014968345;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.014968345;
37337     +      END;
MPRINT(EM_DIAGRAM):   END;
37338     +    END;
MPRINT(EM_DIAGRAM):   END;
37339     +  END;
MPRINT(EM_DIAGRAM):   END;
37340     +
37341     +********** LEAF    75  NODE   432 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 75 NODE 432 ***************;
37342     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37343     +
37344     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37345     +  _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37346     +   %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37347     +    IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,
37348     +    '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,
37349     +    '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' , '28' ,'14' ,'17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' , '24' ,'12' ,'19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN DO;
37350     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37351     +    END;
MPRINT(EM_DIAGRAM):   END;
37352     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37353     +     IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37354     +    ELSE IF _ARBFMT_2 NOTIN (
37355     +      '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' ,
37356     +      '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' ,
37357     +      '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35' ,'28' ,'14' ,
37358     +      '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' ,
37359     +      '19' ,'21' ,'51' ,'29' ,'05' ,'52'
37360     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'37' ,'40' ,'13' ,'11' ,'47' ,'49' ,'43' ,'45' ,'16' ,'07' ,'34' , '23' ,'09' ,'36' ,'08' ,'27' ,'26' ,'44' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ,'04' ,'53' ,'42' ,'25' ,'01' ,'38' ,'48' ,'31' ,'35'
,'28' ,'14' , '17' ,'03' ,'50' ,'46' ,'20' ,'30' ,'02' ,'41' ,'15' ,'18' ,'24' ,'12' , '19' ,'21' ,'51' ,'29' ,'05' ,'52' ) THEN _BRANCH_ = 2;
37361     +  END;
MPRINT(EM_DIAGRAM):   END;
37362     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37363     +
37364     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37365     +      IF  NOT MISSING(LAST_GIFT_AMT ) AND
37366     +                      11.5 <= LAST_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LAST_GIFT_AMT ) AND 11.5 <= LAST_GIFT_AMT THEN DO;
37367     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37368     +      END;
MPRINT(EM_DIAGRAM):   END;
37369     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37370     +       IF MISSING( LAST_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( LAST_GIFT_AMT ) THEN _BRANCH_ = 2;
37371     +    END;
MPRINT(EM_DIAGRAM):   END;
37372     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37373     +       _ARB_F_ + -0.001491597;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.001491597;
37374     +      END;
MPRINT(EM_DIAGRAM):   END;
37375     +    END;
MPRINT(EM_DIAGRAM):   END;
37376     +  END;
MPRINT(EM_DIAGRAM):   END;
37377     +
37378     +********** LEAF    76  NODE   436 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 76 NODE 436 ***************;
37379     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37380     +
37381     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37382     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
37383     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37384     +    IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
37385     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37386     +    END;
MPRINT(EM_DIAGRAM):   END;
37387     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37388     +     IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
37389     +    ELSE IF _ARBFMT_12 NOTIN (
37390     +      '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0'
37391     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
37392     +  END;
MPRINT(EM_DIAGRAM):   END;
37393     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37394     +
37395     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37396     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37397     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37398     +      IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,
37399     +      '17' ,'03' ,'46' ,'16' ,'09' ,'26' ,'44' ,'39' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' , '17' ,'03' ,'46' ,'16' ,'09' ,'26' ,'44' ,'39' ) THEN DO;
37400     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37401     +      END;
MPRINT(EM_DIAGRAM):   END;
37402     +
37403     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37404     +       _ARB_F_ + -0.008380753;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008380753;
37405     +      END;
MPRINT(EM_DIAGRAM):   END;
37406     +    END;
MPRINT(EM_DIAGRAM):   END;
37407     +  END;
MPRINT(EM_DIAGRAM):   END;
37408     +
37409     +********** LEAF    77  NODE   437 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 77 NODE 437 ***************;
37410     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37411     +
37412     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37413     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
37414     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37415     +    IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'3' ,'9' ) THEN DO;
37416     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37417     +    END;
MPRINT(EM_DIAGRAM):   END;
37418     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37419     +     IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
37420     +    ELSE IF _ARBFMT_12 NOTIN (
37421     +      '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0'
37422     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'3' ,'9' ,'4' ,'7' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
37423     +  END;
MPRINT(EM_DIAGRAM):   END;
37424     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37425     +
37426     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37427     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37428     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37429     +      IF _ARBFMT_2 IN ('42' ,'37' ,'31' ,'35' ,'40' ,'14' ,'11' ,'47' ,'49' ,
37430     +      '50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,'23' ,'02' ,'41' ,'15' ,'18' ,
37431     +      '36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'21' ,'51' ,'29' ,'05' ,'33' ,'22' ,
37432     +      '06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'37' ,'31' ,'35' ,'40' ,'14' ,'11' ,'47' ,'49' , '50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,'23' ,'02' ,'41' ,'15' ,'18' , '36' ,'24' ,'08' ,'12' ,'19' ,'27' ,'21' ,'51' ,'29' ,'05' ,'33' ,'22' , '06' ,'32'
,'52' ,'10' ) THEN DO;
37433     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37434     +      END;
MPRINT(EM_DIAGRAM):   END;
37435     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37436     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37437     +      ELSE IF _ARBFMT_2 NOTIN (
37438     +        '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,'17' ,'03' ,
37439     +        '46' ,'16' ,'09' ,'26' ,'44' ,'39' ,'42' ,'37' ,'31' ,'35' ,'40' ,
37440     +        '14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' ,
37441     +        '23' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' ,
37442     +        '21' ,'51' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10'
37443     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'53' ,'25' ,'01' ,'38' ,'48' ,'13' ,'28' ,'17' ,'03' , '46' ,'16' ,'09' ,'26' ,'44' ,'39' ,'42' ,'37' ,'31' ,'35' ,'40' , '14' ,'11' ,'47' ,'49' ,'50' ,'43' ,'45' ,'20' ,'30' ,'07' ,'34' , '23'
,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'19' ,'27' , '21' ,'51' ,'29' ,'05' ,'33' ,'22' ,'06' ,'32' ,'52' ,'10' ) THEN _BRANCH_ = 2;
37444     +    END;
MPRINT(EM_DIAGRAM):   END;
37445     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37446     +       _ARB_F_ + 0.0087719007;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0087719007;
37447     +      END;
MPRINT(EM_DIAGRAM):   END;
37448     +    END;
MPRINT(EM_DIAGRAM):   END;
37449     +  END;
MPRINT(EM_DIAGRAM):   END;
37450     +
37451     +********** LEAF    78  NODE   435 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 78 NODE 435 ***************;
37452     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37453     +
37454     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37455     +  _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
37456     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37457     +    IF _ARBFMT_12 IN ('4' ,'7' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'7' ,'6' ,'8' ,'0' ) THEN DO;
37458     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37459     +    END;
MPRINT(EM_DIAGRAM):   END;
37460     +
37461     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37462     +     _ARB_F_ + -0.009577512;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.009577512;
37463     +    END;
MPRINT(EM_DIAGRAM):   END;
37464     +  END;
MPRINT(EM_DIAGRAM):   END;
37465     +
37466     +********** LEAF    79  NODE   439 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 79 NODE 439 ***************;
37467     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37468     +
37469     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37470     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37471     +    RECENT_AVG_GIFT_AMT  <                9.475 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 9.475 THEN DO;
37472     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37473     +    END;
MPRINT(EM_DIAGRAM):   END;
37474     +
37475     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37476     +     _ARB_F_ + -0.01145818;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.01145818;
37477     +    END;
MPRINT(EM_DIAGRAM):   END;
37478     +  END;
MPRINT(EM_DIAGRAM):   END;
37479     +
37480     +********** LEAF    80  NODE   441 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 80 NODE 441 ***************;
37481     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37482     +
37483     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37484     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37485     +                   9.475 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 9.475 <= RECENT_AVG_GIFT_AMT THEN DO;
37486     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37487     +    END;
MPRINT(EM_DIAGRAM):   END;
37488     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37489     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
37490     +  END;
MPRINT(EM_DIAGRAM):   END;
37491     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37492     +
37493     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37494     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37495     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37496     +      IF _ARBFMT_2 IN ('.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,
37497     +      '17' ,'11' ,'47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,
37498     +      '27' ,'26' ,'21' ,'05' ,'06' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' , '17' ,'11' ,'47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' , '27' ,'26' ,'21' ,'05' ,'06' ,'52' ) THEN DO;
37499     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37500     +      END;
MPRINT(EM_DIAGRAM):   END;
37501     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37502     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 1;
37503     +      ELSE IF _ARBFMT_2 NOTIN (
37504     +        '.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,'17' ,'11' ,
37505     +        '47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,'27' ,
37506     +        '26' ,'21' ,'05' ,'06' ,'52' ,'53' ,'42' ,'25' ,'37' ,'35' ,'14' ,
37507     +        '03' ,'50' ,'46' ,'45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,
37508     +        '08' ,'12' ,'51' ,'44' ,'29' ,'39' ,'33' ,'22' ,'32' ,'10'
37509     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'04' ,'01' ,'38' ,'48' ,'31' ,'40' ,'13' ,'28' ,'17' ,'11' , '47' ,'49' ,'43' ,'16' ,'34' ,'23' ,'02' ,'36' ,'24' ,'19' ,'27' , '26' ,'21' ,'05' ,'06' ,'52' ,'53' ,'42' ,'25' ,'37' ,'35' ,'14' , '03'
,'50' ,'46' ,'45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' , '08' ,'12' ,'51' ,'44' ,'29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN _BRANCH_ = 1;
37510     +    END;
MPRINT(EM_DIAGRAM):   END;
37511     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37512     +       _ARB_F_ + -0.002026914;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.002026914;
37513     +      END;
MPRINT(EM_DIAGRAM):   END;
37514     +    END;
MPRINT(EM_DIAGRAM):   END;
37515     +  END;
MPRINT(EM_DIAGRAM):   END;
37516     +
37517     +********** LEAF    81  NODE   442 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 81 NODE 442 ***************;
37518     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37519     +
37520     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37521     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37522     +                   9.475 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 9.475 <= RECENT_AVG_GIFT_AMT THEN DO;
37523     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37524     +    END;
MPRINT(EM_DIAGRAM):   END;
37525     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37526     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
37527     +  END;
MPRINT(EM_DIAGRAM):   END;
37528     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37529     +
37530     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37531     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37532     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37533     +      IF _ARBFMT_2 IN ('53' ,'42' ,'25' ,'37' ,'35' ,'14' ,'03' ,'50' ,'46' ,
37534     +      '45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,'08' ,'12' ,'51' ,'44' ,
37535     +      '29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('53' ,'42' ,'25' ,'37' ,'35' ,'14' ,'03' ,'50' ,'46' , '45' ,'20' ,'30' ,'07' ,'09' ,'41' ,'15' ,'18' ,'08' ,'12' ,'51' ,'44' , '29' ,'39' ,'33' ,'22' ,'32' ,'10' ) THEN DO;
37536     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37537     +      END;
MPRINT(EM_DIAGRAM):   END;
37538     +
37539     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37540     +       _ARB_F_ + 0.01107595;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.01107595;
37541     +      END;
MPRINT(EM_DIAGRAM):   END;
37542     +    END;
MPRINT(EM_DIAGRAM):   END;
37543     +  END;
MPRINT(EM_DIAGRAM):   END;
37544     +
37545     +********** LEAF    82  NODE   444 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 82 NODE 444 ***************;
37546     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37547     +
37548     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37549     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37550     +    RECENT_AVG_GIFT_AMT  <                8.845 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 8.845 THEN DO;
37551     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37552     +    END;
MPRINT(EM_DIAGRAM):   END;
37553     +
37554     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37555     +     _ARB_F_ + -0.011656018;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.011656018;
37556     +    END;
MPRINT(EM_DIAGRAM):   END;
37557     +  END;
MPRINT(EM_DIAGRAM):   END;
37558     +
37559     +********** LEAF    83  NODE   446 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 83 NODE 446 ***************;
37560     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37561     +
37562     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37563     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37564     +                   8.845 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 8.845 <= RECENT_AVG_GIFT_AMT THEN DO;
37565     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37566     +    END;
MPRINT(EM_DIAGRAM):   END;
37567     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37568     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
37569     +  END;
MPRINT(EM_DIAGRAM):   END;
37570     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37571     +
37572     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37573     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37574     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37575     +      IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
37576     +      '14' ,'17' ,'11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ) THEN
37577     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '14' ,'17' ,'11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ) THEN DO;
37578     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37579     +      END;
MPRINT(EM_DIAGRAM):   END;
37580     +
37581     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37582     +       _ARB_F_ + -0.005667742;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.005667742;
37583     +      END;
MPRINT(EM_DIAGRAM):   END;
37584     +    END;
MPRINT(EM_DIAGRAM):   END;
37585     +  END;
MPRINT(EM_DIAGRAM):   END;
37586     +
37587     +********** LEAF    84  NODE   447 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 84 NODE 447 ***************;
37588     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37589     +
37590     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37591     +    IF  NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
37592     +                   8.845 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 8.845 <= RECENT_AVG_GIFT_AMT THEN DO;
37593     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37594     +    END;
MPRINT(EM_DIAGRAM):   END;
37595     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37596     +     IF MISSING( RECENT_AVG_GIFT_AMT  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( RECENT_AVG_GIFT_AMT ) THEN _BRANCH_ = 2;
37597     +  END;
MPRINT(EM_DIAGRAM):   END;
37598     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37599     +
37600     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37601     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37602     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37603     +      IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,
37604     +      '46' ,'45' ,'20' ,'16' ,'30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,
37605     +      '08' ,'12' ,'19' ,'27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,
37606     +      '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' , '46' ,'45' ,'20' ,'16' ,'30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' , '08' ,'12' ,'19' ,'27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' , '10' ) THEN DO;
37607     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37608     +      END;
MPRINT(EM_DIAGRAM):   END;
37609     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37610     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37611     +      ELSE IF _ARBFMT_2 NOTIN (
37612     +        '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' ,
37613     +        '11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ,'04' ,'53' ,
37614     +        '25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,'46' ,'45' ,'20' ,'16' ,
37615     +        '30' ,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'08' ,'12' ,'19' ,
37616     +        '27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'10'
37617     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'42' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'14' ,'17' , '11' ,'43' ,'07' ,'34' ,'24' ,'26' ,'21' ,'29' ,'52' ,'04' ,'53' , '25' ,'37' ,'48' ,'47' ,'03' ,'49' ,'50' ,'46' ,'45' ,'20' ,'16' , '30'
,'23' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'08' ,'12' ,'19' , '27' ,'51' ,'44' ,'05' ,'39' ,'33' ,'22' ,'06' ,'32' ,'10' ) THEN _BRANCH_ = 2;
37618     +    END;
MPRINT(EM_DIAGRAM):   END;
37619     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37620     +       _ARB_F_ + 0.0104797097;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0104797097;
37621     +      END;
MPRINT(EM_DIAGRAM):   END;
37622     +    END;
MPRINT(EM_DIAGRAM):   END;
37623     +  END;
MPRINT(EM_DIAGRAM):   END;
37624     +
37625     +********** LEAF    85  NODE   451 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 85 NODE 451 ***************;
37626     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37627     +
37628     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37629     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
37630     +    MEDIAN_HOME_VALUE  <               1026.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1026.5 THEN DO;
37631     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37632     +    END;
MPRINT(EM_DIAGRAM):   END;
37633     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37634     +     IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
37635     +  END;
MPRINT(EM_DIAGRAM):   END;
37636     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37637     +
37638     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37639     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37640     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37641     +      IF _ARBFMT_2 IN ('.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,
37642     +      '11' ,'47' ,'50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,
37643     +      '27' ,'26' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' , '11' ,'47' ,'50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' , '27' ,'26' ,'29' ,'33' ,'06' ,'32' ,'10' ) THEN DO;
37644     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37645     +      END;
MPRINT(EM_DIAGRAM):   END;
37646     +
37647     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37648     +       _ARB_F_ + 0.0105795572;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0105795572;
37649     +      END;
MPRINT(EM_DIAGRAM):   END;
37650     +    END;
MPRINT(EM_DIAGRAM):   END;
37651     +  END;
MPRINT(EM_DIAGRAM):   END;
37652     +
37653     +********** LEAF    86  NODE   452 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 86 NODE 452 ***************;
37654     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37655     +
37656     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37657     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
37658     +    MEDIAN_HOME_VALUE  <               1026.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1026.5 THEN DO;
37659     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37660     +    END;
MPRINT(EM_DIAGRAM):   END;
37661     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37662     +     IF MISSING( MEDIAN_HOME_VALUE  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( MEDIAN_HOME_VALUE ) THEN _BRANCH_ = 1;
37663     +  END;
MPRINT(EM_DIAGRAM):   END;
37664     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37665     +
37666     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37667     +    _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37668     +     %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37669     +      IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'37' ,'48' ,'14' ,'17' ,'03' ,'49' ,
37670     +      '43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,'51' ,
37671     +      '44' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'53' ,'42' ,'37' ,'48' ,'14' ,'17' ,'03' ,'49' , '43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,'08' ,'12' ,'19' ,'21' ,'51' , '44' ,'05' ,'39' ,'22' ,'52' ) THEN DO;
37672     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37673     +      END;
MPRINT(EM_DIAGRAM):   END;
37674     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37675     +       IF MISSING( CLUSTER_CODE  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( CLUSTER_CODE ) THEN _BRANCH_ = 2;
37676     +      ELSE IF _ARBFMT_2 NOTIN (
37677     +        '.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'11' ,'47' ,
37678     +        '50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,'27' ,
37679     +        '26' ,'29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'42' ,'37' ,'48' ,
37680     +        '14' ,'17' ,'03' ,'49' ,'43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' ,
37681     +        '08' ,'12' ,'19' ,'21' ,'51' ,'44' ,'05' ,'39' ,'22' ,'52'
37682     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 NOTIN ( '.' ,'25' ,'01' ,'38' ,'31' ,'35' ,'40' ,'13' ,'28' ,'11' ,'47' , '50' ,'46' ,'20' ,'07' ,'34' ,'23' ,'09' ,'02' ,'36' ,'24' ,'27' , '26' ,'29' ,'33' ,'06' ,'32' ,'10' ,'04' ,'53' ,'42' ,'37' ,'48' , '14'
,'17' ,'03' ,'49' ,'43' ,'45' ,'16' ,'30' ,'41' ,'15' ,'18' , '08' ,'12' ,'19' ,'21' ,'51' ,'44' ,'05' ,'39' ,'22' ,'52' ) THEN _BRANCH_ = 2;
37683     +    END;
MPRINT(EM_DIAGRAM):   END;
37684     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37685     +       _ARB_F_ + -0.000750604;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.000750604;
37686     +      END;
MPRINT(EM_DIAGRAM):   END;
37687     +    END;
MPRINT(EM_DIAGRAM):   END;
37688     +  END;
MPRINT(EM_DIAGRAM):   END;
37689     +
37690     +********** LEAF    87  NODE   450 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 87 NODE 450 ***************;
37691     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37692     +
37693     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37694     +    IF  NOT MISSING(MEDIAN_HOME_VALUE ) AND
37695     +                  1026.5 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1026.5 <= MEDIAN_HOME_VALUE THEN DO;
37696     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37697     +    END;
MPRINT(EM_DIAGRAM):   END;
37698     +
37699     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37700     +     _ARB_F_ + -0.008670773;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.008670773;
37701     +    END;
MPRINT(EM_DIAGRAM):   END;
37702     +  END;
MPRINT(EM_DIAGRAM):   END;
37703     +
37704     +********** LEAF    88  NODE   454 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 88 NODE 454 ***************;
37705     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37706     +
37707     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37708     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
37709     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37710     +    IF _ARBFMT_12 IN ('11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ) THEN DO;
37711     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37712     +    END;
MPRINT(EM_DIAGRAM):   END;
37713     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37714     +     IF MISSING( CARD_PROM_12  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( CARD_PROM_12 ) THEN _BRANCH_ = 1;
37715     +    ELSE IF _ARBFMT_12 NOTIN (
37716     +      '11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ,'5' ,'6' ,'10' ,'3'
37717     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '11' ,'7' ,'9' ,'4' ,'8' ,'2' ,'12' ,'1' ,'5' ,'6' ,'10' ,'3' ) THEN _BRANCH_ = 1;
37718     +  END;
MPRINT(EM_DIAGRAM):   END;
37719     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37720     +     _ARB_F_ + -0.012852737;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.012852737;
37721     +    END;
MPRINT(EM_DIAGRAM):   END;
37722     +  END;
MPRINT(EM_DIAGRAM):   END;
37723     +
37724     +********** LEAF    89  NODE   456 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 89 NODE 456 ***************;
37725     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37726     +
37727     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37728     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
37729     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37730     +    IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
37731     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37732     +    END;
MPRINT(EM_DIAGRAM):   END;
37733     +
37734     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37735     +
37736     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37737     +    _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
37738     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37739     +      IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'2' ,'1' ,'7' ) THEN DO;
37740     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37741     +      END;
MPRINT(EM_DIAGRAM):   END;
37742     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
37743     +       IF MISSING( WEALTH_RATING  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( WEALTH_RATING ) THEN _BRANCH_ = 1;
37744     +      ELSE IF _ARBFMT_12 NOTIN (
37745     +        '5' ,'2' ,'1' ,'7' ,'3' ,'9' ,'4' ,'6' ,'8' ,'0'
37746     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 NOTIN ( '5' ,'2' ,'1' ,'7' ,'3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN _BRANCH_ = 1;
37747     +    END;
MPRINT(EM_DIAGRAM):   END;
37748     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37749     +       _ARB_F_ + 0.0081630751;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 0.0081630751;
37750     +      END;
MPRINT(EM_DIAGRAM):   END;
37751     +    END;
MPRINT(EM_DIAGRAM):   END;
37752     +  END;
MPRINT(EM_DIAGRAM):   END;
37753     +
37754     +********** LEAF    90  NODE   457 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 90 NODE 457 ***************;
37755     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
37756     +
37757     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37758     +  _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
37759     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37760     +    IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'10' ,'3' ) THEN DO;
37761     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37762     +    END;
MPRINT(EM_DIAGRAM):   END;
37763     +
37764     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37765     +
37766     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37767     +    _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
37768     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37769     +      IF _ARBFMT_12 IN ('3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'9' ,'4' ,'6' ,'8' ,'0' ) THEN DO;
37770     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37771     +      END;
MPRINT(EM_DIAGRAM):   END;
37772     +
37773     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
37774     +       _ARB_F_ + -0.004029855;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -0.004029855;
37775     +      END;
MPRINT(EM_DIAGRAM):   END;
37776     +    END;
MPRINT(EM_DIAGRAM):   END;
37777     +  END;
MPRINT(EM_DIAGRAM):   END;
37778     +
37779     +_ARB_F_ = 2.0 * _ARB_F_;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 2.0 * _ARB_F_;
37780     +IF _ARB_BADF_ NE 0 THEN P_TARGET_B0  = 0.7499530693;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ NE 0 THEN P_TARGET_B0 = 0.7499530693;
37781     +ELSE IF _ARB_F_ > 45.0 THEN P_TARGET_B0  = 1.0;
MPRINT(EM_DIAGRAM):   ELSE IF _ARB_F_ > 45.0 THEN P_TARGET_B0 = 1.0;
37782     +ELSE IF _ARB_F_ < -45.0 THEN P_TARGET_B0  = 0.0;
MPRINT(EM_DIAGRAM):   ELSE IF _ARB_F_ < -45.0 THEN P_TARGET_B0 = 0.0;
37783     +ELSE P_TARGET_B0  = 1.0/(1.0 + EXP( - _ARB_F_));
MPRINT(EM_DIAGRAM):   ELSE P_TARGET_B0 = 1.0/(1.0 + EXP( - _ARB_F_));
37784     +P_TARGET_B1  = 1.0 - P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 1.0 - P_TARGET_B0 ;
37785     +*****  CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
MPRINT(EM_DIAGRAM):   ***** CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
37786     +Q_TARGET_B1  = P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = P_TARGET_B1 ;
37787     +Q_TARGET_B0  = P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = P_TARGET_B0 ;
37788     +
37789     +*****  ADJUST POSTERIOR  PROBILITIES WITH PRIORS ****;
MPRINT(EM_DIAGRAM):   ***** ADJUST POSTERIOR PROBILITIES WITH PRIORS ****;
37790     + _ARB_P_   = 0;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
37791     +P_TARGET_B1  = P_TARGET_B1  * 0.1999624625;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = P_TARGET_B1 * 0.1999624625;
37792     + _ARB_P_ + P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   _ARB_P_ + P_TARGET_B1 ;
37793     +P_TARGET_B0  = P_TARGET_B0  * 1.2667459324;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = P_TARGET_B0 * 1.2667459324;
37794     + _ARB_P_ + P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   _ARB_P_ + P_TARGET_B0 ;
37795     +IF _ARB_P_ > 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_P_ > 0 THEN DO;
37796     +  P_TARGET_B1  = P_TARGET_B1  / _ARB_P_;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = P_TARGET_B1 / _ARB_P_;
37797     +  P_TARGET_B0  = P_TARGET_B0  / _ARB_P_;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = P_TARGET_B0 / _ARB_P_;
37798     +END;
MPRINT(EM_DIAGRAM):   END;
37799     +
37800     +*****  I_ AND U_ VARIABLES *******************;
MPRINT(EM_DIAGRAM):   ***** I_ AND U_ VARIABLES *******************;
37801     + DROP _ARB_I_ _ARB_IP_;
MPRINT(EM_DIAGRAM):   DROP _ARB_I_ _ARB_IP_;
37802     + _ARB_IP_ = -1.0;
MPRINT(EM_DIAGRAM):   _ARB_IP_ = -1.0;
37803     + IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B1 THEN DO;
37804     +   _ARB_IP_ = P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   _ARB_IP_ = P_TARGET_B1 ;
37805     +   _ARB_I_  = 1;
MPRINT(EM_DIAGRAM):   _ARB_I_ = 1;
37806     +   END;
MPRINT(EM_DIAGRAM):   END;
37807     + IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_IP_ + 1.0/32768.0 < P_TARGET_B0 THEN DO;
37808     +   _ARB_IP_ = P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   _ARB_IP_ = P_TARGET_B0 ;
37809     +   _ARB_I_  = 2;
MPRINT(EM_DIAGRAM):   _ARB_I_ = 2;
37810     +   END;
MPRINT(EM_DIAGRAM):   END;
37811     + SELECT( _ARB_I_);
MPRINT(EM_DIAGRAM):   SELECT( _ARB_I_);
37812     +  WHEN( 1) DO;
MPRINT(EM_DIAGRAM):   WHEN( 1) DO;
37813     +    I_TARGET_B  = '1' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '1' ;
37814     +    U_TARGET_B  =  1;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 1;
37815     +     END;
MPRINT(EM_DIAGRAM):   END;
37816     +  WHEN( 2) DO;
MPRINT(EM_DIAGRAM):   WHEN( 2) DO;
37817     +    I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
37818     +    U_TARGET_B  =  0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
37819     +     END;
MPRINT(EM_DIAGRAM):   END;
37820     +   END;
MPRINT(EM_DIAGRAM):   END;
37821     +
37822     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
37823     +IF  F_TARGET_B  NE '1'
37824     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
37825     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
37826     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
37827     + END;
MPRINT(EM_DIAGRAM):   END;
37828     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37829     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
37830     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
37831     +       SELECT( F_TARGET_B  );
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
37832     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
37833     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
37834     +       END;
MPRINT(EM_DIAGRAM):   END;
37835     + END;
MPRINT(EM_DIAGRAM):   END;
37836     +
37837     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
37838     +
37839     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
37840     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
37841     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
37842     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
37843     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
37844     +
37845     +length D_TARGET_B $ 1;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 1;
37846     +
37847     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
37848     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
37849     +BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
37850     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
37851     +
37852     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
37853     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
37854     +
37855     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
37856     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
37857     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
37858     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
37859     +if _sum > EP_TARGET_B + 4.547474E-13 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 4.547474E-13 then do;
37860     +   EP_TARGET_B = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
37861     +   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
37862     +end;
MPRINT(EM_DIAGRAM):   end;
37863     +
37864     +*** Decision Matrix;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
37865     +array BOOSTdema [2,2] _temporary_ (
37866     +/* row 1 */  14.5 0
37867     +/* row 2 */  -0.5 0
37868     +);
MPRINT(EM_DIAGRAM):   array BOOSTdema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
37869     +
37870     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
37871     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
37872     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
37873     +   when('0' ) _tarnum = 2;
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
37874     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
37875     +end;
MPRINT(EM_DIAGRAM):   end;
37876     +if _tarnum <= 0 then goto BOOSTdeex;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto BOOSTdeex;
37877     +
37878     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
37879     +CP_TARGET_B = BOOSTdema [_tarnum,_decnum];
MPRINT(EM_DIAGRAM):   CP_TARGET_B = BOOSTdema [_tarnum,_decnum];
37880     +
37881     +*** Best Possible Consequence of Any Decision without Cost;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
37882     +array BOOSTdebe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   array BOOSTdebe [2] _temporary_ ( 14.5 0);
37883     +BP_TARGET_B = BOOSTdebe [_tarnum];
MPRINT(EM_DIAGRAM):   BP_TARGET_B = BOOSTdebe [_tarnum];
37884     +
37885     +
37886     +BOOSTdeex:;
MPRINT(EM_DIAGRAM):   BOOSTdeex:;
37887     +
37888     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
37889     +
37890     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37891     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
37892     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37893     +
37894     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37895     +*Computing Unadjusted Residual Vars: TARGET_B;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
37896     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37897     +Label R_TARGET_B1='Residual: TARGET_B=1';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
37898     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
37899     +if
37900     + F_TARGET_B ne '1'
37901     +and F_TARGET_B ne '0'
37902     + then do;
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
37903     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
37904     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
37905     +end;
MPRINT(EM_DIAGRAM):   end;
37906     +else do;
MPRINT(EM_DIAGRAM):   else do;
37907     +R_TARGET_B1= - Q_TARGET_B1;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
37908     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
37909     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
37910     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
37911     +when('0')R_TARGET_B0= R_TARGET_B0+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
37912     +otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
37913     +end;
MPRINT(EM_DIAGRAM):   end;
37914     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37915      run;
 
NOTE: DATA STEP view saved on file EMWS1.BOOST_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.34 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
37916      quit;
37917      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
37919      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
37920      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
37921      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1559 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1559 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
37922      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
37923      * Boost: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Boost: Computing metadata for TRAIN data;
37924      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Boost_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Boost_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Boost_TRAIN out=WORK.M1OHNVIQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OHNVIQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHNVIQ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OHNVIQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHNVIQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1BIMNZN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35XMPB7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BIMNZN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Boost";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("TARGET_B") model = "Boost";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CARD_PROM_12" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CLUSTER_CODE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DONOR_AGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FILE_AVG_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FILE_CARD_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FREQUENCY_STATUS_97NK" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HOME_OWNER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "INCOME_GROUP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "IN_HOUSE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LAST_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_AVG_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_CARD_PROM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_PROM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MEDIAN_HOME_VALUE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MEDIAN_HOUSEHOLD_INCOME" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MOR_HIT_RATE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "NUMBER_PROM_12" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "OVERLAY_SOURCE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE2" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE3" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE4" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PEP_STAR" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PER_CAPITA_INCOME" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PUBLISHED_PHONE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENCY_STATUS_96NK" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_RESPONSE_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_RESPONSE_PROP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_STAR_STATUS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_DONOR_GENDER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_SES" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_URBANICITY" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "WEALTH_RATING" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
38423      data EMWS1.Boost_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMINFO;
38424      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
38425      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
38426      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
38430      run;
38431      proc sort data = EMWS1.Boost_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Boost_EMINFO NOTHREADS;
38432      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38433      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_EMINFO.
NOTE: The data set EMWS1.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38434      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
38435      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38436      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38437      proc sort data = EMWS1.Boost_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Boost_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
38438      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38439      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.BOOST_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38440      data EMWS1.Boost_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMINFO;
38441      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
38442      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38443      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.BOOST_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
38444      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
38445      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
38446      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
38447      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: View EMWS1.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 11, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:31:51" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                October 11, 2015
Time:                14:31:51
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2M66LID "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Getting Started Charitable Giving Example\Workspaces\EMWS1\Boost\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2M66LID new;
MPRINT(EM_DIAGRAM):   run;
38471      data EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMOUTFIT;
38472      set EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMOUTFIT;
38473      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
38474      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
38475      if upcase(TARGET) eq "TARGET_B" then TargetLabel = 'Target Variable Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TargetLabel = 'Target Variable Indicates for Response to 97NK Mailing';
38476      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.BOOST_EMOUTFIT.
NOTE: The data set EMWS1.BOOST_EMOUTFIT has 1 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
38477      proc sort data=EMWS1.Boost_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Boost_EMREPORTFIT nothreads;
38478      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
38479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.BOOST_EMREPORTFIT.
NOTE: The data set EMWS1.BOOST_EMREPORTFIT has 13 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
38480      %let _EMwarndup = 0;
38481      %let _EMtargetdup =;
38482      %let _EMASEtargetdup =;
38483      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
38484      set EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMOUTFIT;
38485      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
38486      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
38487      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
38488      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
38489      end;
MPRINT(EM_DIAGRAM):   end;
38490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.BOOST_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38491      %let EMEXCEPTIONSTRING=;
38492      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
38493      * REPORT: Boost;
MPRINT(EM_DIAGRAM):   * REPORT: Boost;
38494      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38495      %let EM_ACTION = REPORT;
38496      %let syscc = 0;
38497      %macro main;
38498
38499        filename temp catalog 'sashelp.emmodl.boost_macros.source';
38500        %include temp;
38501        filename temp;
38502
38503        %setProperties;
38504
38505        %if %upcase(&EM_ACTION) = CREATE %then %do;
38506          filename temp catalog 'sashelp.emmodl.boost_create.source';
38507          %include temp;
38508          filename temp;
38509
38510          %create;
38511        %end;
38512
38513         %else
38514         %if %upcase(&EM_ACTION) = TRAIN %then %do;
38515
38516             filename temp catalog 'sashelp.emmodl.boost_train.source';
38517             %include temp;
38518             filename temp;
38519             %train;
38520         %end;
38521
38522        %else
38523        %if %upcase(&EM_ACTION) = SCORE %then %do;
38524          filename temp catalog 'sashelp.emmodl.boost_score.source';
38525          %include temp;
38526          filename temp;
38527
38528          %score;
38529
38530        %end;
38531
38532        %else
38533        %if %upcase(&EM_ACTION) = REPORT %then %do;
38534
38535             filename temp catalog 'sashelp.emmodl.boost_report.source';
38536             %include temp;
38537             filename temp;
38538
38539             %report;
38540         %end;
38541
38542         %doendm:
38543      %mend main;
38544
38545      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
38546     +
38547     +%macro SetProperties;
38548     +
38549     +     /* boost options */
38550     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
38551     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
38552     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
38553     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
38554     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
38555     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
38556     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
38557     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
38558     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
38559     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
38560     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
38561     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
38562     +
38563     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
38564     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
38565     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
38566     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
38567     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
38568     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
38569     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
38570     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
38571     +
38572     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
38573     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
38574     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
38575     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
38576     +
38577     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
38578     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
38579     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
38580     +
38581     +%mend SetProperties;
38582     +
38583     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_report.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_REPORT.SOURCE.
38584     +%macro generateObsImportance;
38585     +
38586     +  %EM_GETNAME(key=MODEL, type=DATA);
38587     +  %EM_GETNAME(key=IMPORTANCE, type=DATA);
38588     +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
38589     +
38590     +  proc arbor proc=treeboost inmodel=&EM_USER_MODEL;
38591     +    importance data=&EM_IMPORT_DATA out=_NULL_ outfit=&EM_USER_OBSIMPFIT nvars=&EM_PROPERTY_NUMSINGLEIMP n2way=&EM_PROPERTY_NUMPAIRIMP;
38592     +  run;
38593     +  quit;
38594     +
38595     +%mend generateObsImportance;
38596     +
38597     +%macro report;
38598     +
38599     +  /* create observation based importance statistics */
38600     +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
38601     +
38602     +  %if &EM_PROPERTY_OBSIMPORTANCE eq Y %then %do;
38603     +     %generateObsImportance;
38604     +
38605     +     data &EM_USER_OBSIMPFIT;
38606     +       set &EM_USER_OBSIMPFIT;
38607     +       label _ASE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
38608     +             _DFT_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, noquote))"
38609     +             _DIV_  = "%sysfunc(sasmsg(sashelp.dmine,  stat_div_vlabel , noquote))"
38610     +             _MAX_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
38611     +             _MISC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
38612     +             _NOBS_ = "%sysfunc(sasmsg(sashelp.dmine,  stat_nobs_vlabel, noquote))"
38613     +             _NW_   = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
38614     +             _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
38615     +             _SSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
38616     +             _SUMW_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sumw, noquote))"
38617     +       ;
38618     +     run;
38619     +  %end;
38620     +
38621     +  %else %do;
38622     +     %let exist_flag = %sysfunc(exist(&EM_USER_OBSIMPFIT, DATA));
38623     +     %if &exist_flag eq 1 %then %do;
38624     +        proc datasets lib=&EM_LIB nolist;
38625     +          delete &EM_NODEID._OBSIMPFIT;
38626     +        run;
38627     +        quit;
38628     +     %end;
38629     +  %end;
38630     +
38631     +  /* build reports based on observation importance */
38632     +  %em_report(key=OBSIMPFIT, viewtype=DATA, block=MODEL, DESCRIPTION=OBSIMPFIT, AUTODISPLAY=N);
38633     +
38634     +%mend report;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OBSIMPFIT";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "OBSIMPFIT";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.03232680635169;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 129 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(REPORT):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38635      *------------------------------------------------------------*;
38636      * End REPORT: Boost;
38637      *------------------------------------------------------------*;
38638
 
38639      /* Reset EM Options */
38640      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
38641      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
38642      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
38643      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
38644      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
38645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 129 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 129 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38646      proc sort data=EMWS1.Repl_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Repl_CMeta_TRAIN out=WORK.SUBSETINMETA;
38647      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38648      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS1.REPL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38649      proc sort data=EMWS1.Boost_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Boost_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
38650      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38651      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS1.BOOST_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 53 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38652      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
38653      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
38654      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38655      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 53 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38656      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
38657      set EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_CMeta_TRAIN;
38658      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
38659      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38660      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
38661      set EMWS1.Boost_TRAIN(keep=
38662      BP_TARGET_B
38663      CP_TARGET_B
38664      D_TARGET_B
38665      EP_TARGET_B
38666      F_TARGET_B
38667      I_TARGET_B
38668      P_TARGET_B0
38669      P_TARGET_B1
38670      Q_TARGET_B0
38671      Q_TARGET_B1
38672      R_TARGET_B0
38673      R_TARGET_B1
38674      U_TARGET_B
38675      _WARN_
38676      TARGET_B
38677      );
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_TRAIN(keep= BP_TARGET_B CP_TARGET_B D_TARGET_B EP_TARGET_B F_TARGET_B I_TARGET_B P_TARGET_B0 P_TARGET_B1 Q_TARGET_B0 Q_TARGET_B1 R_TARGET_B0 R_TARGET_B1 U_TARGET_B _WARN_ TARGET_B );
38678      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.82 seconds
      cpu time            0.81 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.BOOST_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 10654 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.85 seconds
      cpu time            0.84 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_TARGET_B*F_TARGET_B / out = WORK.Boost_0U1LRKL nocol norow outpct;
MPRINT(EM_DIAGRAM):   table D_TARGET_B*F_TARGET_B / out = WORK.Boost_3AYOAMI nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Boost_0U1LRKL(rename=(F_TARGET_B=FROM I_TARGET_B=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "TARGET_B";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   table FROM/out=_prioradjust1(KEEP=FROM PERCENT RENAME=(PERCENT=DATAPERCENT));
MPRINT(EM_DIAGRAM):   weight PERCENT;
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_prioradjust1;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   DATA _prioradjust1;
MPRINT(EM_DIAGRAM):   set _prioradjust1;
MPRINT(EM_DIAGRAM):   DATAPERCENT=0.01*DATAPERCENT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_TARGET_B_DD out=_prior(keep=decprior);
MPRINT(EM_DIAGRAM):   by TARGET_B;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   DATA _prioradjust1;
MPRINT(EM_DIAGRAM):   merge _prioradjust1 _prior;
MPRINT(EM_DIAGRAM):   ADJUSTMENT = DECPRIOR/DATAPERCENT;
MPRINT(EM_DIAGRAM):   keep FROM ADJUSTMENT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   merge WORK.Boost_0U1LRKL _prioradjust1;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   ADJUSTEDPERCENT = PERCENT*ADJUSTMENT;
MPRINT(EM_DIAGRAM):   label ADJUSTEDPERCENT = "Adjusted Percent of Predict/Decision Variable";
MPRINT(EM_DIAGRAM):   drop ADJUSTMENT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Boost_0U1LRKL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Boost_3AYOAMI;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 dataRole target $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $9;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Boost_3AYOAMI(rename=(F_TARGET_B=FROM D_TARGET_B=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'DECISION' DATAROLE "TRAIN" TARGET "TARGET_B";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = .;
MPRINT(EM_DIAGRAM):   CORRECTTEXT='.';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = .;
MPRINT(EM_DIAGRAM):   CORRECTTEXT='.';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Boost_3AYOAMI;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Boost_3AYOAMI;
MPRINT(EM_DIAGRAM):   merge WORK.Boost_3AYOAMI _prioradjust1;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   AdjustedPercent = Percent*Adjustment;
MPRINT(EM_DIAGRAM):   label ADJUSTEDPERCENT = "Adjusted Percent of Predict/Decision Variable";
MPRINT(EM_DIAGRAM):   drop Adjustment;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMCLASSIFICATION WORK.Boost_3AYOAMI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_TARGET_B_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_TARGET_B_DD;
MPRINT(EM_DIAGRAM):   where strip(TARGET_B)=strip(symget('ASSMT_EVENT'));
MPRINT(EM_DIAGRAM):   call symput('DECPRIOR', strip(put(DECPRIOR, best.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_TARGET_B D_TARGET_B ;
 
MPRINT(EM_ASSESS):   VAR P_TARGET_B1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "D_TARGET_B" > " " AND UPCASE(NAME) = UPCASE("D_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_TARGET_B1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_TARGET_B P_TARGET_B1 EP_TARGET_B CP_TARGET_B BP_TARGET_B _tmpfreqvar_ D_TARGET_B );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_TARGET_B ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_TARGET_B1 D_TARGET_B NTARGET _tmpfreqvar_ EP_TARGET_B CP_TARGET_B BP_TARGET_B WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_TARGET_B1 D_TARGET_B ;
MPRINT(EM_ASSESS):   VAR NTARGET EP_TARGET_B CP_TARGET_B BP_TARGET_B ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANEPTARGET _MEANCPTARGET _MEANBPTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP MNEP_TARGET MINEP_TARGET MAXEP_TARGET TOTALEP_TARGET CUMULATIVEEP CUMULATIVETOTALEP MNCP_TARGET MINCP_TARGET MAXCP_TARGET CP_TARGET TOTALCP_TARGET CUMULATIVECP
CUMULATIVETOTALCP BASECP BASECUMTOTALCP BASECUMULATIVECP BASETOTALCP BESTTOTALBP BESTCUMULATIVEBP BESTCUMTOTALBP BESTBP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP
PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS NUMDECISION1 NUMDECISION2 SCR_MNPROB SCR_MINPROB SCR_MAXPROB SCR_EPMEAN SCR_EPMIN SCR_EPMAX SCR_CPMEAN SCR_CPMIN SCR_CPMAX ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 CUMPROFIT1 - CUMPROFIT20 0 CUMBPROFIT1 - CUMBPROFIT20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 -
FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.05 _NEVENTS 532.7 _NNONEVENTS 10121.3 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   RETAIN EPTARGET1 - EPTARGET20 0 MINEPTARGET1 - MINEPTARGET20 0 MAXEPTARGET1 - MAXEPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY EPTARGET (20) EPTARGET1 - EPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINEPTARGET (20) MINEPTARGET1 - MINEPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXEPTARGET (20) MAXEPTARGET1 - MAXEPTARGET20;
MPRINT(EM_ASSESS):   DROP EPTARGET1 - EPTARGET20 _MEANEPTARGET MINEPTARGET1 - MINEPTARGET20 MAXEPTARGET1 - MAXEPTARGET20 ;
MPRINT(EM_ASSESS):   RETAIN CPTARGET1 - CPTARGET20 0 MINCPTARGET1 - MINCPTARGET20 0 MAXCPTARGET1 - MAXCPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY CPTARGET (20) CPTARGET1 - CPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINCPTARGET (20) MINCPTARGET1 - MINCPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXCPTARGET (20) MAXCPTARGET1 - MAXCPTARGET20;
MPRINT(EM_ASSESS):   DROP CPTARGET1 - CPTARGET20 _MEANCPTARGET MINCPTARGET1 - MINCPTARGET20 MAXCPTARGET1 - MAXCPTARGET20 ;
MPRINT(EM_ASSESS):   RETAIN BPTARGET1 - BPTARGET20 0 MINBPTARGET1 - MINBPTARGET20 0 MAXBPTARGET1 - MAXBPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY BPTARGET (20) BPTARGET1 - BPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINBPTARGET (20) MINBPTARGET1 - MINBPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXBPTARGET (20) MAXBPTARGET1 - MAXBPTARGET20;
MPRINT(EM_ASSESS):   DROP BPTARGET1 - BPTARGET20 _MEANBPTARGET MINBPTARGET1 - MINBPTARGET20 MAXBPTARGET1 - MAXBPTARGET20 ;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   RETAIN D_TARGET1_1 - D_TARGET1_100 0 ;
MPRINT(EM_ASSESS):   ARRAY D_TARGET1 (100) D_TARGET1_1 - D_TARGET1_100;
MPRINT(EM_ASSESS):   DROP D_TARGET1_1 - D_TARGET1_100;
MPRINT(EM_ASSESS):   RETAIN D_TARGET2_1 - D_TARGET2_100 0 ;
MPRINT(EM_ASSESS):   ARRAY D_TARGET2 (100) D_TARGET2_1 - D_TARGET2_100;
MPRINT(EM_ASSESS):   DROP D_TARGET2_1 - D_TARGET2_100;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN SCR_EPMEAN1- SCR_EPMEAN100 0 SCR_EPMIN1 - SCR_EPMIN100 1 SCR_EPMAX1 - SCR_EPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMEANS (100) SCR_EPMEAN1 - SCR_EPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMINS (100) SCR_EPMIN1 - SCR_EPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMAXS (100) SCR_EPMAX1 - SCR_EPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_EPMEAN1 - SCR_EPMEAN100 SCR_EPMIN1 - SCR_EPMIN100 SCR_EPMAX1 - SCR_EPMAX100;
MPRINT(EM_ASSESS):   RETAIN SCR_CPMEAN1- SCR_CPMEAN100 0 SCR_CPMIN1 - SCR_CPMIN100 1 SCR_CPMAX1 - SCR_CPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMEANS (100) SCR_CPMEAN1 - SCR_CPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMINS (100) SCR_CPMIN1 - SCR_CPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMAXS (100) SCR_CPMAX1 - SCR_CPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_CPMEAN1 - SCR_CPMEAN100 SCR_CPMIN1 - SCR_CPMIN100 SCR_CPMAX1 - SCR_CPMAX100;
MPRINT(EM_ASSESS):   RETAIN SCR_BPMEAN1- SCR_BPMEAN100 0 SCR_BPMIN1 - SCR_BPMIN100 1 SCR_BPMAX1 - SCR_BPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMEANS (100) SCR_BPMEAN1 - SCR_BPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMINS (100) SCR_BPMIN1 - SCR_BPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMAXS (100) SCR_BPMAX1 - SCR_BPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_BPMEAN1 - SCR_BPMEAN100 SCR_BPMIN1 - SCR_BPMIN100 SCR_BPMAX1 - SCR_BPMAX100;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
 
MPRINT(EM_ASSESS):   DROP WEIGHTEDORIG1 WEIGHTEDORIG0 ORIG0 ORIG1;
MPRINT(EM_ASSESS):   ORIG1 = _MEANTARGET * _FREQ_;
MPRINT(EM_ASSESS):   ORIG0 = (1 - _MEANTARGET) * _FREQ_;
MPRINT(EM_ASSESS):   WEIGHTEDORIG1 = ORIG1 * 0.05 / 0.2500469307 ;
MPRINT(EM_ASSESS):   WEIGHTEDORIG0 = ORIG0 * (1 - 0.05) / 0.7499530693 ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = SUM (WEIGHTEDORIG0 , WEIGHTEDORIG1);
MPRINT(EM_ASSESS):   IF SUMWEIGHTS > . THEN _MEANTARGET = WEIGHTEDORIG1 / SUMWEIGHTS;
MPRINT(EM_ASSESS):   ELSE _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   _FREQ_ = SUMWEIGHTS;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 10654));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_TARGET_B1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_TARGET_B1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_TARGET_B1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   EPTARGET (DECILE) = SUM ( EPTARGET (DECILE) , _MEANEPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINEPTARGET (DECILE) = MIN (MINEPTARGET (DECILE), _MEANEPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MAXEPTARGET (DECILE) = MAX (MAXEPTARGET (DECILE), _MEANEPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   CPTARGET (DECILE) = SUM ( CPTARGET (DECILE) , _MEANCPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINCPTARGET (DECILE) = MIN (MINCPTARGET (DECILE), _MEANCPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MAXCPTARGET (DECILE) = MAX (MAXCPTARGET (DECILE), _MEANCPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   BPTARGET (DECILE) = SUM ( BPTARGET (DECILE) , _MEANBPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINBPTARGET (DECILE) = MIN (MINBPTARGET (DECILE), _MEANBPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MAXBPTARGET (DECILE) = MAX (MAXBPTARGET (DECILE), _MEANBPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_TARGET_B1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_TARGET_B1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_TARGET_B1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_TARGET_B1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   D_TARGET_B = TRANSLATE (D_TARGET_B, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   IF D_TARGET_B = "0" THEN D_TARGET1 ( SLOT ) = SUM (D_TARGET1 (SLOT) , _FREQ_ );
MPRINT(EM_ASSESS):   IF D_TARGET_B = "1" THEN D_TARGET2 ( SLOT ) = SUM (D_TARGET2 (SLOT) , _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_TARGET_B1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_TARGET_B1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_TARGET_B1 );
MPRINT(EM_ASSESS):   SCR_EPMEANS ( SLOT ) = MEAN (SCR_EPMEANS (SLOT), _MEANEPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_EPMINS ( SLOT ) = MIN (SCR_EPMINS (SLOT), _MEANEPTARGET );
MPRINT(EM_ASSESS):   SCR_EPMAXS ( SLOT ) = MAX (SCR_EPMAXS (SLOT), _MEANEPTARGET );
MPRINT(EM_ASSESS):   SCR_CPMEANS ( SLOT ) = MEAN (SCR_CPMEANS (SLOT), _MEANCPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_CPMINS ( SLOT ) = MIN (SCR_CPMINS (SLOT), _MEANCPTARGET );
MPRINT(EM_ASSESS):   SCR_CPMAXS ( SLOT ) = MAX (SCR_CPMAXS (SLOT), _MEANCPTARGET );
MPRINT(EM_ASSESS):   SCR_BPMEANS ( SLOT ) = MEAN (SCR_BPMEANS (SLOT), _MEANBPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_BPMINS ( SLOT ) = MIN (SCR_BPMINS (SLOT), _MEANBPTARGET );
MPRINT(EM_ASSESS):   SCR_BPMAXS ( SLOT ) = MAX (SCR_BPMAXS (SLOT), _MEANBPTARGET );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0225909586 OVLMAX 0.1028456027 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   SUMEP = SUM (OF EPTARGET1 - EPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMEP ;
MPRINT(EM_ASSESS):   SUMCP = SUM (OF CPTARGET1 - CPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMCP ;
MPRINT(EM_ASSESS):   SUMBP = SUM (OF BPTARGET1 - BPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMBP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 10654 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 10654)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS)) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 10654 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 10654 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   TOTALEP_TARGET = EPTARGET (GROUP);
MPRINT(EM_ASSESS):   EP_TARGET = TOTALEP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   CUMULATIVETOTALEP + EPTARGET (GROUP);
MPRINT(EM_ASSESS):   CUMULATIVEEP = CUMULATIVETOTALEP / C_NUMOBS;
MPRINT(EM_ASSESS):   MINEP_TARGET = MINEPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXEP_TARGET = MAXEPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNEP_TARGET = EP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXEP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXEP_TARGET + MAXEP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMEP >= C_MAXEP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTEP = MAXEP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALEP = BESTEP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTEP = MIN (MAXEP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTEP < 0 THEN BESTEP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALEP = BESTEP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALEP + BESTTOTALEP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMEP - C_MAXEP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVEEP = BESTCUMTOTALEP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASEEP = SUMEP / 10654;
MPRINT(EM_ASSESS):   BASECUMULATIVEEP + BASEEP;
MPRINT(EM_ASSESS):   BASETOTALEP = SUMEP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALEP + BASETOTALEP;
MPRINT(EM_ASSESS):   TOTALCP_TARGET = CPTARGET (GROUP);
MPRINT(EM_ASSESS):   CP_TARGET = TOTALCP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   CUMULATIVETOTALCP + CPTARGET (GROUP);
MPRINT(EM_ASSESS):   CUMULATIVECP = CUMULATIVETOTALCP / C_NUMOBS;
MPRINT(EM_ASSESS):   MINCP_TARGET = MINCPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXCP_TARGET = MAXCPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNCP_TARGET = CP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXCP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXCP_TARGET + MAXCP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMCP >= C_MAXCP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTCP = MAXCP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALCP = BESTCP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTCP = MIN (MAXCP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTCP < 0 THEN BESTCP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALCP = BESTCP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALCP + BESTTOTALCP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMCP - C_MAXCP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVECP = BESTCUMTOTALCP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASECP = SUMCP / 10654;
MPRINT(EM_ASSESS):   BASECUMULATIVECP + BASECP;
MPRINT(EM_ASSESS):   BASETOTALCP = SUMCP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALCP + BASETOTALCP;
MPRINT(EM_ASSESS):   TOTALBP_TARGET = BPTARGET (GROUP);
MPRINT(EM_ASSESS):   BP_TARGET = TOTALBP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   MINBP_TARGET = MINBPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXBP_TARGET = MAXBPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNBP_TARGET = BP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXBP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXBP_TARGET + MAXBP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMBP >= C_MAXBP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTBP = MAXBP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALBP = BESTBP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTBP = MIN (MAXBP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTBP < 0 THEN BESTBP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALBP = BESTBP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALBP + BESTTOTALBP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMBP - C_MAXBP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVEBP = BESTCUMTOTALBP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASEBP = SUMBP / 10654;
MPRINT(EM_ASSESS):   BASECUMULATIVEBP + BASEBP;
MPRINT(EM_ASSESS):   BASETOTALBP = SUMBP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALBP + BASETOTALBP;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_96 - D_TARGET1_100);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_96 - D_TARGET2_100);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN96 - SCR_EPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN96 - SCR_EPMIN100);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX96 - SCR_EPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN96 - SCR_CPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN96 - SCR_CPMIN100);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX96 - SCR_CPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN96 - SCR_BPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN96 - SCR_BPMIN100);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX96 - SCR_BPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_91 - D_TARGET1_95);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_91 - D_TARGET2_95);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN91 - SCR_EPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN91 - SCR_EPMIN95);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX91 - SCR_EPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN91 - SCR_CPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN91 - SCR_CPMIN95);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX91 - SCR_CPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN91 - SCR_BPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN91 - SCR_BPMIN95);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX91 - SCR_BPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_86 - D_TARGET1_90);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_86 - D_TARGET2_90);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN86 - SCR_EPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN86 - SCR_EPMIN90);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX86 - SCR_EPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN86 - SCR_CPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN86 - SCR_CPMIN90);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX86 - SCR_CPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN86 - SCR_BPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN86 - SCR_BPMIN90);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX86 - SCR_BPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_81 - D_TARGET1_85);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_81 - D_TARGET2_85);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN81 - SCR_EPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN81 - SCR_EPMIN85);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX81 - SCR_EPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN81 - SCR_CPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN81 - SCR_CPMIN85);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX81 - SCR_CPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN81 - SCR_BPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN81 - SCR_BPMIN85);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX81 - SCR_BPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_76 - D_TARGET1_80);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_76 - D_TARGET2_80);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN76 - SCR_EPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN76 - SCR_EPMIN80);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX76 - SCR_EPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN76 - SCR_CPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN76 - SCR_CPMIN80);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX76 - SCR_CPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN76 - SCR_BPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN76 - SCR_BPMIN80);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX76 - SCR_BPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_71 - D_TARGET1_75);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_71 - D_TARGET2_75);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN71 - SCR_EPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN71 - SCR_EPMIN75);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX71 - SCR_EPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN71 - SCR_CPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN71 - SCR_CPMIN75);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX71 - SCR_CPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN71 - SCR_BPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN71 - SCR_BPMIN75);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX71 - SCR_BPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_66 - D_TARGET1_70);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_66 - D_TARGET2_70);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN66 - SCR_EPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN66 - SCR_EPMIN70);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX66 - SCR_EPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN66 - SCR_CPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN66 - SCR_CPMIN70);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX66 - SCR_CPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN66 - SCR_BPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN66 - SCR_BPMIN70);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX66 - SCR_BPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_61 - D_TARGET1_65);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_61 - D_TARGET2_65);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN61 - SCR_EPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN61 - SCR_EPMIN65);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX61 - SCR_EPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN61 - SCR_CPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN61 - SCR_CPMIN65);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX61 - SCR_CPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN61 - SCR_BPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN61 - SCR_BPMIN65);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX61 - SCR_BPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_56 - D_TARGET1_60);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_56 - D_TARGET2_60);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN56 - SCR_EPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN56 - SCR_EPMIN60);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX56 - SCR_EPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN56 - SCR_CPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN56 - SCR_CPMIN60);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX56 - SCR_CPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN56 - SCR_BPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN56 - SCR_BPMIN60);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX56 - SCR_BPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_51 - D_TARGET1_55);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_51 - D_TARGET2_55);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN51 - SCR_EPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN51 - SCR_EPMIN55);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX51 - SCR_EPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN51 - SCR_CPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN51 - SCR_CPMIN55);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX51 - SCR_CPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN51 - SCR_BPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN51 - SCR_BPMIN55);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX51 - SCR_BPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_46 - D_TARGET1_50);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_46 - D_TARGET2_50);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN46 - SCR_EPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN46 - SCR_EPMIN50);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX46 - SCR_EPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN46 - SCR_CPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN46 - SCR_CPMIN50);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX46 - SCR_CPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN46 - SCR_BPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN46 - SCR_BPMIN50);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX46 - SCR_BPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_41 - D_TARGET1_45);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_41 - D_TARGET2_45);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN41 - SCR_EPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN41 - SCR_EPMIN45);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX41 - SCR_EPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN41 - SCR_CPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN41 - SCR_CPMIN45);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX41 - SCR_CPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN41 - SCR_BPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN41 - SCR_BPMIN45);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX41 - SCR_BPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_36 - D_TARGET1_40);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_36 - D_TARGET2_40);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN36 - SCR_EPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN36 - SCR_EPMIN40);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX36 - SCR_EPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN36 - SCR_CPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN36 - SCR_CPMIN40);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX36 - SCR_CPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN36 - SCR_BPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN36 - SCR_BPMIN40);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX36 - SCR_BPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_31 - D_TARGET1_35);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_31 - D_TARGET2_35);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN31 - SCR_EPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN31 - SCR_EPMIN35);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX31 - SCR_EPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN31 - SCR_CPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN31 - SCR_CPMIN35);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX31 - SCR_CPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN31 - SCR_BPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN31 - SCR_BPMIN35);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX31 - SCR_BPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_26 - D_TARGET1_30);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_26 - D_TARGET2_30);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN26 - SCR_EPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN26 - SCR_EPMIN30);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX26 - SCR_EPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN26 - SCR_CPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN26 - SCR_CPMIN30);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX26 - SCR_CPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN26 - SCR_BPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN26 - SCR_BPMIN30);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX26 - SCR_BPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_21 - D_TARGET1_25);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_21 - D_TARGET2_25);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN21 - SCR_EPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN21 - SCR_EPMIN25);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX21 - SCR_EPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN21 - SCR_CPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN21 - SCR_CPMIN25);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX21 - SCR_CPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN21 - SCR_BPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN21 - SCR_BPMIN25);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX21 - SCR_BPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_16 - D_TARGET1_20);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_16 - D_TARGET2_20);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN16 - SCR_EPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN16 - SCR_EPMIN20);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX16 - SCR_EPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN16 - SCR_CPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN16 - SCR_CPMIN20);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX16 - SCR_CPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN16 - SCR_BPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN16 - SCR_BPMIN20);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX16 - SCR_BPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_11 - D_TARGET1_15);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_11 - D_TARGET2_15);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN11 - SCR_EPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN11 - SCR_EPMIN15);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX11 - SCR_EPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN11 - SCR_CPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN11 - SCR_CPMIN15);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX11 - SCR_CPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN11 - SCR_BPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN11 - SCR_BPMIN15);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX11 - SCR_BPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_6 - D_TARGET1_10);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_6 - D_TARGET2_10);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN6 - SCR_EPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN6 - SCR_EPMIN10);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX6 - SCR_EPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN6 - SCR_CPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN6 - SCR_CPMIN10);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX6 - SCR_CPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN6 - SCR_BPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN6 - SCR_BPMIN10);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX6 - SCR_BPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_1 - D_TARGET1_5);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_1 - D_TARGET2_5);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN1 - SCR_EPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN1 - SCR_EPMIN5);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX1 - SCR_EPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN1 - SCR_CPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN1 - SCR_CPMIN5);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX1 - SCR_CPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN1 - SCR_BPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN1 - SCR_BPMIN5);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX1 - SCR_BPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 10654;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS SCR_EPMEAN =
_MEANEP_ SCR_EPMAX = _MAXEP_ SCR_EPMIN = _MINEP_ SCR_CPMEAN = _MEANCP_ SCR_CPMAX = _MAXCP_
SCR_CPMIN = _MINCP_ NUMDECISION1 = D_TARGET_B_1 NUMDECISION2 = D_TARGET_B_2 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" _MEANCP_ =
"Mean Computed Profit" _MAXCP_ = "Max Computed Profit" _MINCP_ = "Min Computed Profit" _MAXEP_
= "Expected profit: upper bound" _MINEP_ = "Expected profit: lower bound" _MEANEP_ = "Mean
Expected Profit" D_TARGET_B_1 = "Report: Number of Decisions = 1" D_TARGET_B_2 = "Report:
Number of Decisions = 2" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC
BASECP = BASEPROFIT BASECUMTOTALCP = BASECUMULATIVETOTALPROFIT BASECUMULATIVECP =
BASECUMULATIVEPROFIT MAXCP_TARGET = _MAXCP_ MNCP_TARGET = _MEANCP_ MINCP_TARGET = _MINCP_
BASETOTALCP = BASETOTALPROFIT CUMULATIVECP = AVGCUMULATIVEPROFIT CUMULATIVETOTALCP=
CUMULATIVETOTALPROFIT CP_TARGET = PROFIT TOTALCP_TARGET = TOTALPROFIT MAXEP_TARGET = _MAXEP_
MINEP_TARGET = _MINEP_ MNEP_TARGET = _MEANEP_ CUMULATIVEEP = CUMULATIVEEXPECTEDPROFIT
CUMULATIVETOTALEP= CUMULATIVETOTALEXPPROFIT TOTALEP_TARGET = TOTALEXPPROFIT BESTBP =
BESTPROFIT BESTCUMTOTALBP = BESTCUMULATIVETOTALPROFIT BESTCUMULATIVEBP = BESTCUMULATIVEPROFIT
BESTTOTALBP = BESTTOTALPROFIT ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MEANCP_ = "Mean Computed Profit" _MAXCP_ = "Max Computed Profit"
_MINCP_ = "Min Computed Profit" AVGCUMULATIVEPROFIT = "Average Cumulative Computed Profit"
CUMULATIVETOTALPROFIT = "Cumulative Total Computed Profit" BESTTOTALPROFIT = "Best Total
Profit" BESTPROFIT = "Best Profit" BASEPROFIT = "Baseline Profit" BASECUMULATIVEPROFIT =
"Baseline Cumulative Profit" BASECUMULATIVETOTALPROFIT = "Baseline Cumulative Total Profit"
BASEPROFIT = "Baseline Profit" BASETOTALPROFIT = "Baseline Total Profit" BESTCUMULATIVEPROFIT
= "Best Cumulative Profit" BESTCUMULATIVETOTALPROFIT = "Best Cumulative Total Profit" PROFIT =
"Average Computed Profit" TOTALPROFIT = "Total Computed Profit" _MEANEP_ = "Mean Expected
Profit" _MINEP_ = "Min Expected Profit" _MAXEP_ = "Max Expected Profit"
CUMULATIVETOTALEXPPROFIT = "Cumulative Total Expected Profit" CUMULATIVEEXPECTEDPROFIT =
"Cumulative Expected Profit" TOTALEXPPROFIT = "Total Expected Profit" _MAXP_ = "Max Posterior
Probability" _MINP_ = "Min Posterior Probability" _MEANP_ = "Mean Posterior Probability"
BASECAP = "Baseline % Captured Response" BASECAPC = "Baseline Cumulative % Captured Response"
BASENUMBEROFEVENTS = "Baseline Number of Events" BASEGAIN = "Baseline Gain" BASELIFT =
"Baseline Lift" BASELIFTC = "Baseline Cumulative Lift" BASERESP = "Baseline % Response"
BASERESPC = "Baseline Cumulative % Response" BASELIFTC = "Baseline Cumulative Lift" BESTCAP =
"Best % Captured Response" BESTCAPC = "Best Cumulative % Captured Response" BESTGAIN = "Best
Gain" BESTRESP = "Best % Response" BESTRESPC = "Best Cumulative % Response" BESTLIFT = "Best
Lift" BESTLIFTC = "Best Cumulative Lift" BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "%
Captured Response" CAPC = "Cumulative % Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT
= "Lift" LIFTC = "Cumulative Lift" NUMNEVENT = "Number of Nonevents" N = "Number of
Observations" EVENT = "Event" RESPC = "Cumulative % Response" NUMBEROFEVENTS = "Number of
Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "TARGET_B";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'Target Variable Indicates for Response to 97NK
Mailing';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "TARGET_B";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'Target Variable Indicates for Response to 97NK
Mailing';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
43021      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
43022      set EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_CMeta_TRAIN;
43023      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
43023    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
43024      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43025      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
43026      set EMWS1.Boost_VALIDATE(keep=
43027      BP_TARGET_B
43028      CP_TARGET_B
43029      D_TARGET_B
43030      EP_TARGET_B
43031      F_TARGET_B
43032      I_TARGET_B
43033      P_TARGET_B0
43034      P_TARGET_B1
43035      Q_TARGET_B0
43036      Q_TARGET_B1
43037      R_TARGET_B0
43038      R_TARGET_B1
43039      U_TARGET_B
43040      _WARN_
43041      TARGET_B
43042      );
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VALIDATE(keep= BP_TARGET_B CP_TARGET_B D_TARGET_B
EP_TARGET_B F_TARGET_B I_TARGET_B P_TARGET_B0 P_TARGET_B1 Q_TARGET_B0 Q_TARGET_B1 R_TARGET_B0
R_TARGET_B1 U_TARGET_B _WARN_ TARGET_B );
43043      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: View EMWS1.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.70 seconds
      cpu time            0.70 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.REPL_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.BOOST_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 8718 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.75 seconds
      cpu time            0.75 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_TARGET_B*F_TARGET_B / out = WORK.Boost_0PXOX6P nocol norow
outpct;
MPRINT(EM_DIAGRAM):   table D_TARGET_B*F_TARGET_B / out = WORK.Boost_3KGWZJO nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Boost_0PXOX6P;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Boost_0PXOX6P(rename=(F_TARGET_B=FROM I_TARGET_B=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "TARGET_B";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable
Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Boost_0PXOX6P;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Boost_0PXOX6P;
MPRINT(EM_DIAGRAM):   merge WORK.Boost_0PXOX6P _prioradjust1;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   ADJUSTEDPERCENT = PERCENT*ADJUSTMENT;
MPRINT(EM_DIAGRAM):   label ADJUSTEDPERCENT = "Adjusted Percent of Predict/Decision Variable";
MPRINT(EM_DIAGRAM):   drop ADJUSTMENT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMCLASSIFICATION WORK.Boost_0PXOX6P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Boost_0PXOX6P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Boost_3KGWZJO;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 dataRole target $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $9;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Boost_3KGWZJO(rename=(F_TARGET_B=FROM D_TARGET_B=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'DECISION' DATAROLE "VALIDATE" TARGET "TARGET_B";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable
Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = .;
MPRINT(EM_DIAGRAM):   CORRECTTEXT='.';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = .;
MPRINT(EM_DIAGRAM):   CORRECTTEXT='.';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Boost_3KGWZJO;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Boost_3KGWZJO;
MPRINT(EM_DIAGRAM):   merge WORK.Boost_3KGWZJO _prioradjust1;
MPRINT(EM_DIAGRAM):   by FROM;
MPRINT(EM_DIAGRAM):   AdjustedPercent = Percent*Adjustment;
MPRINT(EM_DIAGRAM):   label ADJUSTEDPERCENT = "Adjusted Percent of Predict/Decision Variable";
MPRINT(EM_DIAGRAM):   drop Adjustment;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMCLASSIFICATION WORK.Boost_3KGWZJO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "TARGET_B" then TARGETLABEL = 'Target Variable
Indicates for Response to 97NK Mailing';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_TARGET_B_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_TARGET_B_DD;
MPRINT(EM_DIAGRAM):   where strip(TARGET_B)=strip(symget('ASSMT_EVENT'));
MPRINT(EM_DIAGRAM):   call symput('DECPRIOR', strip(put(DECPRIOR, best.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_TARGET_B D_TARGET_B ;
 
MPRINT(EM_ASSESS):   VAR P_TARGET_B1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_TARGET_B") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "D_TARGET_B" > " " AND UPCASE(NAME) = UPCASE("D_TARGET_B") THEN
DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_TARGET_B1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_TARGET_B P_TARGET_B1 EP_TARGET_B CP_TARGET_B
BP_TARGET_B _tmpfreqvar_ D_TARGET_B );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_TARGET_B ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_TARGET_B1 D_TARGET_B NTARGET
_tmpfreqvar_ EP_TARGET_B CP_TARGET_B BP_TARGET_B WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_TARGET_B1 D_TARGET_B ;
MPRINT(EM_ASSESS):   VAR NTARGET EP_TARGET_B CP_TARGET_B BP_TARGET_B ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANEPTARGET
_MEANCPTARGET _MEANBPTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP MNEP_TARGET
MINEP_TARGET MAXEP_TARGET TOTALEP_TARGET CUMULATIVEEP CUMULATIVETOTALEP MNCP_TARGET
MINCP_TARGET MAXCP_TARGET CP_TARGET TOTALCP_TARGET CUMULATIVECP CUMULATIVETOTALCP BASECP
BASECUMTOTALCP BASECUMULATIVECP BASETOTALCP BESTTOTALBP BESTCUMULATIVEBP BESTCUMTOTALBP BESTBP
) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE
SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS NUMDECISION1 NUMDECISION2 SCR_MNPROB
SCR_MINPROB SCR_MAXPROB SCR_EPMEAN SCR_EPMIN SCR_EPMAX SCR_CPMEAN SCR_CPMIN SCR_CPMAX ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 CUMPROFIT1 - CUMPROFIT20 0 CUMBPROFIT1 -
CUMBPROFIT20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0
FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 -
FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.05 _NEVENTS 435.9 _NNONEVENTS 8282.1 TARGET
"NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   RETAIN EPTARGET1 - EPTARGET20 0 MINEPTARGET1 - MINEPTARGET20 0
MAXEPTARGET1 - MAXEPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY EPTARGET (20) EPTARGET1 - EPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINEPTARGET (20) MINEPTARGET1 - MINEPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXEPTARGET (20) MAXEPTARGET1 - MAXEPTARGET20;
MPRINT(EM_ASSESS):   DROP EPTARGET1 - EPTARGET20 _MEANEPTARGET MINEPTARGET1 - MINEPTARGET20
MAXEPTARGET1 - MAXEPTARGET20 ;
MPRINT(EM_ASSESS):   RETAIN CPTARGET1 - CPTARGET20 0 MINCPTARGET1 - MINCPTARGET20 0
MAXCPTARGET1 - MAXCPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY CPTARGET (20) CPTARGET1 - CPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINCPTARGET (20) MINCPTARGET1 - MINCPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXCPTARGET (20) MAXCPTARGET1 - MAXCPTARGET20;
MPRINT(EM_ASSESS):   DROP CPTARGET1 - CPTARGET20 _MEANCPTARGET MINCPTARGET1 - MINCPTARGET20
MAXCPTARGET1 - MAXCPTARGET20 ;
MPRINT(EM_ASSESS):   RETAIN BPTARGET1 - BPTARGET20 0 MINBPTARGET1 - MINBPTARGET20 0
MAXBPTARGET1 - MAXBPTARGET20 0 ;
MPRINT(EM_ASSESS):   ARRAY BPTARGET (20) BPTARGET1 - BPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MINBPTARGET (20) MINBPTARGET1 - MINBPTARGET20;
MPRINT(EM_ASSESS):   ARRAY MAXBPTARGET (20) MAXBPTARGET1 - MAXBPTARGET20;
MPRINT(EM_ASSESS):   DROP BPTARGET1 - BPTARGET20 _MEANBPTARGET MINBPTARGET1 - MINBPTARGET20
MAXBPTARGET1 - MAXBPTARGET20 ;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   RETAIN D_TARGET1_1 - D_TARGET1_100 0 ;
MPRINT(EM_ASSESS):   ARRAY D_TARGET1 (100) D_TARGET1_1 - D_TARGET1_100;
MPRINT(EM_ASSESS):   DROP D_TARGET1_1 - D_TARGET1_100;
MPRINT(EM_ASSESS):   RETAIN D_TARGET2_1 - D_TARGET2_100 0 ;
MPRINT(EM_ASSESS):   ARRAY D_TARGET2 (100) D_TARGET2_1 - D_TARGET2_100;
MPRINT(EM_ASSESS):   DROP D_TARGET2_1 - D_TARGET2_100;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN SCR_EPMEAN1- SCR_EPMEAN100 0 SCR_EPMIN1 - SCR_EPMIN100 1
SCR_EPMAX1 - SCR_EPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMEANS (100) SCR_EPMEAN1 - SCR_EPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMINS (100) SCR_EPMIN1 - SCR_EPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_EPMAXS (100) SCR_EPMAX1 - SCR_EPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_EPMEAN1 - SCR_EPMEAN100 SCR_EPMIN1 - SCR_EPMIN100 SCR_EPMAX1 -
SCR_EPMAX100;
MPRINT(EM_ASSESS):   RETAIN SCR_CPMEAN1- SCR_CPMEAN100 0 SCR_CPMIN1 - SCR_CPMIN100 1
SCR_CPMAX1 - SCR_CPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMEANS (100) SCR_CPMEAN1 - SCR_CPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMINS (100) SCR_CPMIN1 - SCR_CPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_CPMAXS (100) SCR_CPMAX1 - SCR_CPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_CPMEAN1 - SCR_CPMEAN100 SCR_CPMIN1 - SCR_CPMIN100 SCR_CPMAX1 -
SCR_CPMAX100;
MPRINT(EM_ASSESS):   RETAIN SCR_BPMEAN1- SCR_BPMEAN100 0 SCR_BPMIN1 - SCR_BPMIN100 1
SCR_BPMAX1 - SCR_BPMAX100 0 ;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMEANS (100) SCR_BPMEAN1 - SCR_BPMEAN100;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMINS (100) SCR_BPMIN1 - SCR_BPMIN100;
MPRINT(EM_ASSESS):   ARRAY SCR_BPMAXS (100) SCR_BPMAX1 - SCR_BPMAX100;
MPRINT(EM_ASSESS):   DROP SCR_BPMEAN1 - SCR_BPMEAN100 SCR_BPMIN1 - SCR_BPMIN100 SCR_BPMAX1 -
SCR_BPMAX100;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
 
MPRINT(EM_ASSESS):   DROP WEIGHTEDORIG1 WEIGHTEDORIG0 ORIG0 ORIG1;
MPRINT(EM_ASSESS):   ORIG1 = _MEANTARGET * _FREQ_;
MPRINT(EM_ASSESS):   ORIG0 = (1 - _MEANTARGET) * _FREQ_;
MPRINT(EM_ASSESS):   WEIGHTEDORIG1 = ORIG1 * 0.05 / 0.2499426474 ;
MPRINT(EM_ASSESS):   WEIGHTEDORIG0 = ORIG0 * (1 - 0.05) / 0.7500573526 ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = SUM (WEIGHTEDORIG0 , WEIGHTEDORIG1);
MPRINT(EM_ASSESS):   IF SUMWEIGHTS > . THEN _MEANTARGET = WEIGHTEDORIG1 / SUMWEIGHTS;
MPRINT(EM_ASSESS):   ELSE _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   _FREQ_ = SUMWEIGHTS;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 8718));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_TARGET_B1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_TARGET_B1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_TARGET_B1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   EPTARGET (DECILE) = SUM ( EPTARGET (DECILE) , _MEANEPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINEPTARGET (DECILE) = MIN (MINEPTARGET (DECILE), _MEANEPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   MAXEPTARGET (DECILE) = MAX (MAXEPTARGET (DECILE), _MEANEPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   CPTARGET (DECILE) = SUM ( CPTARGET (DECILE) , _MEANCPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINCPTARGET (DECILE) = MIN (MINCPTARGET (DECILE), _MEANCPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   MAXCPTARGET (DECILE) = MAX (MAXCPTARGET (DECILE), _MEANCPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   BPTARGET (DECILE) = SUM ( BPTARGET (DECILE) , _MEANBPTARGET * _WEIGHT);
MPRINT(EM_ASSESS):   MINBPTARGET (DECILE) = MIN (MINBPTARGET (DECILE), _MEANBPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   MAXBPTARGET (DECILE) = MAX (MAXBPTARGET (DECILE), _MEANBPTARGET *
_WEIGHT);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_TARGET_B1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_TARGET_B1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_TARGET_B1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_TARGET_B1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   D_TARGET_B = TRANSLATE (D_TARGET_B, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   IF D_TARGET_B = "0" THEN D_TARGET1 ( SLOT ) = SUM (D_TARGET1 (SLOT) ,
_FREQ_ );
MPRINT(EM_ASSESS):   IF D_TARGET_B = "1" THEN D_TARGET2 ( SLOT ) = SUM (D_TARGET2 (SLOT) ,
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_TARGET_B1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_TARGET_B1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_TARGET_B1 );
MPRINT(EM_ASSESS):   SCR_EPMEANS ( SLOT ) = MEAN (SCR_EPMEANS (SLOT), _MEANEPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_EPMINS ( SLOT ) = MIN (SCR_EPMINS (SLOT), _MEANEPTARGET );
MPRINT(EM_ASSESS):   SCR_EPMAXS ( SLOT ) = MAX (SCR_EPMAXS (SLOT), _MEANEPTARGET );
MPRINT(EM_ASSESS):   SCR_CPMEANS ( SLOT ) = MEAN (SCR_CPMEANS (SLOT), _MEANCPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_CPMINS ( SLOT ) = MIN (SCR_CPMINS (SLOT), _MEANCPTARGET );
MPRINT(EM_ASSESS):   SCR_CPMAXS ( SLOT ) = MAX (SCR_CPMAXS (SLOT), _MEANCPTARGET );
MPRINT(EM_ASSESS):   SCR_BPMEANS ( SLOT ) = MEAN (SCR_BPMEANS (SLOT), _MEANBPTARGET * _FREQ_);
MPRINT(EM_ASSESS):   SCR_BPMINS ( SLOT ) = MIN (SCR_BPMINS (SLOT), _MEANBPTARGET );
MPRINT(EM_ASSESS):   SCR_BPMAXS ( SLOT ) = MAX (SCR_BPMAXS (SLOT), _MEANBPTARGET );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0225909586 OVLMAX 0.1060617916 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   SUMEP = SUM (OF EPTARGET1 - EPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMEP ;
MPRINT(EM_ASSESS):   SUMCP = SUM (OF CPTARGET1 - CPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMCP ;
MPRINT(EM_ASSESS):   SUMBP = SUM (OF BPTARGET1 - BPTARGET20);
MPRINT(EM_ASSESS):   DROP SUMBP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 8718 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 8718)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 8718 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 8718 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   TOTALEP_TARGET = EPTARGET (GROUP);
MPRINT(EM_ASSESS):   EP_TARGET = TOTALEP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   CUMULATIVETOTALEP + EPTARGET (GROUP);
MPRINT(EM_ASSESS):   CUMULATIVEEP = CUMULATIVETOTALEP / C_NUMOBS;
MPRINT(EM_ASSESS):   MINEP_TARGET = MINEPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXEP_TARGET = MAXEPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNEP_TARGET = EP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXEP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXEP_TARGET + MAXEP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMEP >= C_MAXEP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTEP = MAXEP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALEP = BESTEP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTEP = MIN (MAXEP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTEP < 0 THEN BESTEP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALEP = BESTEP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALEP + BESTTOTALEP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMEP - C_MAXEP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVEEP = BESTCUMTOTALEP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASEEP = SUMEP / 8718;
MPRINT(EM_ASSESS):   BASECUMULATIVEEP + BASEEP;
MPRINT(EM_ASSESS):   BASETOTALEP = SUMEP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALEP + BASETOTALEP;
MPRINT(EM_ASSESS):   TOTALCP_TARGET = CPTARGET (GROUP);
MPRINT(EM_ASSESS):   CP_TARGET = TOTALCP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   CUMULATIVETOTALCP + CPTARGET (GROUP);
MPRINT(EM_ASSESS):   CUMULATIVECP = CUMULATIVETOTALCP / C_NUMOBS;
MPRINT(EM_ASSESS):   MINCP_TARGET = MINCPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXCP_TARGET = MAXCPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNCP_TARGET = CP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXCP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXCP_TARGET + MAXCP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMCP >= C_MAXCP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTCP = MAXCP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALCP = BESTCP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTCP = MIN (MAXCP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTCP < 0 THEN BESTCP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALCP = BESTCP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALCP + BESTTOTALCP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMCP - C_MAXCP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVECP = BESTCUMTOTALCP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASECP = SUMCP / 8718;
MPRINT(EM_ASSESS):   BASECUMULATIVECP + BASECP;
MPRINT(EM_ASSESS):   BASETOTALCP = SUMCP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALCP + BASETOTALCP;
MPRINT(EM_ASSESS):   TOTALBP_TARGET = BPTARGET (GROUP);
MPRINT(EM_ASSESS):   BP_TARGET = TOTALBP_TARGET / NUMOBS;
MPRINT(EM_ASSESS):   MINBP_TARGET = MINBPTARGET (GROUP);
MPRINT(EM_ASSESS):   MAXBP_TARGET = MAXBPTARGET (GROUP);
MPRINT(EM_ASSESS):   MNBP_TARGET = BP_TARGET ;
MPRINT(EM_ASSESS):   DROP C_MAXBP_TARGET LEFTOVER;
MPRINT(EM_ASSESS):   C_MAXBP_TARGET + MAXBP_TARGET * NUMOBS;
MPRINT(EM_ASSESS):   IF SUMBP >= C_MAXBP_TARGET THEN DO;
MPRINT(EM_ASSESS):   BESTBP = MAXBP_TARGET;
MPRINT(EM_ASSESS):   BESTTOTALBP = BESTBP * NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTBP = MIN (MAXBP_TARGET, LEFTOVER / NUMOBS);
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   IF BESTBP < 0 THEN BESTBP = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTTOTALBP = BESTBP * NUMOBS;
MPRINT(EM_ASSESS):   BESTCUMTOTALBP + BESTTOTALBP;
MPRINT(EM_ASSESS):   LEFTOVER = SUMBP - C_MAXBP_TARGET;
MPRINT(EM_ASSESS):   BESTCUMULATIVEBP = BESTCUMTOTALBP / C_NUMOBS;
MPRINT(EM_ASSESS):   BASEBP = SUMBP / 8718;
MPRINT(EM_ASSESS):   BASECUMULATIVEBP + BASEBP;
MPRINT(EM_ASSESS):   BASETOTALBP = SUMBP / 20;
MPRINT(EM_ASSESS):   BASECUMTOTALBP + BASETOTALBP;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_96 - D_TARGET1_100);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_96 - D_TARGET2_100);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN96 - SCR_EPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN96 - SCR_EPMIN100);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX96 - SCR_EPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN96 - SCR_CPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN96 - SCR_CPMIN100);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX96 - SCR_CPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN96 - SCR_BPMEAN100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN96 - SCR_BPMIN100);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX96 - SCR_BPMAX100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_91 - D_TARGET1_95);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_91 - D_TARGET2_95);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN91 - SCR_EPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN91 - SCR_EPMIN95);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX91 - SCR_EPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN91 - SCR_CPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN91 - SCR_CPMIN95);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX91 - SCR_CPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN91 - SCR_BPMEAN95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN91 - SCR_BPMIN95);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX91 - SCR_BPMAX95);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_86 - D_TARGET1_90);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_86 - D_TARGET2_90);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN86 - SCR_EPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN86 - SCR_EPMIN90);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX86 - SCR_EPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN86 - SCR_CPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN86 - SCR_CPMIN90);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX86 - SCR_CPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN86 - SCR_BPMEAN90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN86 - SCR_BPMIN90);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX86 - SCR_BPMAX90);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_81 - D_TARGET1_85);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_81 - D_TARGET2_85);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN81 - SCR_EPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN81 - SCR_EPMIN85);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX81 - SCR_EPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN81 - SCR_CPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN81 - SCR_CPMIN85);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX81 - SCR_CPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN81 - SCR_BPMEAN85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN81 - SCR_BPMIN85);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX81 - SCR_BPMAX85);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_76 - D_TARGET1_80);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_76 - D_TARGET2_80);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN76 - SCR_EPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN76 - SCR_EPMIN80);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX76 - SCR_EPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN76 - SCR_CPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN76 - SCR_CPMIN80);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX76 - SCR_CPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN76 - SCR_BPMEAN80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN76 - SCR_BPMIN80);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX76 - SCR_BPMAX80);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_71 - D_TARGET1_75);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_71 - D_TARGET2_75);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN71 - SCR_EPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN71 - SCR_EPMIN75);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX71 - SCR_EPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN71 - SCR_CPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN71 - SCR_CPMIN75);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX71 - SCR_CPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN71 - SCR_BPMEAN75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN71 - SCR_BPMIN75);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX71 - SCR_BPMAX75);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_66 - D_TARGET1_70);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_66 - D_TARGET2_70);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN66 - SCR_EPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN66 - SCR_EPMIN70);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX66 - SCR_EPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN66 - SCR_CPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN66 - SCR_CPMIN70);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX66 - SCR_CPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN66 - SCR_BPMEAN70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN66 - SCR_BPMIN70);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX66 - SCR_BPMAX70);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_61 - D_TARGET1_65);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_61 - D_TARGET2_65);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN61 - SCR_EPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN61 - SCR_EPMIN65);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX61 - SCR_EPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN61 - SCR_CPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN61 - SCR_CPMIN65);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX61 - SCR_CPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN61 - SCR_BPMEAN65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN61 - SCR_BPMIN65);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX61 - SCR_BPMAX65);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_56 - D_TARGET1_60);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_56 - D_TARGET2_60);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN56 - SCR_EPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN56 - SCR_EPMIN60);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX56 - SCR_EPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN56 - SCR_CPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN56 - SCR_CPMIN60);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX56 - SCR_CPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN56 - SCR_BPMEAN60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN56 - SCR_BPMIN60);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX56 - SCR_BPMAX60);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_51 - D_TARGET1_55);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_51 - D_TARGET2_55);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN51 - SCR_EPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN51 - SCR_EPMIN55);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX51 - SCR_EPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN51 - SCR_CPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN51 - SCR_CPMIN55);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX51 - SCR_CPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN51 - SCR_BPMEAN55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN51 - SCR_BPMIN55);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX51 - SCR_BPMAX55);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_46 - D_TARGET1_50);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_46 - D_TARGET2_50);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN46 - SCR_EPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN46 - SCR_EPMIN50);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX46 - SCR_EPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN46 - SCR_CPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN46 - SCR_CPMIN50);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX46 - SCR_CPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN46 - SCR_BPMEAN50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN46 - SCR_BPMIN50);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX46 - SCR_BPMAX50);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_41 - D_TARGET1_45);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_41 - D_TARGET2_45);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN41 - SCR_EPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN41 - SCR_EPMIN45);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX41 - SCR_EPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN41 - SCR_CPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN41 - SCR_CPMIN45);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX41 - SCR_CPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN41 - SCR_BPMEAN45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN41 - SCR_BPMIN45);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX41 - SCR_BPMAX45);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_36 - D_TARGET1_40);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_36 - D_TARGET2_40);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN36 - SCR_EPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN36 - SCR_EPMIN40);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX36 - SCR_EPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN36 - SCR_CPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN36 - SCR_CPMIN40);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX36 - SCR_CPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN36 - SCR_BPMEAN40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN36 - SCR_BPMIN40);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX36 - SCR_BPMAX40);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_31 - D_TARGET1_35);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_31 - D_TARGET2_35);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN31 - SCR_EPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN31 - SCR_EPMIN35);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX31 - SCR_EPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN31 - SCR_CPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN31 - SCR_CPMIN35);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX31 - SCR_CPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN31 - SCR_BPMEAN35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN31 - SCR_BPMIN35);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX31 - SCR_BPMAX35);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_26 - D_TARGET1_30);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_26 - D_TARGET2_30);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN26 - SCR_EPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN26 - SCR_EPMIN30);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX26 - SCR_EPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN26 - SCR_CPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN26 - SCR_CPMIN30);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX26 - SCR_CPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN26 - SCR_BPMEAN30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN26 - SCR_BPMIN30);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX26 - SCR_BPMAX30);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_21 - D_TARGET1_25);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_21 - D_TARGET2_25);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN21 - SCR_EPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN21 - SCR_EPMIN25);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX21 - SCR_EPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN21 - SCR_CPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN21 - SCR_CPMIN25);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX21 - SCR_CPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN21 - SCR_BPMEAN25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN21 - SCR_BPMIN25);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX21 - SCR_BPMAX25);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_16 - D_TARGET1_20);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_16 - D_TARGET2_20);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN16 - SCR_EPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN16 - SCR_EPMIN20);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX16 - SCR_EPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN16 - SCR_CPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN16 - SCR_CPMIN20);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX16 - SCR_CPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN16 - SCR_BPMEAN20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN16 - SCR_BPMIN20);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX16 - SCR_BPMAX20);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_11 - D_TARGET1_15);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_11 - D_TARGET2_15);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN11 - SCR_EPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN11 - SCR_EPMIN15);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX11 - SCR_EPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN11 - SCR_CPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN11 - SCR_CPMIN15);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX11 - SCR_CPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN11 - SCR_BPMEAN15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN11 - SCR_BPMIN15);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX11 - SCR_BPMAX15);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_6 - D_TARGET1_10);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_6 - D_TARGET2_10);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN6 - SCR_EPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN6 - SCR_EPMIN10);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX6 - SCR_EPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN6 - SCR_CPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN6 - SCR_CPMIN10);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX6 - SCR_CPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN6 - SCR_BPMEAN10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN6 - SCR_BPMIN10);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX6 - SCR_BPMAX10);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   NUMDECISION1 = SUM ( OF D_TARGET1_1 - D_TARGET1_5);
MPRINT(EM_ASSESS):   NUMDECISION2 = SUM ( OF D_TARGET2_1 - D_TARGET2_5);
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = SUM (OF SCR_EPMEAN1 - SCR_EPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_EPMIN = MIN (OF SCR_EPMIN1 - SCR_EPMIN5);
MPRINT(EM_ASSESS):   SCR_EPMAX = MAX (OF SCR_EPMAX1 - SCR_EPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_EPMEAN = .;
MPRINT(EM_ASSESS):   SCR_EPMIN = .;
MPRINT(EM_ASSESS):   SCR_EPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = SUM (OF SCR_CPMEAN1 - SCR_CPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_CPMIN = MIN (OF SCR_CPMIN1 - SCR_CPMIN5);
MPRINT(EM_ASSESS):   SCR_CPMAX = MAX (OF SCR_CPMAX1 - SCR_CPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_CPMEAN = .;
MPRINT(EM_ASSESS):   SCR_CPMIN = .;
MPRINT(EM_ASSESS):   SCR_CPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = SUM (OF SCR_BPMEAN1 - SCR_BPMEAN5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   SCR_BPMIN = MIN (OF SCR_BPMIN1 - SCR_BPMIN5);
MPRINT(EM_ASSESS):   SCR_BPMAX = MAX (OF SCR_BPMAX1 - SCR_BPMAX5);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   SCR_BPMEAN = .;
MPRINT(EM_ASSESS):   SCR_BPMIN = .;
MPRINT(EM_ASSESS):   SCR_BPMAX = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 8718;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS SCR_EPMEAN =
_MEANEP_ SCR_EPMAX = _MAXEP_ SCR_EPMIN = _MINEP_ SCR_CPMEAN = _MEANCP_ SCR_CPMAX = _MAXCP_
SCR_CPMIN = _MINCP_ NUMDECISION1 = D_TARGET_B_1 NUMDECISION2 = D_TARGET_B_2 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" _MEANCP_ =
"Mean Computed Profit" _MAXCP_ = "Max Computed Profit" _MINCP_ = "Min Computed Profit" _MAXEP_
= "Expected profit: upper bound" _MINEP_ = "Expected profit: lower bound" _MEANEP_ = "Mean
Expected Profit" D_TARGET_B_1 = "Report: Number of Decisions = 1" D_TARGET_B_2 = "Report:
Number of Decisions = 2" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC
BASECP = BASEPROFIT BASECUMTOTALCP = BASECUMULATIVETOTALPROFIT BASECUMULATIVECP =
BASECUMULATIVEPROFIT MAXCP_TARGET = _MAXCP_ MNCP_TARGET = _MEANCP_ MINCP_TARGET = _MINCP_
BASETOTALCP = BASETOTALPROFIT CUMULATIVECP = AVGCUMULATIVEPROFIT CUMULATIVETOTALCP=
CUMULATIVETOTALPROFIT CP_TARGET = PROFIT TOTALCP_TARGET = TOTALPROFIT MAXEP_TARGET = _MAXEP_
MINEP_TARGET = _MINEP_ MNEP_TARGET = _MEANEP_ CUMULATIVEEP = CUMULATIVEEXPECTEDPROFIT
CUMULATIVETOTALEP= CUMULATIVETOTALEXPPROFIT TOTALEP_TARGET = TOTALEXPPROFIT BESTBP =
BESTPROFIT BESTCUMTOTALBP = BESTCUMULATIVETOTALPROFIT BESTCUMULATIVEBP = BESTCUMULATIVEPROFIT
BESTTOTALBP = BESTTOTALPROFIT ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MEANCP_ = "Mean Computed Profit" _MAXCP_ = "Max Computed Profit"
_MINCP_ = "Min Computed Profit" AVGCUMULATIVEPROFIT = "Average Cumulative Computed Profit"
CUMULATIVETOTALPROFIT = "Cumulative Total Computed Profit" BESTTOTALPROFIT = "Best Total
Profit" BESTPROFIT = "Best Profit" BASEPROFIT = "Baseline Profit" BASECUMULATIVEPROFIT =
"Baseline Cumulative Profit" BASECUMULATIVETOTALPROFIT = "Baseline Cumulative Total Profit"
BASEPROFIT = "Baseline Profit" BASETOTALPROFIT = "Baseline Total Profit" BESTCUMULATIVEPROFIT
= "Best Cumulative Profit" BESTCUMULATIVETOTALPROFIT = "Best Cumulative Total Profit" PROFIT =
"Average Computed Profit" TOTALPROFIT = "Total Computed Profit" _MEANEP_ = "Mean Expected
Profit" _MINEP_ = "Min Expected Profit" _MAXEP_ = "Max Expected Profit"
CUMULATIVETOTALEXPPROFIT = "Cumulative Total Expected Profit" CUMULATIVEEXPECTEDPROFIT =
"Cumulative Expected Profit" TOTALEXPPROFIT = "Total Expected Profit" _MAXP_ = "Max Posterior
Probability" _MINP_ = "Min Posterior Probability" _MEANP_ = "Mean Posterior Probability"
BASECAP = "Baseline % Captured Response" BASECAPC = "Baseline Cumulative % Captured Response"
BASENUMBEROFEVENTS = "Baseline Number of Events" BASEGAIN = "Baseline Gain" BASELIFT =
"Baseline Lift" BASELIFTC = "Baseline Cumulative Lift" BASERESP = "Baseline % Response"
BASERESPC = "Baseline Cumulative % Response" BASELIFTC = "Baseline Cumulative Lift" BESTCAP =
"Best % Captured Response" BESTCAPC = "Best Cumulative % Captured Response" BESTGAIN = "Best
Gain" BESTRESP = "Best % Response" BESTRESPC = "Best Cumulative % Response" BESTLIFT = "Best
Lift" BESTLIFTC = "Best Cumulative Lift" BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "%
Captured Response" CAPC = "Cumulative % Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT
= "Lift" LIFTC = "Cumulative Lift" NUMNEVENT = "Number of Nonevents" N = "Number of
Observations" EVENT = "Event" RESPC = "Cumulative % Response" NUMBEROFEVENTS = "Number of
Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "TARGET_B";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'Target Variable Indicates for Response to 97NK
Mailing';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "TARGET_B";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'Target Variable Indicates for Response to 97NK
Mailing';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
47375      %let _cn = %sysfunc(getoption(CENTER));
47376      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
47377      proc print data=EMWS1.Boost_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMREPORTFIT noobs label;
47378      var STAT LABEL TRAIN
47379      VALIDATE
47380      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
47381      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
47382      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47383      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
47384      run;
 
NOTE: There were 13 observations read from the data set EMWS1.BOOST_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
47385      title10;
MPRINT(EM_DIAGRAM):   title10;
47386      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
47387      proc sort data=EMWS1.Boost_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Boost_EMCLASSIFICATION nothreads;
47388      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
47389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.BOOST_EMCLASSIFICATION.
NOTE: The data set EMWS1.BOOST_EMCLASSIFICATION has 12 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
47390      %let _cn = %sysfunc(getoption(CENTER));
47391      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
47392      proc print data=EMWS1.Boost_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMCLASSIFICATION noobs label;
47393      var from into pct_row pct_col count percent
47394      Adjustedpercent
47395      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent Adjustedpercent ;
47396      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
47397      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
47398      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
47399      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
47400      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
47401      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
47402      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
47403      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
47404      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47405      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
47406      run;
 
NOTE: BY line has been truncated at least once.
NOTE: The above message was for the following BY group:
      Data Role=TRAIN Target Variable=TARGET_B Target Label=Target Variable Indicates for
      Response to
NOTE: There were 4 observations read from the data set EMWS1.BOOST_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
47407      proc print data=EMWS1.Boost_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMCLASSIFICATION noobs label;
47408      var from into pct_row pct_col count percent
47409      Adjustedpercent
47410      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent Adjustedpercent ;
47411      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
47412      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
47413      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
47414      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
47415      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
47416      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
47417      where _TYPE_='DECISION';
MPRINT(EM_DIAGRAM):   where _TYPE_='DECISION';
47418      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
47419      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47420      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_decisiontable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Decision Table";
MPRINT(EM_DIAGRAM):   run;
47421      run;
 
NOTE: BY line has been truncated at least once.
NOTE: The above message was for the following BY group:
      Data Role=TRAIN Target Variable=TARGET_B Target Label=Target Variable Indicates for
      Response to
NOTE: There were 8 observations read from the data set EMWS1.BOOST_EMCLASSIFICATION.
      WHERE _TYPE_='DECISION';
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
47422      title9;
MPRINT(EM_DIAGRAM):   title9;
47423      title10;
MPRINT(EM_DIAGRAM):   title10;
47424      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
47425      %let _cn = %sysfunc(getoption(CENTER));
47426      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
47427      data EMWS1.Boost_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMEVENTREPORT;
47428      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
47428    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
47429      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
47429    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
47429    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
47429    ! FALSEEVENT
47430      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
47430    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
47430    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
47431         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
47432      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
47433      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
47434      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
47435      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
47436      set EMWS1.Boost_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMEVENTREPORT;
47437      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.BOOST_EMEVENTREPORT.
NOTE: The data set EMWS1.BOOST_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
47438      proc print data=EMWS1.Boost_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMEVENTREPORT noobs label;
47439      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47440      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
47441      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
47442      run;
 
NOTE: BY line has been truncated at least once.
NOTE: The above message was for the following BY group:
      Data Role=TRAIN Target=TARGET_B Target Label=Target Variable Indicates for Response to
      97NK Mai
NOTE: There were 2 observations read from the data set EMWS1.BOOST_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
47443      title10;
MPRINT(EM_DIAGRAM):   title10;
47444      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
47445      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
47446      modify Boost_EMRANK;
MPRINT(EM_DIAGRAM):   modify Boost_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
47447      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
47448      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
47448    ! ;
MPRINT(EM_DIAGRAM):   run;
47449      run;
 
NOTE: MODIFY was successful for EMWS1.BOOST_EMRANK.DATA.
47450      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
 
47451      %let _cn = %sysfunc(getoption(CENTER));
47452      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
47453      proc print data=EMWS1.Boost_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMRANK label noobs;
47454      var
47455      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
47456      by
47457      notsorted DATAROLE
47458      notsorted TARGET
47459      notsorted TARGETLABEL
47460      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
47461      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47462      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
47463      run;
 
NOTE: BY line has been truncated at least once.
NOTE: The above message was for the following BY group:
      Data Role=TRAIN Target Variable=TARGET_B Target Label=Target Variable Indicates for
      Response to
NOTE: There were 40 observations read from the data set EMWS1.BOOST_EMRANK.
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
47464      title10;
MPRINT(EM_DIAGRAM):   title10;
47465      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
47466      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
47467      modify Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
47468      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
47468    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
47469      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
47469    ! ;
MPRINT(EM_DIAGRAM):   run;
47470      run;
 
NOTE: MODIFY was successful for EMWS1.BOOST_EMSCOREDIST.DATA.
47471      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "TARGET_B" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
